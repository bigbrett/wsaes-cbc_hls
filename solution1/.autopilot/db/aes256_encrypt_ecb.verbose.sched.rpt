

================================================================
== Vivado HLS Report for 'aes256_encrypt_ecb'
================================================================
* Date:           Tue Mar 14 13:06:41 2017

* Version:        2016.4 (Build 1733598 on Wed Dec 14 22:59:20 MST 2016)
* Project:        aes256cbc
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|      6.50|        1.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1698|  2335|  1698|  2335|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+------+-----------+-----------+-----------+------+----------+
        |             |   Latency   | Iteration |  Initiation Interval  | Trip |          |
        |  Loop Name  |  min |  max |  Latency  |  achieved |   target  | Count| Pipelined|
        +-------------+------+------+-----------+-----------+-----------+------+----------+
        |- Loop 1     |    32|    32|          2|          -|          -|    16|    no    |
        |- Loop 2     |  1521|  2158| 117 ~ 166 |          -|          -|    13|    no    |
        | + Loop 2.1  |    48|    48|          3|          -|          -|    16|    no    |
        | + Loop 2.2  |    20|    20|          5|          -|          -|     4|    no    |
        |- Loop 3     |    48|    48|          3|          -|          -|    16|    no    |
        +-------------+------+------+-----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 43
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_i)
	4  / (tmp_i)
3 --> 
	2  / true
4 --> 
	5  / (!exitcond)
	28  / (exitcond)
5 --> 
	6  / (!tmp_i5)
	8  / (tmp_i5)
6 --> 
	7  / true
7 --> 
	5  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / (!tmp)
	24  / (tmp & !tmp_93)
	27  / (tmp & tmp_93)
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	19  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	4  / true
27 --> 
	26  / true
28 --> 
	29  / (!tmp_i8)
	31  / (tmp_i8)
29 --> 
	30  / true
30 --> 
	28  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_44 (5)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:0  br label %1


 <State 2>: 4.11ns
ST_2: i_i (7)  [1/1] 0.00ns
:0  %i_i = phi i5 [ -16, %0 ], [ %i_14, %2 ]

ST_2: i_14 (8)  [1/1] 1.72ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:1  %i_14 = add i5 %i_i, -1

ST_2: i_15_cast (9)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:2  %i_15_cast = sext i5 %i_14 to i8

ST_2: tmp_i (10)  [1/1] 1.91ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:3  %tmp_i = icmp eq i5 %i_i, 0

ST_2: empty (11)  [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_2: StgValue_50 (12)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:5  br i1 %tmp_i, label %aes_addRoundKey_cpy.exit.preheader, label %2

ST_2: tmp_i_33 (14)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:0  %tmp_i_33 = zext i8 %i_15_cast to i64

ST_2: ctx_enckey_addr (15)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:1  %ctx_enckey_addr = getelementptr [32 x i8]* @ctx_enckey, i64 0, i64 %tmp_i_33

ST_2: ctx_enckey_load (16)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:2  %ctx_enckey_load = load i8* %ctx_enckey_addr, align 1

ST_2: buf_addr_22 (19)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:5  %buf_addr_22 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_i_33

ST_2: buf_load (20)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:6  %buf_load = load i8* %buf_addr_22, align 1

ST_2: tmp_178_i (23)  [1/1] 1.72ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:9  %tmp_178_i = add i5 %i_i, 15

ST_2: tmp_179_i (24)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:10  %tmp_179_i = zext i5 %tmp_178_i to i64

ST_2: ctx_enckey_addr_1 (25)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:11  %ctx_enckey_addr_1 = getelementptr [32 x i8]* @ctx_enckey, i64 0, i64 %tmp_179_i

ST_2: ctx_enckey_load_1 (26)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:12  %ctx_enckey_load_1 = load i8* %ctx_enckey_addr_1, align 1

ST_2: rcon (31)  [1/1] 0.00ns
aes_addRoundKey_cpy.exit.preheader:0  %rcon = alloca i8

ST_2: buf_addr (32)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:1  %buf_addr = getelementptr [16 x i8]* %buf_r, i64 0, i64 1

ST_2: buf_addr_11 (33)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:2  %buf_addr_11 = getelementptr [16 x i8]* %buf_r, i64 0, i64 5

ST_2: buf_addr_12 (34)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:3  %buf_addr_12 = getelementptr [16 x i8]* %buf_r, i64 0, i64 9

ST_2: buf_addr_13 (35)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:4  %buf_addr_13 = getelementptr [16 x i8]* %buf_r, i64 0, i64 13

ST_2: buf_addr_14 (36)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:5  %buf_addr_14 = getelementptr [16 x i8]* %buf_r, i64 0, i64 10

ST_2: buf_addr_15 (37)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:6  %buf_addr_15 = getelementptr [16 x i8]* %buf_r, i64 0, i64 2

ST_2: buf_addr_16 (38)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:7  %buf_addr_16 = getelementptr [16 x i8]* %buf_r, i64 0, i64 3

ST_2: buf_addr_17 (39)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:8  %buf_addr_17 = getelementptr [16 x i8]* %buf_r, i64 0, i64 15

ST_2: buf_addr_18 (40)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:9  %buf_addr_18 = getelementptr [16 x i8]* %buf_r, i64 0, i64 11

ST_2: buf_addr_19 (41)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:10  %buf_addr_19 = getelementptr [16 x i8]* %buf_r, i64 0, i64 7

ST_2: buf_addr_20 (42)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:11  %buf_addr_20 = getelementptr [16 x i8]* %buf_r, i64 0, i64 14

ST_2: buf_addr_21 (43)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_addRoundKey_cpy.exit.preheader:12  %buf_addr_21 = getelementptr [16 x i8]* %buf_r, i64 0, i64 6

ST_2: StgValue_73 (44)  [1/1] 1.57ns
aes_addRoundKey_cpy.exit.preheader:13  store i8 1, i8* %rcon

ST_2: StgValue_74 (45)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:363
aes_addRoundKey_cpy.exit.preheader:14  br label %aes_addRoundKey_cpy.exit


 <State 3>: 6.15ns
ST_3: ctx_enckey_load (16)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:2  %ctx_enckey_load = load i8* %ctx_enckey_addr, align 1

ST_3: ctx_key_addr (17)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:3  %ctx_key_addr = getelementptr [32 x i8]* @ctx_key, i64 0, i64 %tmp_i_33

ST_3: StgValue_77 (18)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:4  store i8 %ctx_enckey_load, i8* %ctx_key_addr, align 1

ST_3: buf_load (20)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:6  %buf_load = load i8* %buf_addr_22, align 1

ST_3: tmp_176_i (21)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:7  %tmp_176_i = xor i8 %buf_load, %ctx_enckey_load

ST_3: StgValue_80 (22)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:8  store i8 %tmp_176_i, i8* %buf_addr_22, align 1

ST_3: ctx_enckey_load_1 (26)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:12  %ctx_enckey_load_1 = load i8* %ctx_enckey_addr_1, align 1

ST_3: ctx_key_addr_16 (27)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:13  %ctx_key_addr_16 = getelementptr [32 x i8]* @ctx_key, i64 0, i64 %tmp_179_i

ST_3: StgValue_83 (28)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:14  store i8 %ctx_enckey_load_1, i8* %ctx_key_addr_16, align 1

ST_3: StgValue_84 (29)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362
:15  br label %1


 <State 4>: 1.88ns
ST_4: i (47)  [1/1] 0.00ns
aes_addRoundKey_cpy.exit:0  %i = phi i4 [ %i_22, %8 ], [ 1, %aes_addRoundKey_cpy.exit.preheader ]

ST_4: exitcond (48)  [1/1] 1.88ns  loc: aes256cbc/src/aes256ecb.c:363
aes_addRoundKey_cpy.exit:1  %exitcond = icmp eq i4 %i, -2

ST_4: empty_34 (49)  [1/1] 0.00ns
aes_addRoundKey_cpy.exit:2  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13)

ST_4: StgValue_88 (50)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:363
aes_addRoundKey_cpy.exit:3  br i1 %exitcond, label %.preheader.preheader, label %.preheader49.preheader

ST_4: StgValue_89 (52)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
.preheader49.preheader:0  br label %.preheader49

ST_4: StgValue_90 (168)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
.preheader.preheader:0  br label %.preheader


 <State 5>: 4.11ns
ST_5: i_i4 (54)  [1/1] 0.00ns
.preheader49:0  %i_i4 = phi i5 [ %i_16, %3 ], [ -16, %.preheader49.preheader ]

ST_5: i_16 (55)  [1/1] 1.72ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
.preheader49:1  %i_16 = add i5 %i_i4, -1

ST_5: i_17_cast (56)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
.preheader49:2  %i_17_cast = sext i5 %i_16 to i8

ST_5: tmp_i5 (57)  [1/1] 1.91ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
.preheader49:3  %tmp_i5 = icmp eq i5 %i_i4, 0

ST_5: empty_35 (58)  [1/1] 0.00ns
.preheader49:4  %empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_5: StgValue_96 (59)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
.preheader49:5  br i1 %tmp_i5, label %aes_subBytes.exit, label %3

ST_5: tmp_5_i (61)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:0  %tmp_5_i = zext i8 %i_17_cast to i64

ST_5: buf_addr_24 (62)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:1  %buf_addr_24 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_5_i

ST_5: buf_load_31 (63)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:2  %buf_load_31 = load i8* %buf_addr_24, align 1

ST_5: i_19 (70)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:0  %i_19 = load i8* %buf_addr, align 1

ST_5: buf_load_20 (71)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:1  %buf_load_20 = load i8* %buf_addr_11, align 1


 <State 6>: 4.78ns
ST_6: buf_load_31 (63)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:2  %buf_load_31 = load i8* %buf_addr_24, align 1

ST_6: tmp_6_i (64)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:3  %tmp_6_i = zext i8 %buf_load_31 to i64

ST_6: sbox_addr_15 (65)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:4  %sbox_addr_15 = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %tmp_6_i

ST_6: sbox_load_15 (66)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:5  %sbox_load_15 = load i8* %sbox_addr_15, align 1


 <State 7>: 4.78ns
ST_7: sbox_load_15 (66)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:5  %sbox_load_15 = load i8* %sbox_addr_15, align 1

ST_7: StgValue_107 (67)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:6  store i8 %sbox_load_15, i8* %buf_addr_24, align 1

ST_7: StgValue_108 (68)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365
:7  br label %.preheader49


 <State 8>: 2.39ns
ST_8: i_19 (70)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:0  %i_19 = load i8* %buf_addr, align 1

ST_8: buf_load_20 (71)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:1  %buf_load_20 = load i8* %buf_addr_11, align 1

ST_8: buf_load_21 (73)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:3  %buf_load_21 = load i8* %buf_addr_12, align 1

ST_8: buf_load_22 (75)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:5  %buf_load_22 = load i8* %buf_addr_13, align 1


 <State 9>: 2.39ns
ST_9: buf_load_21 (73)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:3  %buf_load_21 = load i8* %buf_addr_12, align 1

ST_9: buf_load_22 (75)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:5  %buf_load_22 = load i8* %buf_addr_13, align 1

ST_9: i_20 (78)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:8  %i_20 = load i8* %buf_addr_14, align 1

ST_9: buf_load_24 (79)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:9  %buf_load_24 = load i8* %buf_addr_15, align 1


 <State 10>: 2.39ns
ST_10: i_20 (78)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:8  %i_20 = load i8* %buf_addr_14, align 1

ST_10: buf_load_24 (79)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:9  %buf_load_24 = load i8* %buf_addr_15, align 1

ST_10: j_2 (82)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:12  %j_2 = load i8* %buf_addr_16, align 1

ST_10: buf_load_26 (83)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:13  %buf_load_26 = load i8* %buf_addr_17, align 1


 <State 11>: 2.39ns
ST_11: j_2 (82)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:12  %j_2 = load i8* %buf_addr_16, align 1

ST_11: buf_load_26 (83)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:13  %buf_load_26 = load i8* %buf_addr_17, align 1

ST_11: buf_load_27 (85)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:15  %buf_load_27 = load i8* %buf_addr_18, align 1

ST_11: buf_load_28 (87)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:17  %buf_load_28 = load i8* %buf_addr_19, align 1


 <State 12>: 2.39ns
ST_12: buf_load_27 (85)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:15  %buf_load_27 = load i8* %buf_addr_18, align 1

ST_12: buf_load_28 (87)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:17  %buf_load_28 = load i8* %buf_addr_19, align 1

ST_12: j_3 (90)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:20  %j_3 = load i8* %buf_addr_20, align 1

ST_12: buf_load_30 (91)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:21  %buf_load_30 = load i8* %buf_addr_21, align 1


 <State 13>: 2.39ns
ST_13: StgValue_129 (72)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:2  store i8 %buf_load_20, i8* %buf_addr, align 1

ST_13: StgValue_130 (74)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:4  store i8 %buf_load_21, i8* %buf_addr_11, align 1

ST_13: j_3 (90)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:20  %j_3 = load i8* %buf_addr_20, align 1

ST_13: buf_load_30 (91)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:21  %buf_load_30 = load i8* %buf_addr_21, align 1


 <State 14>: 2.39ns
ST_14: StgValue_133 (76)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:6  store i8 %buf_load_22, i8* %buf_addr_12, align 1

ST_14: StgValue_134 (77)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:7  store i8 %i_19, i8* %buf_addr_13, align 1


 <State 15>: 2.39ns
ST_15: StgValue_135 (80)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:10  store i8 %buf_load_24, i8* %buf_addr_14, align 1

ST_15: StgValue_136 (81)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:11  store i8 %i_20, i8* %buf_addr_15, align 1


 <State 16>: 2.39ns
ST_16: StgValue_137 (84)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:14  store i8 %buf_load_26, i8* %buf_addr_16, align 1

ST_16: StgValue_138 (86)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:16  store i8 %buf_load_27, i8* %buf_addr_17, align 1


 <State 17>: 2.39ns
ST_17: StgValue_139 (88)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:18  store i8 %buf_load_28, i8* %buf_addr_18, align 1

ST_17: StgValue_140 (89)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:19  store i8 %j_2, i8* %buf_addr_19, align 1


 <State 18>: 2.39ns
ST_18: StgValue_141 (92)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:22  store i8 %buf_load_30, i8* %buf_addr_20, align 1

ST_18: StgValue_142 (93)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366
aes_subBytes.exit:23  store i8 %j_3, i8* %buf_addr_21, align 1

ST_18: StgValue_143 (94)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:255->aes256cbc/src/aes256ecb.c:367
aes_subBytes.exit:24  br label %4


 <State 19>: 5.33ns
ST_19: i_i2 (96)  [1/1] 0.00ns
:0  %i_i2 = phi i5 [ 0, %aes_subBytes.exit ], [ %i_21, %5 ]

ST_19: tmp (97)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:255->aes256cbc/src/aes256ecb.c:367
:1  %tmp = call i1 @_ssdm_op_BitSelect.i1.i5.i32(i5 %i_i2, i32 4)

ST_19: empty_36 (98)  [1/1] 0.00ns
:2  %empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)

ST_19: StgValue_147 (99)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:255->aes256cbc/src/aes256ecb.c:367
:3  br i1 %tmp, label %aes_mixColumns.exit, label %5

ST_19: tmp_i1 (101)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:257->aes256cbc/src/aes256ecb.c:367
:0  %tmp_i1 = zext i5 %i_i2 to i64

ST_19: buf_addr_25 (102)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:257->aes256cbc/src/aes256ecb.c:367
:1  %buf_addr_25 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_i1

ST_19: a (103)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:257->aes256cbc/src/aes256ecb.c:367
:2  %a = load i8* %buf_addr_25, align 1

ST_19: tmp_94 (104)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:3  %tmp_94 = trunc i5 %i_i2 to i4

ST_19: tmp_34_i (105)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:4  %tmp_34_i = or i4 %tmp_94, 1

ST_19: tmp_35_i (106)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:5  %tmp_35_i = zext i4 %tmp_34_i to i64

ST_19: buf_addr_26 (107)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:6  %buf_addr_26 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_35_i

ST_19: b (108)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:7  %b = load i8* %buf_addr_26, align 1

ST_19: i_21 (150)  [1/1] 1.72ns  loc: aes256cbc/src/aes256ecb.c:255->aes256cbc/src/aes256ecb.c:367
:49  %i_21 = add i5 4, %i_i2

ST_19: tmp_93 (153)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:363
aes_mixColumns.exit:0  %tmp_93 = trunc i4 %i to i1

ST_19: StgValue_158 (154)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:368
aes_mixColumns.exit:1  br i1 %tmp_93, label %6, label %7

ST_19: rcon_load_1 (156)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:369
:0  %rcon_load_1 = load i8* %rcon

ST_19: rcon_1 (157)  [2/2] 5.33ns  loc: aes256cbc/src/aes256ecb.c:369
:1  %rcon_1 = call fastcc i8 @aes_expandEncKey([32 x i8]* @ctx_key, i8 %rcon_load_1)

ST_19: StgValue_161 (162)  [2/2] 1.57ns  loc: aes256cbc/src/aes256ecb.c:368
:0  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 16)


 <State 20>: 2.39ns
ST_20: a (103)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:257->aes256cbc/src/aes256ecb.c:367
:2  %a = load i8* %buf_addr_25, align 1

ST_20: b (108)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:258->aes256cbc/src/aes256ecb.c:367
:7  %b = load i8* %buf_addr_26, align 1

ST_20: tmp_36_i (109)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367
:8  %tmp_36_i = or i4 %tmp_94, 2

ST_20: tmp_37_i (110)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367
:9  %tmp_37_i = zext i4 %tmp_36_i to i64

ST_20: buf_addr_27 (111)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367
:10  %buf_addr_27 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_37_i

ST_20: c (112)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367
:11  %c = load i8* %buf_addr_27, align 1

ST_20: tmp_38_i (113)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:260->aes256cbc/src/aes256ecb.c:367
:12  %tmp_38_i = or i4 %tmp_94, 3

ST_20: tmp_39_i (114)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:260->aes256cbc/src/aes256ecb.c:367
:13  %tmp_39_i = zext i4 %tmp_38_i to i64

ST_20: buf_addr_28 (115)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:260->aes256cbc/src/aes256ecb.c:367
:14  %buf_addr_28 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_39_i

ST_20: d (116)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:260->aes256cbc/src/aes256ecb.c:367
:15  %d = load i8* %buf_addr_28, align 1


 <State 21>: 6.50ns
ST_21: c (112)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367
:11  %c = load i8* %buf_addr_27, align 1

ST_21: d (116)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:260->aes256cbc/src/aes256ecb.c:367
:15  %d = load i8* %buf_addr_28, align 1

ST_21: x_assign (117)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:261->aes256cbc/src/aes256ecb.c:367
:16  %x_assign = xor i8 %b, %a

ST_21: tmp_41_i (118)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:261->aes256cbc/src/aes256ecb.c:367
:17  %tmp_41_i = xor i8 %c, %x_assign

ST_21: e (119)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:261->aes256cbc/src/aes256ecb.c:367
:18  %e = xor i8 %d, %tmp_41_i

ST_21: y (120)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:189->aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367
:19  %y = shl i8 %x_assign, 1

ST_21: tmp_96 (121)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_44_i)
:20  %tmp_96 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %x_assign, i32 7)

ST_21: tmp_1_i_i (122)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_44_i)
:21  %tmp_1_i_i = xor i8 %y, 27

ST_21: y_21 (123)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_44_i)
:22  %y_21 = select i1 %tmp_96, i8 %tmp_1_i_i, i8 %y

ST_21: tmp1 (124)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_44_i)
:23  %tmp1 = xor i8 %y_21, %e

ST_21: tmp_44_i (125)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 (out node of the LUT)
:24  %tmp_44_i = xor i8 %tmp1, %a

ST_21: x_assign_9 (127)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367
:26  %x_assign_9 = xor i8 %c, %b

ST_21: y_22 (128)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:189->aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367
:27  %y_22 = shl i8 %x_assign_9, 1

ST_21: tmp_98 (129)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_48_i)
:28  %tmp_98 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %x_assign_9, i32 7)

ST_21: tmp_1_i10_i (130)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_48_i)
:29  %tmp_1_i10_i = xor i8 %y_22, 27

ST_21: y_23 (131)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_48_i)
:30  %y_23 = select i1 %tmp_98, i8 %tmp_1_i10_i, i8 %y_22

ST_21: tmp2 (132)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_48_i)
:31  %tmp2 = xor i8 %y_23, %e

ST_21: tmp_48_i (133)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367 (out node of the LUT)
:32  %tmp_48_i = xor i8 %tmp2, %b

ST_21: x_assign_s (135)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367
:34  %x_assign_s = xor i8 %d, %c

ST_21: y_24 (136)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:189->aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367
:35  %y_24 = shl i8 %x_assign_s, 1

ST_21: tmp_100 (137)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_52_i)
:36  %tmp_100 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %x_assign_s, i32 7)

ST_21: tmp_1_i14_i (138)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_52_i)
:37  %tmp_1_i14_i = xor i8 %y_24, 27

ST_21: y_25 (139)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_52_i)
:38  %y_25 = select i1 %tmp_100, i8 %tmp_1_i14_i, i8 %y_24

ST_21: tmp3 (140)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_52_i)
:39  %tmp3 = xor i8 %y_25, %e

ST_21: tmp_52_i (141)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 (out node of the LUT)
:40  %tmp_52_i = xor i8 %tmp3, %c

ST_21: x_assign_1 (143)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367
:42  %x_assign_1 = xor i8 %d, %a

ST_21: y_26 (144)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:189->aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367
:43  %y_26 = shl i8 %x_assign_1, 1

ST_21: tmp_102 (145)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_56_i)
:44  %tmp_102 = call i1 @_ssdm_op_BitSelect.i1.i8.i32(i8 %x_assign_1, i32 7)

ST_21: tmp_1_i18_i (146)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_56_i)
:45  %tmp_1_i18_i = xor i8 %y_26, 27

ST_21: y_27 (147)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:190->aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367 (grouped into LUT with out node tmp_56_i)
:46  %y_27 = select i1 %tmp_102, i8 %tmp_1_i18_i, i8 %y_26

ST_21: tmp_56_i (148)  [1/1] 1.37ns  loc: aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367 (out node of the LUT)
:47  %tmp_56_i = xor i8 %y_27, %tmp_41_i


 <State 22>: 2.39ns
ST_22: StgValue_203 (126)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367
:25  store i8 %tmp_44_i, i8* %buf_addr_25, align 1

ST_22: StgValue_204 (134)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:263->aes256cbc/src/aes256ecb.c:367
:33  store i8 %tmp_48_i, i8* %buf_addr_26, align 1


 <State 23>: 2.39ns
ST_23: StgValue_205 (142)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367
:41  store i8 %tmp_52_i, i8* %buf_addr_27, align 1

ST_23: StgValue_206 (149)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:265->aes256cbc/src/aes256ecb.c:367
:48  store i8 %tmp_56_i, i8* %buf_addr_28, align 1

ST_23: StgValue_207 (151)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:255->aes256cbc/src/aes256ecb.c:367
:50  br label %4


 <State 24>: 1.57ns
ST_24: rcon_1 (157)  [1/2] 0.00ns  loc: aes256cbc/src/aes256ecb.c:369
:1  %rcon_1 = call fastcc i8 @aes_expandEncKey([32 x i8]* @ctx_key, i8 %rcon_load_1)

ST_24: StgValue_209 (159)  [1/1] 1.57ns  loc: aes256cbc/src/aes256ecb.c:369
:3  store i8 %rcon_1, i8* %rcon


 <State 25>: 1.57ns
ST_25: StgValue_210 (158)  [2/2] 1.57ns  loc: aes256cbc/src/aes256ecb.c:369
:2  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 0)


 <State 26>: 0.80ns
ST_26: StgValue_211 (158)  [1/2] 0.00ns  loc: aes256cbc/src/aes256ecb.c:369
:2  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 0)

ST_26: StgValue_212 (160)  [1/1] 0.00ns
:4  br label %8

ST_26: i_22 (165)  [1/1] 0.80ns  loc: aes256cbc/src/aes256ecb.c:363
:0  %i_22 = add i4 %i, 1

ST_26: StgValue_214 (166)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:363
:1  br label %aes_addRoundKey_cpy.exit


 <State 27>: 0.00ns
ST_27: StgValue_215 (162)  [1/2] 0.00ns  loc: aes256cbc/src/aes256ecb.c:368
:0  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 16)

ST_27: StgValue_216 (163)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:368
:1  br label %8


 <State 28>: 4.11ns
ST_28: i_i1 (170)  [1/1] 0.00ns
.preheader:0  %i_i1 = phi i5 [ %i_15, %9 ], [ -16, %.preheader.preheader ]

ST_28: i_15 (171)  [1/1] 1.72ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
.preheader:1  %i_15 = add i5 %i_i1, -1

ST_28: i_16_cast (172)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
.preheader:2  %i_16_cast = sext i5 %i_15 to i8

ST_28: tmp_i8 (173)  [1/1] 1.91ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
.preheader:3  %tmp_i8 = icmp eq i5 %i_i1, 0

ST_28: empty_37 (174)  [1/1] 0.00ns
.preheader:4  %empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)

ST_28: StgValue_222 (175)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
.preheader:5  br i1 %tmp_i8, label %aes_subBytes.exit24, label %9

ST_28: tmp_5_i1 (177)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:0  %tmp_5_i1 = zext i8 %i_16_cast to i64

ST_28: buf_addr_23 (178)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:1  %buf_addr_23 = getelementptr [16 x i8]* %buf_r, i64 0, i64 %tmp_5_i1

ST_28: buf_load_18 (179)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:2  %buf_load_18 = load i8* %buf_addr_23, align 1

ST_28: i_17 (187)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:1  %i_17 = load i8* %buf_addr, align 1

ST_28: buf_load_7 (188)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:2  %buf_load_7 = load i8* %buf_addr_11, align 1


 <State 29>: 4.78ns
ST_29: buf_load_18 (179)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:2  %buf_load_18 = load i8* %buf_addr_23, align 1

ST_29: tmp_6_i1 (180)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:3  %tmp_6_i1 = zext i8 %buf_load_18 to i64

ST_29: sbox_addr (181)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:4  %sbox_addr = getelementptr inbounds [256 x i8]* @sbox, i64 0, i64 %tmp_6_i1

ST_29: sbox_load (182)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:5  %sbox_load = load i8* %sbox_addr, align 1


 <State 30>: 4.78ns
ST_30: sbox_load (182)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:5  %sbox_load = load i8* %sbox_addr, align 1

ST_30: StgValue_233 (183)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:6  store i8 %sbox_load, i8* %buf_addr_23, align 1

ST_30: StgValue_234 (184)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371
:7  br label %.preheader


 <State 31>: 2.39ns
ST_31: i_17 (187)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:1  %i_17 = load i8* %buf_addr, align 1

ST_31: buf_load_7 (188)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:2  %buf_load_7 = load i8* %buf_addr_11, align 1

ST_31: buf_load_8 (190)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:4  %buf_load_8 = load i8* %buf_addr_12, align 1

ST_31: buf_load_9 (192)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:6  %buf_load_9 = load i8* %buf_addr_13, align 1


 <State 32>: 2.39ns
ST_32: buf_load_8 (190)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:4  %buf_load_8 = load i8* %buf_addr_12, align 1

ST_32: buf_load_9 (192)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:6  %buf_load_9 = load i8* %buf_addr_13, align 1

ST_32: i_18 (195)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:9  %i_18 = load i8* %buf_addr_14, align 1

ST_32: buf_load_11 (196)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:10  %buf_load_11 = load i8* %buf_addr_15, align 1


 <State 33>: 2.39ns
ST_33: i_18 (195)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:9  %i_18 = load i8* %buf_addr_14, align 1

ST_33: buf_load_11 (196)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:10  %buf_load_11 = load i8* %buf_addr_15, align 1

ST_33: j (199)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:13  %j = load i8* %buf_addr_16, align 1

ST_33: buf_load_13 (200)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:14  %buf_load_13 = load i8* %buf_addr_17, align 1


 <State 34>: 2.39ns
ST_34: j (199)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:13  %j = load i8* %buf_addr_16, align 1

ST_34: buf_load_13 (200)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:14  %buf_load_13 = load i8* %buf_addr_17, align 1

ST_34: buf_load_14 (202)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:16  %buf_load_14 = load i8* %buf_addr_18, align 1

ST_34: buf_load_15 (204)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:18  %buf_load_15 = load i8* %buf_addr_19, align 1


 <State 35>: 2.39ns
ST_35: buf_load_14 (202)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:16  %buf_load_14 = load i8* %buf_addr_18, align 1

ST_35: buf_load_15 (204)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:18  %buf_load_15 = load i8* %buf_addr_19, align 1

ST_35: j_1 (207)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:21  %j_1 = load i8* %buf_addr_20, align 1

ST_35: buf_load_17 (208)  [2/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:22  %buf_load_17 = load i8* %buf_addr_21, align 1


 <State 36>: 2.39ns
ST_36: StgValue_255 (189)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:3  store i8 %buf_load_7, i8* %buf_addr, align 1

ST_36: StgValue_256 (191)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:5  store i8 %buf_load_8, i8* %buf_addr_11, align 1

ST_36: j_1 (207)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:21  %j_1 = load i8* %buf_addr_20, align 1

ST_36: buf_load_17 (208)  [1/2] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:22  %buf_load_17 = load i8* %buf_addr_21, align 1


 <State 37>: 2.39ns
ST_37: StgValue_259 (193)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:7  store i8 %buf_load_9, i8* %buf_addr_12, align 1

ST_37: StgValue_260 (194)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:8  store i8 %i_17, i8* %buf_addr_13, align 1


 <State 38>: 2.39ns
ST_38: StgValue_261 (197)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:11  store i8 %buf_load_11, i8* %buf_addr_14, align 1

ST_38: StgValue_262 (198)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:12  store i8 %i_18, i8* %buf_addr_15, align 1


 <State 39>: 2.39ns
ST_39: StgValue_263 (201)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:15  store i8 %buf_load_13, i8* %buf_addr_16, align 1

ST_39: StgValue_264 (203)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:17  store i8 %buf_load_14, i8* %buf_addr_17, align 1


 <State 40>: 5.33ns
ST_40: rcon_load (186)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:373
aes_subBytes.exit24:0  %rcon_load = load i8* %rcon

ST_40: StgValue_266 (205)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:19  store i8 %buf_load_15, i8* %buf_addr_18, align 1

ST_40: StgValue_267 (206)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:20  store i8 %j, i8* %buf_addr_19, align 1

ST_40: call_ret1 (211)  [2/2] 5.33ns  loc: aes256cbc/src/aes256ecb.c:373
aes_subBytes.exit24:25  %call_ret1 = call fastcc i8 @aes_expandEncKey([32 x i8]* @ctx_key, i8 %rcon_load)


 <State 41>: 2.39ns
ST_41: StgValue_269 (209)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:23  store i8 %buf_load_17, i8* %buf_addr_20, align 1

ST_41: StgValue_270 (210)  [1/1] 2.39ns  loc: aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372
aes_subBytes.exit24:24  store i8 %j_1, i8* %buf_addr_21, align 1

ST_41: call_ret1 (211)  [1/2] 0.00ns  loc: aes256cbc/src/aes256ecb.c:373
aes_subBytes.exit24:25  %call_ret1 = call fastcc i8 @aes_expandEncKey([32 x i8]* @ctx_key, i8 %rcon_load)


 <State 42>: 1.57ns
ST_42: StgValue_272 (212)  [2/2] 1.57ns  loc: aes256cbc/src/aes256ecb.c:374
aes_subBytes.exit24:26  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 0)


 <State 43>: 0.00ns
ST_43: StgValue_273 (212)  [1/2] 0.00ns  loc: aes256cbc/src/aes256ecb.c:374
aes_subBytes.exit24:26  call fastcc void @aes_addRoundKey([16 x i8]* %buf_r, [32 x i8]* @ctx_key, i6 0)

ST_43: StgValue_274 (213)  [1/1] 0.00ns  loc: aes256cbc/src/aes256ecb.c:375
aes_subBytes.exit24:27  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) [7]  (1.57 ns)

 <State 2>: 4.11ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) [7]  (0 ns)
	'add' operation ('tmp_178_i', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) [23]  (1.72 ns)
	'getelementptr' operation ('ctx_enckey_addr_1', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) [25]  (0 ns)
	'load' operation ('ctx_enckey_load_1', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) on array 'ctx_enckey' [26]  (2.39 ns)

 <State 3>: 6.15ns
The critical path consists of the following:
	'load' operation ('ctx_enckey_load', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) on array 'ctx_enckey' [16]  (2.39 ns)
	'xor' operation ('tmp_176_i', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) [21]  (1.37 ns)
	'store' operation (aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362) of variable 'tmp_176_i', aes256cbc/src/aes256ecb.c:222->aes256cbc/src/aes256ecb.c:362 on array 'buf_r' [22]  (2.39 ns)

 <State 4>: 1.88ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', aes256cbc/src/aes256ecb.c:363) [47]  (0 ns)
	'icmp' operation ('exitcond', aes256cbc/src/aes256ecb.c:363) [48]  (1.88 ns)

 <State 5>: 4.11ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) [54]  (0 ns)
	'add' operation ('i', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) [55]  (1.72 ns)
	'getelementptr' operation ('buf_addr_24', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) [62]  (0 ns)
	'load' operation ('buf_load_31', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) on array 'buf_r' [63]  (2.39 ns)

 <State 6>: 4.78ns
The critical path consists of the following:
	'load' operation ('buf_load_31', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) on array 'buf_r' [63]  (2.39 ns)
	'getelementptr' operation ('sbox_addr_15', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) [65]  (0 ns)
	'load' operation ('sbox_load_15', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) on array 'sbox' [66]  (2.39 ns)

 <State 7>: 4.78ns
The critical path consists of the following:
	'load' operation ('sbox_load_15', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) on array 'sbox' [66]  (2.39 ns)
	'store' operation (aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365) of variable 'sbox_load_15', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:365 on array 'buf_r' [67]  (2.39 ns)

 <State 8>: 2.39ns
The critical path consists of the following:
	'load' operation ('i', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366) on array 'buf_r' [70]  (2.39 ns)

 <State 9>: 2.39ns
The critical path consists of the following:
	'load' operation ('buf_load_21', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366) on array 'buf_r' [73]  (2.39 ns)

 <State 10>: 2.39ns
The critical path consists of the following:
	'load' operation ('i', aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366) on array 'buf_r' [78]  (2.39 ns)

 <State 11>: 2.39ns
The critical path consists of the following:
	'load' operation ('j', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366) on array 'buf_r' [82]  (2.39 ns)

 <State 12>: 2.39ns
The critical path consists of the following:
	'load' operation ('buf_load_27', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366) on array 'buf_r' [85]  (2.39 ns)

 <State 13>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_20', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [72]  (2.39 ns)

 <State 14>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_22', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [76]  (2.39 ns)

 <State 15>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_24', aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [80]  (2.39 ns)

 <State 16>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_26', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [84]  (2.39 ns)

 <State 17>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_28', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [88]  (2.39 ns)

 <State 18>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366) of variable 'buf_load_30', aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:366 on array 'buf_r' [92]  (2.39 ns)

 <State 19>: 5.33ns
The critical path consists of the following:
	'load' operation ('rcon_load_1', aes256cbc/src/aes256ecb.c:369) on local variable 'rcon' [156]  (0 ns)
	'call' operation ('rcon', aes256cbc/src/aes256ecb.c:369) to 'aes_expandEncKey' [157]  (5.33 ns)

 <State 20>: 2.39ns
The critical path consists of the following:
	'load' operation ('a', aes256cbc/src/aes256ecb.c:257->aes256cbc/src/aes256ecb.c:367) on array 'buf_r' [103]  (2.39 ns)

 <State 21>: 6.5ns
The critical path consists of the following:
	'load' operation ('c', aes256cbc/src/aes256ecb.c:259->aes256cbc/src/aes256ecb.c:367) on array 'buf_r' [112]  (2.39 ns)
	'xor' operation ('tmp_41_i', aes256cbc/src/aes256ecb.c:261->aes256cbc/src/aes256ecb.c:367) [118]  (1.37 ns)
	'xor' operation ('e', aes256cbc/src/aes256ecb.c:261->aes256cbc/src/aes256ecb.c:367) [119]  (1.37 ns)
	'xor' operation ('tmp1', aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367) [124]  (0 ns)
	'xor' operation ('tmp_44_i', aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367) [125]  (1.37 ns)

 <State 22>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367) of variable 'tmp_44_i', aes256cbc/src/aes256ecb.c:262->aes256cbc/src/aes256ecb.c:367 on array 'buf_r' [126]  (2.39 ns)

 <State 23>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367) of variable 'tmp_52_i', aes256cbc/src/aes256ecb.c:264->aes256cbc/src/aes256ecb.c:367 on array 'buf_r' [142]  (2.39 ns)

 <State 24>: 1.57ns
The critical path consists of the following:
	'call' operation ('rcon', aes256cbc/src/aes256ecb.c:369) to 'aes_expandEncKey' [157]  (0 ns)
	'store' operation (aes256cbc/src/aes256ecb.c:369) of variable 'rcon', aes256cbc/src/aes256ecb.c:369 on local variable 'rcon' [159]  (1.57 ns)

 <State 25>: 1.57ns
The critical path consists of the following:
	'call' operation (aes256cbc/src/aes256ecb.c:369) to 'aes_addRoundKey' [158]  (1.57 ns)

 <State 26>: 0.8ns
The critical path consists of the following:
	'add' operation ('i', aes256cbc/src/aes256ecb.c:363) [165]  (0.8 ns)

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 4.11ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) [170]  (0 ns)
	'add' operation ('i', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) [171]  (1.72 ns)
	'getelementptr' operation ('buf_addr_23', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) [178]  (0 ns)
	'load' operation ('buf_load_18', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) on array 'buf_r' [179]  (2.39 ns)

 <State 29>: 4.78ns
The critical path consists of the following:
	'load' operation ('buf_load_18', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) on array 'buf_r' [179]  (2.39 ns)
	'getelementptr' operation ('sbox_addr', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) [181]  (0 ns)
	'load' operation ('sbox_load', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) on array 'sbox' [182]  (2.39 ns)

 <State 30>: 4.78ns
The critical path consists of the following:
	'load' operation ('sbox_load', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) on array 'sbox' [182]  (2.39 ns)
	'store' operation (aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371) of variable 'sbox_load', aes256cbc/src/aes256ecb.c:198->aes256cbc/src/aes256ecb.c:371 on array 'buf_r' [183]  (2.39 ns)

 <State 31>: 2.39ns
The critical path consists of the following:
	'load' operation ('i', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372) on array 'buf_r' [187]  (2.39 ns)

 <State 32>: 2.39ns
The critical path consists of the following:
	'load' operation ('buf_load_8', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372) on array 'buf_r' [190]  (2.39 ns)

 <State 33>: 2.39ns
The critical path consists of the following:
	'load' operation ('i', aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372) on array 'buf_r' [195]  (2.39 ns)

 <State 34>: 2.39ns
The critical path consists of the following:
	'load' operation ('j', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372) on array 'buf_r' [199]  (2.39 ns)

 <State 35>: 2.39ns
The critical path consists of the following:
	'load' operation ('buf_load_14', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372) on array 'buf_r' [202]  (2.39 ns)

 <State 36>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372) of variable 'buf_load_7', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372 on array 'buf_r' [189]  (2.39 ns)

 <State 37>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372) of variable 'buf_load_9', aes256cbc/src/aes256ecb.c:231->aes256cbc/src/aes256ecb.c:372 on array 'buf_r' [193]  (2.39 ns)

 <State 38>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372) of variable 'buf_load_11', aes256cbc/src/aes256ecb.c:232->aes256cbc/src/aes256ecb.c:372 on array 'buf_r' [197]  (2.39 ns)

 <State 39>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372) of variable 'buf_load_13', aes256cbc/src/aes256ecb.c:233->aes256cbc/src/aes256ecb.c:372 on array 'buf_r' [201]  (2.39 ns)

 <State 40>: 5.33ns
The critical path consists of the following:
	'load' operation ('rcon_load', aes256cbc/src/aes256ecb.c:373) on local variable 'rcon' [186]  (0 ns)
	'call' operation ('rcon', aes256cbc/src/aes256ecb.c:373) to 'aes_expandEncKey' [211]  (5.33 ns)

 <State 41>: 2.39ns
The critical path consists of the following:
	'store' operation (aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372) of variable 'buf_load_17', aes256cbc/src/aes256ecb.c:234->aes256cbc/src/aes256ecb.c:372 on array 'buf_r' [209]  (2.39 ns)

 <State 42>: 1.57ns
The critical path consists of the following:
	'call' operation (aes256cbc/src/aes256ecb.c:374) to 'aes_addRoundKey' [212]  (1.57 ns)

 <State 43>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
