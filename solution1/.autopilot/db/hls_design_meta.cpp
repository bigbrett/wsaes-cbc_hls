#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_memptr_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memptr_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memptr_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memptr_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memptr_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_memptr_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memptr_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_memptr_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memptr_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memptr_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_memptr_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_memptr_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_memptr_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memptr_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memptr_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memptr_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_memptr_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_memptr_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_memptr_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memptr_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memptr_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memptr_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memptr_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_memptr_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memptr_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_memptr_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_memptr_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_memptr_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_memptr_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_memptr_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_memptr_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_memptr_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_memptr_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memptr_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memptr_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memptr_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_memptr_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_memptr_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memptr_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_memptr_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_memptr_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_memptr_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_memptr_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_memptr_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_memptr_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_p0_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_p0_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "aes256cbc";
