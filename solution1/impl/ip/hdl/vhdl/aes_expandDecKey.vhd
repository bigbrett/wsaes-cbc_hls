-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes_expandDecKey is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rc_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_key_ce0 : OUT STD_LOGIC;
    ctx_key_we0 : OUT STD_LOGIC;
    ctx_key_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_key_ce1 : OUT STD_LOGIC;
    ctx_key_we1 : OUT STD_LOGIC;
    ctx_key_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of aes_expandDecKey is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv8_8D : STD_LOGIC_VECTOR (7 downto 0) := "10001101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sbox_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_ce0 : STD_LOGIC;
    signal sbox_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_ce1 : STD_LOGIC;
    signal sbox_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal reg_365 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal reg_374 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_342_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_378 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_348_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_383 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i_27_fu_394_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_27_reg_663 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_key_addr_1_reg_673 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_3_reg_684 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_5_reg_694 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_7_reg_705 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_150_cast_fu_502_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_150_cast_reg_733 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_115_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ctx_key_addr_9_reg_744 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_11_reg_755 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_13_reg_765 : STD_LOGIC_VECTOR (4 downto 0);
    signal ctx_key_addr_15_reg_776 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_s_fu_586_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_s_reg_781 : STD_LOGIC_VECTOR (3 downto 0);
    signal rc_write_assign_fu_626_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rc_write_assign_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_fu_638_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_reg_800 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_312 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_1_reg_324 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_90_fu_400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_94_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_96_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_fu_438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_101_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_104_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_109_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_111_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_113_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_128_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_131_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_133_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_136_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_138_fu_559_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_141_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_143_fu_581_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_118_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_122_fu_644_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal tmp_93_fu_410_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_95_fu_421_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_98_fu_432_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_100_fu_443_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_103_fu_454_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_105_fu_465_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_126_fu_506_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_130_fu_522_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_132_fu_532_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_135_fu_543_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_137_fu_553_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_140_fu_564_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_142_fu_575_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_116_fu_602_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_26_fu_615_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_618_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_611_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_632_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);

    component aes_expandDecKey_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sbox_U : component aes_expandDecKey_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_address0,
        ce0 => sbox_ce0,
        q0 => sbox_q0,
        address1 => sbox_address1,
        ce1 => sbox_ce1,
        q1 => sbox_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_1_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                i_1_reg_324 <= i_s_reg_781;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                i_1_reg_324 <= ap_const_lv4_C;
            end if; 
        end if;
    end process;

    i_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                i_reg_312 <= i_27_reg_663;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_312 <= ap_const_lv5_1C;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14))) then
                    ctx_key_addr_11_reg_755(3 downto 1) <= tmp_133_fu_538_p1(5 - 1 downto 0)(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15))) then
                    ctx_key_addr_13_reg_765(0) <= tmp_138_fu_559_p1(5 - 1 downto 0)(0);    ctx_key_addr_13_reg_765(3 downto 2) <= tmp_138_fu_559_p1(5 - 1 downto 0)(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16))) then
                    ctx_key_addr_15_reg_776(3 downto 2) <= tmp_143_fu_581_p1(5 - 1 downto 0)(3 downto 2);
                i_s_reg_781 <= i_s_fu_586_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_388_p2 = ap_const_lv1_0)))) then
                ctx_key_addr_1_reg_673 <= tmp_91_fu_405_p1(5 - 1 downto 0);
                i_27_reg_663 <= i_27_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then
                    ctx_key_addr_3_reg_684(4 downto 1) <= tmp_96_fu_427_p1(5 - 1 downto 0)(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4))) then
                    ctx_key_addr_5_reg_694(0) <= tmp_101_fu_449_p1(5 - 1 downto 0)(0);    ctx_key_addr_5_reg_694(4 downto 2) <= tmp_101_fu_449_p1(5 - 1 downto 0)(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                    ctx_key_addr_7_reg_705(4 downto 2) <= tmp_106_fu_471_p1(5 - 1 downto 0)(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_115_fu_496_p2))) then
                    ctx_key_addr_9_reg_744(3 downto 0) <= tmp_128_fu_517_p1(5 - 1 downto 0)(3 downto 0);
                    tmp_150_cast_reg_733(3 downto 0) <= tmp_150_cast_fu_502_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then
                rc_write_assign_reg_796 <= rc_write_assign_fu_626_p2;
                tmp_119_reg_800 <= tmp_119_fu_638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then
                reg_354 <= grp_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)))) then
                reg_360 <= grp_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then
                reg_365 <= grp_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)))) then
                reg_370 <= ctx_key_q0;
                reg_374 <= ctx_key_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)))) then
                reg_378 <= grp_fu_342_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then
                reg_383 <= grp_fu_348_p2;
            end if;
        end if;
    end process;
    ctx_key_addr_3_reg_684(0) <= '1';
    ctx_key_addr_5_reg_694(1) <= '1';
    ctx_key_addr_7_reg_705(1 downto 0) <= "11";
    tmp_150_cast_reg_733(4) <= '0';
    ctx_key_addr_9_reg_744(4) <= '0';
    ctx_key_addr_11_reg_755(0) <= '1';
    ctx_key_addr_11_reg_755(4) <= '0';
    ctx_key_addr_13_reg_765(1) <= '1';
    ctx_key_addr_13_reg_765(4) <= '0';
    ctx_key_addr_15_reg_776(1 downto 0) <= "11";
    ctx_key_addr_15_reg_776(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_388_p2, tmp_115_fu_496_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((tmp_fu_388_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (not((ap_const_lv1_0 = tmp_115_fu_496_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state23)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= rc_write_assign_reg_796;

    ctx_key_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state21, ap_CS_fsm_state2, tmp_fu_388_p2, ctx_key_addr_1_reg_673, ctx_key_addr_5_reg_694, ap_CS_fsm_state13, tmp_115_fu_496_p2, ctx_key_addr_9_reg_744, ctx_key_addr_13_reg_765, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, tmp_90_fu_400_p1, tmp_94_fu_416_p1, tmp_99_fu_438_p1, tmp_104_fu_460_p1, tmp_127_fu_512_p1, tmp_131_fu_527_p1, tmp_136_fu_548_p1, tmp_141_fu_570_p1, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_address0 <= ap_const_lv5_2;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)))) then 
            ctx_key_address0 <= ap_const_lv5_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ctx_key_address0 <= ap_const_lv5_1F;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            ctx_key_address0 <= ctx_key_addr_13_reg_765;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            ctx_key_address0 <= ctx_key_addr_9_reg_744;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            ctx_key_address0 <= tmp_141_fu_570_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            ctx_key_address0 <= tmp_136_fu_548_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ctx_key_address0 <= tmp_131_fu_527_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv1_0 = tmp_115_fu_496_p2)))) then 
            ctx_key_address0 <= ap_const_lv5_1D;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_115_fu_496_p2))) then 
            ctx_key_address0 <= tmp_127_fu_512_p1(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            ctx_key_address0 <= ap_const_lv5_12;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            ctx_key_address0 <= ap_const_lv5_10;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_key_address0 <= ap_const_lv5_E;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_key_address0 <= ctx_key_addr_5_reg_694;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_key_address0 <= ctx_key_addr_1_reg_673;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ctx_key_address0 <= tmp_104_fu_460_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            ctx_key_address0 <= tmp_99_fu_438_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_address0 <= tmp_94_fu_416_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_388_p2 = ap_const_lv1_0))) then 
            ctx_key_address0 <= ap_const_lv5_C;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_388_p2 = ap_const_lv1_0)))) then 
            ctx_key_address0 <= tmp_90_fu_400_p1(5 - 1 downto 0);
        else 
            ctx_key_address0 <= "XXXXX";
        end if; 
    end process;


    ctx_key_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state21, ap_CS_fsm_state2, tmp_fu_388_p2, ctx_key_addr_3_reg_684, ctx_key_addr_7_reg_705, ap_CS_fsm_state13, tmp_115_fu_496_p2, ctx_key_addr_11_reg_755, ctx_key_addr_15_reg_776, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, tmp_91_fu_405_p1, tmp_96_fu_427_p1, tmp_101_fu_449_p1, tmp_106_fu_471_p1, tmp_128_fu_517_p1, tmp_133_fu_538_p1, tmp_138_fu_559_p1, tmp_143_fu_581_p1, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_address1 <= ap_const_lv5_3;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)))) then 
            ctx_key_address1 <= ap_const_lv5_1;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ctx_key_address1 <= ap_const_lv5_1C;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
            ctx_key_address1 <= ctx_key_addr_15_reg_776;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            ctx_key_address1 <= ctx_key_addr_11_reg_755;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            ctx_key_address1 <= tmp_143_fu_581_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            ctx_key_address1 <= tmp_138_fu_559_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            ctx_key_address1 <= tmp_133_fu_538_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv1_0 = tmp_115_fu_496_p2)))) then 
            ctx_key_address1 <= ap_const_lv5_1E;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_115_fu_496_p2))) then 
            ctx_key_address1 <= tmp_128_fu_517_p1(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)))) then 
            ctx_key_address1 <= ap_const_lv5_13;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)))) then 
            ctx_key_address1 <= ap_const_lv5_11;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            ctx_key_address1 <= ap_const_lv5_F;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            ctx_key_address1 <= ctx_key_addr_7_reg_705;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            ctx_key_address1 <= ctx_key_addr_3_reg_684;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5))) then 
            ctx_key_address1 <= tmp_106_fu_471_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state4))) then 
            ctx_key_address1 <= tmp_101_fu_449_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_address1 <= tmp_96_fu_427_p1(5 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_388_p2 = ap_const_lv1_0))) then 
            ctx_key_address1 <= ap_const_lv5_D;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_388_p2 = ap_const_lv1_0)))) then 
            ctx_key_address1 <= tmp_91_fu_405_p1(5 - 1 downto 0);
        else 
            ctx_key_address1 <= "XXXXX";
        end if; 
    end process;


    ctx_key_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state21, ap_CS_fsm_state2, tmp_fu_388_p2, ap_CS_fsm_state13, tmp_115_fu_496_p2, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_388_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_115_fu_496_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_388_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv1_0 = tmp_115_fu_496_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_ce0 <= ap_const_logic_1;
        else 
            ctx_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state21, ap_CS_fsm_state2, tmp_fu_388_p2, ap_CS_fsm_state13, tmp_115_fu_496_p2, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((tmp_fu_388_p2 = ap_const_lv1_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and (ap_const_lv1_0 = tmp_115_fu_496_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and (tmp_fu_388_p2 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not((ap_const_lv1_0 = tmp_115_fu_496_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_ce1 <= ap_const_logic_1;
        else 
            ctx_key_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_d0_assign_proc : process(reg_354, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_365, reg_378, ap_CS_fsm_state11, ap_CS_fsm_state22, tmp_119_reg_800, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            ctx_key_d0 <= tmp_119_reg_800;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_d0 <= reg_378;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            ctx_key_d0 <= reg_365;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            ctx_key_d0 <= reg_354;
        else 
            ctx_key_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_key_d1_assign_proc : process(reg_354, ap_CS_fsm_state6, ap_CS_fsm_state17, reg_360, ap_CS_fsm_state11, ap_CS_fsm_state22, reg_383, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_d1 <= reg_383;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            ctx_key_d1 <= reg_354;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            ctx_key_d1 <= reg_360;
        else 
            ctx_key_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_key_we0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_we0 <= ap_const_logic_1;
        else 
            ctx_key_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_we1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state22, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state23)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)))) then 
            ctx_key_we1 <= ap_const_logic_1;
        else 
            ctx_key_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_336_p2 <= (ctx_key_q1 xor ctx_key_q0);
    grp_fu_342_p2 <= (ctx_key_q0 xor sbox_q0);
    grp_fu_348_p2 <= (ctx_key_q1 xor sbox_q1);
    i_27_fu_394_p2 <= std_logic_vector(unsigned(i_reg_312) + unsigned(ap_const_lv5_1C));
    i_s_fu_586_p2 <= std_logic_vector(unsigned(i_1_reg_324) + unsigned(ap_const_lv4_C));
    rc_write_assign_fu_626_p2 <= (tmp_117_fu_618_p3 xor tmp_11_fu_611_p1);

    sbox_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state21, tmp_s_fu_476_p1, tmp_111_fu_486_p1, tmp_118_fu_592_p1, tmp_122_fu_644_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            sbox_address0 <= tmp_122_fu_644_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            sbox_address0 <= tmp_118_fu_592_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            sbox_address0 <= tmp_111_fu_486_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            sbox_address0 <= tmp_s_fu_476_p1(8 - 1 downto 0);
        else 
            sbox_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state21, tmp_109_fu_481_p1, tmp_113_fu_491_p1, tmp_120_fu_597_p1, tmp_124_fu_649_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then 
            sbox_address1 <= tmp_124_fu_649_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            sbox_address1 <= tmp_120_fu_597_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
            sbox_address1 <= tmp_113_fu_491_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
            sbox_address1 <= tmp_109_fu_481_p1(8 - 1 downto 0);
        else 
            sbox_address1 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            sbox_ce0 <= ap_const_logic_1;
        else 
            sbox_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sbox_ce1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state20, ap_CS_fsm_state10, ap_CS_fsm_state21)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)))) then 
            sbox_ce1 <= ap_const_logic_1;
        else 
            sbox_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_632_p2 <= (ctx_key_q0 xor rc_write_assign_fu_626_p2);
    tmp_100_fu_443_p2 <= (i_reg_312 or ap_const_lv5_2);
    tmp_101_fu_449_p1 <= std_logic_vector(resize(unsigned(tmp_100_fu_443_p2),64));
    tmp_103_fu_454_p2 <= std_logic_vector(unsigned(i_reg_312) + unsigned(ap_const_lv5_1F));
    tmp_104_fu_460_p1 <= std_logic_vector(resize(unsigned(tmp_103_fu_454_p2),64));
    tmp_105_fu_465_p2 <= (i_reg_312 or ap_const_lv5_3);
    tmp_106_fu_471_p1 <= std_logic_vector(resize(unsigned(tmp_105_fu_465_p2),64));
    tmp_109_fu_481_p1 <= std_logic_vector(resize(unsigned(reg_374),64));
    tmp_111_fu_486_p1 <= std_logic_vector(resize(unsigned(reg_370),64));
    tmp_113_fu_491_p1 <= std_logic_vector(resize(unsigned(reg_374),64));
    tmp_115_fu_496_p2 <= "1" when (i_1_reg_324 = ap_const_lv4_0) else "0";
    tmp_116_fu_602_p4 <= rc_read(7 downto 1);
    tmp_117_fu_618_p3 <= 
        ap_const_lv8_8D when (tmp_26_fu_615_p1(0) = '1') else 
        ap_const_lv8_0;
    tmp_118_fu_592_p1 <= std_logic_vector(resize(unsigned(reg_370),64));
    tmp_119_fu_638_p2 <= (tmp1_fu_632_p2 xor sbox_q0);
    tmp_11_fu_611_p1 <= std_logic_vector(resize(unsigned(tmp_116_fu_602_p4),8));
    tmp_120_fu_597_p1 <= std_logic_vector(resize(unsigned(reg_374),64));
    tmp_122_fu_644_p1 <= std_logic_vector(resize(unsigned(reg_370),64));
    tmp_124_fu_649_p1 <= std_logic_vector(resize(unsigned(reg_374),64));
    tmp_126_fu_506_p2 <= std_logic_vector(unsigned(tmp_150_cast_fu_502_p1) + unsigned(ap_const_lv5_1C));
        tmp_127_fu_512_p1 <= std_logic_vector(resize(signed(tmp_126_fu_506_p2),64));

    tmp_128_fu_517_p1 <= std_logic_vector(resize(unsigned(i_1_reg_324),64));
    tmp_130_fu_522_p2 <= std_logic_vector(unsigned(tmp_150_cast_reg_733) + unsigned(ap_const_lv5_1D));
        tmp_131_fu_527_p1 <= std_logic_vector(resize(signed(tmp_130_fu_522_p2),64));

    tmp_132_fu_532_p2 <= (i_1_reg_324 or ap_const_lv4_1);
    tmp_133_fu_538_p1 <= std_logic_vector(resize(unsigned(tmp_132_fu_532_p2),64));
    tmp_135_fu_543_p2 <= std_logic_vector(unsigned(tmp_150_cast_reg_733) + unsigned(ap_const_lv5_1E));
        tmp_136_fu_548_p1 <= std_logic_vector(resize(signed(tmp_135_fu_543_p2),64));

    tmp_137_fu_553_p2 <= (i_1_reg_324 or ap_const_lv4_2);
    tmp_138_fu_559_p1 <= std_logic_vector(resize(unsigned(tmp_137_fu_553_p2),64));
    tmp_140_fu_564_p2 <= std_logic_vector(unsigned(i_1_reg_324) + unsigned(ap_const_lv4_F));
    tmp_141_fu_570_p1 <= std_logic_vector(resize(unsigned(tmp_140_fu_564_p2),64));
    tmp_142_fu_575_p2 <= (i_1_reg_324 or ap_const_lv4_3);
    tmp_143_fu_581_p1 <= std_logic_vector(resize(unsigned(tmp_142_fu_575_p2),64));
    tmp_150_cast_fu_502_p1 <= std_logic_vector(resize(unsigned(i_1_reg_324),5));
    tmp_26_fu_615_p1 <= rc_read(1 - 1 downto 0);
    tmp_90_fu_400_p1 <= std_logic_vector(resize(unsigned(i_27_fu_394_p2),64));
    tmp_91_fu_405_p1 <= std_logic_vector(resize(unsigned(i_reg_312),64));
    tmp_93_fu_410_p2 <= std_logic_vector(unsigned(i_reg_312) + unsigned(ap_const_lv5_1D));
    tmp_94_fu_416_p1 <= std_logic_vector(resize(unsigned(tmp_93_fu_410_p2),64));
    tmp_95_fu_421_p2 <= (i_reg_312 or ap_const_lv5_1);
    tmp_96_fu_427_p1 <= std_logic_vector(resize(unsigned(tmp_95_fu_421_p2),64));
    tmp_98_fu_432_p2 <= std_logic_vector(unsigned(i_reg_312) + unsigned(ap_const_lv5_1E));
    tmp_99_fu_438_p1 <= std_logic_vector(resize(unsigned(tmp_98_fu_432_p2),64));
    tmp_fu_388_p2 <= "1" when (unsigned(i_reg_312) > unsigned(ap_const_lv5_10)) else "0";
    tmp_s_fu_476_p1 <= std_logic_vector(resize(unsigned(reg_370),64));
end behav;
