-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity aes256_encrypt_ecb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buf_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    buf_r_ce0 : OUT STD_LOGIC;
    buf_r_we0 : OUT STD_LOGIC;
    buf_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    buf_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    buf_r_ce1 : OUT STD_LOGIC;
    buf_r_we1 : OUT STD_LOGIC;
    buf_r_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    buf_r_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_enckey_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_enckey_ce0 : OUT STD_LOGIC;
    ctx_enckey_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_enckey_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_enckey_ce1 : OUT STD_LOGIC;
    ctx_enckey_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_key_ce0 : OUT STD_LOGIC;
    ctx_key_we0 : OUT STD_LOGIC;
    ctx_key_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    ctx_key_ce1 : OUT STD_LOGIC;
    ctx_key_we1 : OUT STD_LOGIC;
    ctx_key_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ctx_key_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of aes256_encrypt_ecb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (42 downto 0) := "0000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (42 downto 0) := "0000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (42 downto 0) := "0000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (42 downto 0) := "0000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (42 downto 0) := "0000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (42 downto 0) := "0000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (42 downto 0) := "0001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (42 downto 0) := "0010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (42 downto 0) := "0100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (42 downto 0) := "1000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sbox_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_ce0 : STD_LOGIC;
    signal sbox_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_392 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal reg_406 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal reg_413 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_420 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal reg_427 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_434 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_441 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_448 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal reg_455 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal tmp_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_98_fu_578_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal i_25_fu_467_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_25_reg_829 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_i_22_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_22_reg_837 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_addr_22_reg_847 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_179_i_fu_495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_179_i_reg_852 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_27_fu_518_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_27_reg_944 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal buf_addr_24_reg_952 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i5_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal buf_addr_25_reg_966 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_99_fu_557_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_99_reg_971 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_addr_26_reg_977 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_32_fu_572_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_32_reg_982 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_98_reg_987 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_addr_27_reg_991 : STD_LOGIC_VECTOR (3 downto 0);
    signal buf_addr_28_reg_996 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_44_i_fu_654_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_i_reg_1001 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_48_i_fu_700_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_i_reg_1006 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_i_fu_746_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_52_i_reg_1011 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_i_fu_786_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_i_reg_1016 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_33_fu_797_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_aes_addRoundKey_fu_377_ap_done : STD_LOGIC;
    signal i_26_fu_803_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_26_reg_1026 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal buf_addr_23_reg_1034 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i8_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_aes_expandEncKey_fu_368_ap_start : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_ap_done : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_ap_idle : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_ap_ready : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_k_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_aes_expandEncKey_fu_368_k_ce0 : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_k_we0 : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_k_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_expandEncKey_fu_368_k_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_aes_expandEncKey_fu_368_k_ce1 : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_k_we1 : STD_LOGIC;
    signal grp_aes_expandEncKey_fu_368_k_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_expandEncKey_fu_368_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_addRoundKey_fu_377_ap_start : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_ap_idle : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_ap_ready : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_buf_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_addRoundKey_fu_377_buf_r_ce0 : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_buf_r_we0 : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_buf_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_aes_addRoundKey_fu_377_key_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_aes_addRoundKey_fu_377_key_ce0 : STD_LOGIC;
    signal grp_aes_addRoundKey_fu_377_key_offset : STD_LOGIC_VECTOR (5 downto 0);
    signal i_i_reg_312 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_reg_323 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_i4_reg_335 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i2_reg_346 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal i_i1_reg_357 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_reg_grp_aes_expandEncKey_fu_368_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_reg_grp_aes_addRoundKey_fu_377_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_5_i_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_i_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i1_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_35_i_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_i_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_i_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_i1_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_i1_fu_824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rcon_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_176_i_fu_505_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal i_25_cast_fu_473_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_178_i_fu_489_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_27_cast_fu_524_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_i_fu_561_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_36_i_fu_582_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_38_i_fu_592_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_assign_fu_602_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_i_fu_608_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_fu_620_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_101_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_fu_634_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_21_fu_640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal e_fu_614_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_648_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_9_fu_660_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_22_fu_666_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_103_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i10_i_fu_680_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_23_fu_686_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_694_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_s_fu_706_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_24_fu_712_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_105_fu_718_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i14_i_fu_726_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_25_fu_732_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_740_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_1_fu_752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_26_fu_758_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_107_fu_764_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i18_i_fu_772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_27_fu_778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_26_cast_fu_809_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (42 downto 0);

    component aes_expandEncKey IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        k_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        k_ce0 : OUT STD_LOGIC;
        k_we0 : OUT STD_LOGIC;
        k_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        k_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        k_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        k_ce1 : OUT STD_LOGIC;
        k_we1 : OUT STD_LOGIC;
        k_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        k_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        rc_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component aes_addRoundKey IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_we0 : OUT STD_LOGIC;
        buf_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        buf_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        key_ce0 : OUT STD_LOGIC;
        key_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        key_offset : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component aes_expandEncKey_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sbox_U : component aes_expandEncKey_dEe
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_address0,
        ce0 => sbox_ce0,
        q0 => sbox_q0,
        address1 => ap_const_lv8_0,
        ce1 => ap_const_logic_0,
        q1 => sbox_q1,
        address2 => ap_const_lv8_0,
        ce2 => ap_const_logic_0,
        q2 => sbox_q2);

    grp_aes_expandEncKey_fu_368 : component aes_expandEncKey
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_expandEncKey_fu_368_ap_start,
        ap_done => grp_aes_expandEncKey_fu_368_ap_done,
        ap_idle => grp_aes_expandEncKey_fu_368_ap_idle,
        ap_ready => grp_aes_expandEncKey_fu_368_ap_ready,
        k_address0 => grp_aes_expandEncKey_fu_368_k_address0,
        k_ce0 => grp_aes_expandEncKey_fu_368_k_ce0,
        k_we0 => grp_aes_expandEncKey_fu_368_k_we0,
        k_d0 => grp_aes_expandEncKey_fu_368_k_d0,
        k_q0 => ctx_key_q0,
        k_address1 => grp_aes_expandEncKey_fu_368_k_address1,
        k_ce1 => grp_aes_expandEncKey_fu_368_k_ce1,
        k_we1 => grp_aes_expandEncKey_fu_368_k_we1,
        k_d1 => grp_aes_expandEncKey_fu_368_k_d1,
        k_q1 => ctx_key_q1,
        rc_read => reg_462,
        ap_return => grp_aes_expandEncKey_fu_368_ap_return);

    grp_aes_addRoundKey_fu_377 : component aes_addRoundKey
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_addRoundKey_fu_377_ap_start,
        ap_done => grp_aes_addRoundKey_fu_377_ap_done,
        ap_idle => grp_aes_addRoundKey_fu_377_ap_idle,
        ap_ready => grp_aes_addRoundKey_fu_377_ap_ready,
        buf_r_address0 => grp_aes_addRoundKey_fu_377_buf_r_address0,
        buf_r_ce0 => grp_aes_addRoundKey_fu_377_buf_r_ce0,
        buf_r_we0 => grp_aes_addRoundKey_fu_377_buf_r_we0,
        buf_r_d0 => grp_aes_addRoundKey_fu_377_buf_r_d0,
        buf_r_q0 => buf_r_q0,
        key_address0 => grp_aes_addRoundKey_fu_377_key_address0,
        key_ce0 => grp_aes_addRoundKey_fu_377_key_ce0,
        key_q0 => ctx_key_q0,
        key_offset => grp_aes_addRoundKey_fu_377_key_offset);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_aes_addRoundKey_fu_377_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_aes_addRoundKey_fu_377_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and not((tmp_fu_544_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_98_fu_578_p1))) or ((ap_const_lv1_1 = ap_CS_fsm_state25)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)))) then 
                    ap_reg_grp_aes_addRoundKey_fu_377_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_aes_addRoundKey_fu_377_ap_ready)) then 
                    ap_reg_grp_aes_addRoundKey_fu_377_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_aes_expandEncKey_fu_368_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_aes_expandEncKey_fu_368_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and not((tmp_fu_544_p3 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_98_fu_578_p1)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
                    ap_reg_grp_aes_expandEncKey_fu_368_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_aes_expandEncKey_fu_368_ap_ready)) then 
                    ap_reg_grp_aes_expandEncKey_fu_368_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i1_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_lv1_0 = exitcond_fu_512_p2)))) then 
                i_i1_reg_357 <= ap_const_lv5_10;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
                i_i1_reg_357 <= i_26_reg_1026;
            end if; 
        end if;
    end process;

    i_i2_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
                i_i2_reg_346 <= i_32_reg_982;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18))) then 
                i_i2_reg_346 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_i4_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = exitcond_fu_512_p2))) then 
                i_i4_reg_335 <= ap_const_lv5_10;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                i_i4_reg_335 <= i_27_reg_944;
            end if; 
        end if;
    end process;

    i_i_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
                i_i_reg_312 <= i_25_reg_829;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_i_reg_312 <= ap_const_lv5_10;
            end if; 
        end if;
    end process;

    i_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_fu_477_p2)))) then 
                i_reg_323 <= ap_const_lv4_1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state26) and not(((ap_const_lv1_0 = tmp_98_reg_987) and (ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done))))) then 
                i_reg_323 <= i_33_fu_797_p2;
            end if; 
        end if;
    end process;

    rcon_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24) and not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done)))) then 
                rcon_fu_80 <= grp_aes_expandEncKey_fu_368_ap_return;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_fu_477_p2)))) then 
                rcon_fu_80 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)))) then 
                reg_392 <= buf_r_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
                reg_392 <= buf_r_q0;
            end if; 
        end if;
    end process;

    reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)))) then 
                reg_399 <= buf_r_q0;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)))) then 
                reg_399 <= buf_r_q1;
            end if; 
        end if;
    end process;

    reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)))) then 
                reg_406 <= buf_r_q0;
            elsif ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)))) then 
                reg_406 <= buf_r_q1;
            end if; 
        end if;
    end process;

    reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32))) then 
                reg_413 <= buf_r_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
                reg_413 <= buf_r_q0;
            end if; 
        end if;
    end process;

    reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                reg_420 <= buf_r_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                reg_420 <= buf_r_q1;
            end if; 
        end if;
    end process;

    reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33))) then 
                reg_427 <= buf_r_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10))) then 
                reg_427 <= buf_r_q0;
            end if; 
        end if;
    end process;

    reg_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state34))) then 
                reg_434 <= buf_r_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
                reg_434 <= buf_r_q1;
            end if; 
        end if;
    end process;

    reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state34))) then 
                reg_441 <= buf_r_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state11))) then 
                reg_441 <= buf_r_q0;
            end if; 
        end if;
    end process;

    reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
                reg_448 <= buf_r_q0;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                reg_448 <= buf_r_q1;
            end if; 
        end if;
    end process;

    reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state35))) then 
                reg_455 <= buf_r_q1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12))) then 
                reg_455 <= buf_r_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_i_fu_477_p2))) then
                buf_addr_22_reg_847 <= tmp_i_22_fu_483_p1(4 - 1 downto 0);
                    tmp_179_i_reg_852(4 downto 0) <= tmp_179_i_fu_495_p1(4 downto 0);
                    tmp_i_22_reg_837(7 downto 0) <= tmp_i_22_fu_483_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = tmp_i8_fu_813_p2))) then
                buf_addr_23_reg_1034 <= tmp_5_i1_fu_819_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = tmp_i5_fu_528_p2))) then
                buf_addr_24_reg_952 <= tmp_5_i_fu_534_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19) and (tmp_fu_544_p3 = ap_const_lv1_0))) then
                buf_addr_25_reg_966 <= tmp_i1_fu_552_p1(4 - 1 downto 0);
                    buf_addr_26_reg_977(3 downto 1) <= tmp_35_i_fu_567_p1(4 - 1 downto 0)(3 downto 1);
                i_32_reg_982 <= i_32_fu_572_p2;
                tmp_99_reg_971 <= tmp_99_fu_557_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20))) then
                    buf_addr_27_reg_991(0) <= tmp_37_i_fu_587_p1(4 - 1 downto 0)(0);    buf_addr_27_reg_991(3 downto 2) <= tmp_37_i_fu_587_p1(4 - 1 downto 0)(3 downto 2);
                    buf_addr_28_reg_996(3 downto 2) <= tmp_39_i_fu_597_p1(4 - 1 downto 0)(3 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                i_25_reg_829 <= i_25_fu_467_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state28))) then
                i_26_reg_1026 <= i_26_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5))) then
                i_27_reg_944 <= i_27_fu_518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state19) and not((tmp_fu_544_p3 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_98_fu_578_p1)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then
                reg_462 <= rcon_fu_80;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21))) then
                tmp_44_i_reg_1001 <= tmp_44_i_fu_654_p2;
                tmp_48_i_reg_1006 <= tmp_48_i_fu_700_p2;
                tmp_52_i_reg_1011 <= tmp_52_i_fu_746_p2;
                tmp_56_i_reg_1016 <= tmp_56_i_fu_786_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19) and not((tmp_fu_544_p3 = ap_const_lv1_0)))) then
                tmp_98_reg_987 <= tmp_98_fu_578_p1;
            end if;
        end if;
    end process;
    tmp_i_22_reg_837(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    tmp_179_i_reg_852(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    buf_addr_26_reg_977(0) <= '1';
    buf_addr_27_reg_991(1) <= '1';
    buf_addr_28_reg_996(1 downto 0) <= "11";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_fu_544_p3, tmp_98_fu_578_p1, tmp_i_fu_477_p2, tmp_i5_fu_528_p2, tmp_98_reg_987, grp_aes_addRoundKey_fu_377_ap_done, tmp_i8_fu_813_p2, grp_aes_expandEncKey_fu_368_ap_done, exitcond_fu_512_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = tmp_i_fu_477_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_lv1_0 = exitcond_fu_512_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_lv1_0 = tmp_i5_fu_528_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if ((not((tmp_fu_544_p3 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_98_fu_578_p1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                elsif ((not((tmp_fu_544_p3 = ap_const_lv1_0)) and (ap_const_lv1_0 = tmp_98_fu_578_p1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state24 => 
                if (not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (not(((ap_const_lv1_0 = tmp_98_reg_987) and (ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (not((ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (not((ap_const_lv1_0 = tmp_i8_fu_813_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (not((ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42 downto 42);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_aes_addRoundKey_fu_377_ap_done, ap_CS_fsm_state43)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1)) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not((ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_aes_addRoundKey_fu_377_ap_done, ap_CS_fsm_state43)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state43) and not((ap_const_logic_0 = grp_aes_addRoundKey_fu_377_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state32, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state12, ap_CS_fsm_state35, ap_CS_fsm_state19, tmp_fu_544_p3, ap_CS_fsm_state40, ap_CS_fsm_state2, tmp_i_22_fu_483_p1, buf_addr_22_reg_847, ap_CS_fsm_state5, tmp_i5_fu_528_p2, buf_addr_26_reg_977, tmp_98_reg_987, buf_addr_28_reg_996, ap_CS_fsm_state26, ap_CS_fsm_state28, grp_aes_addRoundKey_fu_377_buf_r_address0, ap_CS_fsm_state3, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43, tmp_5_i_fu_534_p1, tmp_35_i_fu_567_p1, tmp_39_i_fu_597_p1, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            buf_r_address0 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
            buf_r_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            buf_r_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)))) then 
            buf_r_address0 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            buf_r_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            buf_r_address0 <= buf_addr_28_reg_996;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            buf_r_address0 <= buf_addr_26_reg_977;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            buf_r_address0 <= tmp_39_i_fu_597_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19) and (tmp_fu_544_p3 = ap_const_lv1_0))) then 
            buf_r_address0 <= tmp_35_i_fu_567_p1(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state28)))) then 
            buf_r_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            buf_r_address0 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            buf_r_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            buf_r_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)))) then 
            buf_r_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then 
            buf_r_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = tmp_i5_fu_528_p2))))) then 
            buf_r_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = tmp_i5_fu_528_p2))) then 
            buf_r_address0 <= tmp_5_i_fu_534_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            buf_r_address0 <= buf_addr_22_reg_847;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            buf_r_address0 <= tmp_i_22_fu_483_p1(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            buf_r_address0 <= grp_aes_addRoundKey_fu_377_buf_r_address0;
        else 
            buf_r_address0 <= "XXXX";
        end if; 
    end process;


    buf_r_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state32, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state12, ap_CS_fsm_state35, ap_CS_fsm_state19, tmp_fu_544_p3, ap_CS_fsm_state40, ap_CS_fsm_state5, buf_addr_24_reg_952, buf_addr_25_reg_966, buf_addr_27_reg_991, ap_CS_fsm_state28, buf_addr_23_reg_1034, tmp_i8_fu_813_p2, ap_CS_fsm_state7, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state41, tmp_i1_fu_552_p1, tmp_37_i_fu_587_p1, tmp_5_i1_fu_819_p1, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            buf_r_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)))) then 
            buf_r_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)))) then 
            buf_r_address1 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)))) then 
            buf_r_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)))) then 
            buf_r_address1 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state30))) then 
            buf_r_address1 <= buf_addr_23_reg_1034;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = tmp_i8_fu_813_p2))) then 
            buf_r_address1 <= tmp_5_i1_fu_819_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            buf_r_address1 <= buf_addr_27_reg_991;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            buf_r_address1 <= buf_addr_25_reg_966;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state20))) then 
            buf_r_address1 <= tmp_37_i_fu_587_p1(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state19) and (tmp_fu_544_p3 = ap_const_lv1_0))) then 
            buf_r_address1 <= tmp_i1_fu_552_p1(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not((ap_const_lv1_0 = tmp_i8_fu_813_p2))))) then 
            buf_r_address1 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            buf_r_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)))) then 
            buf_r_address1 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)))) then 
            buf_r_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)))) then 
            buf_r_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)))) then 
            buf_r_address1 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
            buf_r_address1 <= buf_addr_24_reg_952;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)))) then 
            buf_r_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        else 
            buf_r_address1 <= "XXXX";
        end if; 
    end process;


    buf_r_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state32, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state12, ap_CS_fsm_state35, ap_CS_fsm_state19, tmp_fu_544_p3, ap_CS_fsm_state40, ap_CS_fsm_state2, ap_CS_fsm_state5, tmp_i5_fu_528_p2, tmp_98_reg_987, ap_CS_fsm_state26, ap_CS_fsm_state28, grp_aes_expandEncKey_fu_368_ap_done, grp_aes_addRoundKey_fu_377_buf_r_ce0, ap_CS_fsm_state3, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state2)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_lv1_0 = tmp_i5_fu_528_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and (tmp_fu_544_p3 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state28)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_lv1_0 = tmp_i5_fu_528_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))))) then 
            buf_r_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            buf_r_ce0 <= grp_aes_addRoundKey_fu_377_buf_r_ce0;
        else 
            buf_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state20, ap_CS_fsm_state31, ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state9, ap_CS_fsm_state32, ap_CS_fsm_state10, ap_CS_fsm_state33, ap_CS_fsm_state11, ap_CS_fsm_state34, ap_CS_fsm_state12, ap_CS_fsm_state35, ap_CS_fsm_state19, tmp_fu_544_p3, ap_CS_fsm_state40, ap_CS_fsm_state5, ap_CS_fsm_state28, tmp_i8_fu_813_p2, grp_aes_expandEncKey_fu_368_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state41, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and (tmp_fu_544_p3 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and (ap_const_lv1_0 = tmp_i8_fu_813_p2)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not((ap_const_lv1_0 = tmp_i8_fu_813_p2))) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))))) then 
            buf_r_ce1 <= ap_const_logic_1;
        else 
            buf_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_d0_assign_proc : process(reg_392, reg_399, ap_CS_fsm_state13, ap_CS_fsm_state36, reg_406, reg_413, reg_420, reg_427, reg_434, reg_441, reg_448, reg_455, ap_CS_fsm_state40, tmp_98_reg_987, tmp_48_i_reg_1006, tmp_56_i_reg_1016, ap_CS_fsm_state26, grp_aes_addRoundKey_fu_377_buf_r_d0, ap_CS_fsm_state3, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43, tmp_176_i_fu_505_p2, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            buf_r_d0 <= reg_455;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            buf_r_d0 <= reg_441;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
            buf_r_d0 <= reg_427;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
            buf_r_d0 <= reg_413;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            buf_r_d0 <= tmp_56_i_reg_1016;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            buf_r_d0 <= tmp_48_i_reg_1006;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            buf_r_d0 <= reg_399;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            buf_r_d0 <= reg_434;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            buf_r_d0 <= reg_448;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            buf_r_d0 <= reg_420;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            buf_r_d0 <= reg_392;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            buf_r_d0 <= reg_406;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            buf_r_d0 <= tmp_176_i_fu_505_p2;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            buf_r_d0 <= grp_aes_addRoundKey_fu_377_buf_r_d0;
        else 
            buf_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    buf_r_d1_assign_proc : process(sbox_q0, reg_392, reg_399, ap_CS_fsm_state13, ap_CS_fsm_state36, reg_406, reg_413, reg_420, reg_427, reg_434, reg_441, reg_448, reg_455, ap_CS_fsm_state40, tmp_44_i_reg_1001, tmp_52_i_reg_1011, ap_CS_fsm_state7, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state41, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state40))) then 
            buf_r_d1 <= reg_434;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state39))) then 
            buf_r_d1 <= reg_448;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state38))) then 
            buf_r_d1 <= reg_420;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state37))) then 
            buf_r_d1 <= reg_392;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state23))) then 
            buf_r_d1 <= tmp_52_i_reg_1011;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state22))) then 
            buf_r_d1 <= tmp_44_i_reg_1001;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)))) then 
            buf_r_d1 <= reg_406;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state17))) then 
            buf_r_d1 <= reg_455;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state16))) then 
            buf_r_d1 <= reg_441;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state15))) then 
            buf_r_d1 <= reg_427;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state14))) then 
            buf_r_d1 <= reg_413;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            buf_r_d1 <= reg_399;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)))) then 
            buf_r_d1 <= sbox_q0;
        else 
            buf_r_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_r_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state40, tmp_98_reg_987, ap_CS_fsm_state26, grp_aes_expandEncKey_fu_368_ap_done, grp_aes_addRoundKey_fu_377_buf_r_we0, ap_CS_fsm_state3, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))))) then 
            buf_r_we0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            buf_r_we0 <= grp_aes_addRoundKey_fu_377_buf_r_we0;
        else 
            buf_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_we1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state36, ap_CS_fsm_state40, grp_aes_expandEncKey_fu_368_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state18, ap_CS_fsm_state23, ap_CS_fsm_state30, ap_CS_fsm_state41, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((ap_const_logic_0 = grp_aes_expandEncKey_fu_368_ap_done))))) then 
            buf_r_we1 <= ap_const_logic_1;
        else 
            buf_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ctx_enckey_address0 <= tmp_i_22_fu_483_p1(5 - 1 downto 0);
    ctx_enckey_address1 <= tmp_179_i_fu_495_p1(5 - 1 downto 0);

    ctx_enckey_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            ctx_enckey_ce0 <= ap_const_logic_1;
        else 
            ctx_enckey_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_enckey_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then 
            ctx_enckey_ce1 <= ap_const_logic_1;
        else 
            ctx_enckey_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_address0_assign_proc : process(tmp_i_22_reg_837, tmp_98_reg_987, ap_CS_fsm_state26, grp_aes_expandEncKey_fu_368_k_address0, grp_aes_addRoundKey_fu_377_key_address0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_address0 <= tmp_i_22_reg_837(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            ctx_key_address0 <= grp_aes_addRoundKey_fu_377_key_address0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_address0 <= grp_aes_expandEncKey_fu_368_k_address0;
        else 
            ctx_key_address0 <= "XXXXX";
        end if; 
    end process;


    ctx_key_address1_assign_proc : process(tmp_179_i_reg_852, grp_aes_expandEncKey_fu_368_k_address1, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_address1 <= tmp_179_i_reg_852(5 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_address1 <= grp_aes_expandEncKey_fu_368_k_address1;
        else 
            ctx_key_address1 <= "XXXXX";
        end if; 
    end process;


    ctx_key_ce0_assign_proc : process(tmp_98_reg_987, ap_CS_fsm_state26, grp_aes_expandEncKey_fu_368_k_ce0, grp_aes_addRoundKey_fu_377_key_ce0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41, ap_CS_fsm_state27, ap_CS_fsm_state43)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            ctx_key_ce0 <= grp_aes_addRoundKey_fu_377_key_ce0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_ce0 <= grp_aes_expandEncKey_fu_368_k_ce0;
        else 
            ctx_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_ce1_assign_proc : process(grp_aes_expandEncKey_fu_368_k_ce1, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_ce1 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_ce1 <= grp_aes_expandEncKey_fu_368_k_ce1;
        else 
            ctx_key_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_d0_assign_proc : process(ctx_enckey_q0, grp_aes_expandEncKey_fu_368_k_d0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_d0 <= ctx_enckey_q0;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_d0 <= grp_aes_expandEncKey_fu_368_k_d0;
        else 
            ctx_key_d0 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_key_d1_assign_proc : process(ctx_enckey_q1, grp_aes_expandEncKey_fu_368_k_d1, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            ctx_key_d1 <= ctx_enckey_q1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_d1 <= grp_aes_expandEncKey_fu_368_k_d1;
        else 
            ctx_key_d1 <= "XXXXXXXX";
        end if; 
    end process;


    ctx_key_we0_assign_proc : process(grp_aes_expandEncKey_fu_368_k_we0, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            ctx_key_we0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_we0 <= grp_aes_expandEncKey_fu_368_k_we0;
        else 
            ctx_key_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ctx_key_we1_assign_proc : process(grp_aes_expandEncKey_fu_368_k_we1, ap_CS_fsm_state3, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)))) then 
            ctx_key_we1 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            ctx_key_we1 <= grp_aes_expandEncKey_fu_368_k_we1;
        else 
            ctx_key_we1 <= ap_const_logic_0;
        end if; 
    end process;

    e_fu_614_p2 <= (buf_r_q0 xor tmp_41_i_fu_608_p2);
    exitcond_fu_512_p2 <= "1" when (i_reg_323 = ap_const_lv4_E) else "0";
    grp_aes_addRoundKey_fu_377_ap_start <= ap_reg_grp_aes_addRoundKey_fu_377_ap_start;

    grp_aes_addRoundKey_fu_377_key_offset_assign_proc : process(tmp_98_reg_987, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state43)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = tmp_98_reg_987)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)))) then 
            grp_aes_addRoundKey_fu_377_key_offset <= ap_const_lv6_0;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state27))) then 
            grp_aes_addRoundKey_fu_377_key_offset <= ap_const_lv6_10;
        else 
            grp_aes_addRoundKey_fu_377_key_offset <= "XXXXXX";
        end if; 
    end process;

    grp_aes_expandEncKey_fu_368_ap_start <= ap_reg_grp_aes_expandEncKey_fu_368_ap_start;
        i_25_cast_fu_473_p1 <= std_logic_vector(resize(signed(i_25_fu_467_p2),8));

    i_25_fu_467_p2 <= std_logic_vector(unsigned(i_i_reg_312) + unsigned(ap_const_lv5_1F));
        i_26_cast_fu_809_p1 <= std_logic_vector(resize(signed(i_26_fu_803_p2),8));

    i_26_fu_803_p2 <= std_logic_vector(unsigned(i_i1_reg_357) + unsigned(ap_const_lv5_1F));
        i_27_cast_fu_524_p1 <= std_logic_vector(resize(signed(i_27_fu_518_p2),8));

    i_27_fu_518_p2 <= std_logic_vector(unsigned(i_i4_reg_335) + unsigned(ap_const_lv5_1F));
    i_32_fu_572_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(i_i2_reg_346));
    i_33_fu_797_p2 <= std_logic_vector(unsigned(i_reg_323) + unsigned(ap_const_lv4_1));

    sbox_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state29, ap_CS_fsm_state24, ap_CS_fsm_state41, tmp_6_i_fu_539_p1, tmp_6_i1_fu_824_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state29))) then 
            sbox_address0 <= tmp_6_i1_fu_824_p1(8 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_state6))) then 
            sbox_address0 <= tmp_6_i_fu_539_p1(8 - 1 downto 0);
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            sbox_address0 <= ap_const_lv8_0;
        else 
            sbox_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state29, ap_CS_fsm_state24, ap_CS_fsm_state41)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)))) then 
            sbox_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)))) then 
            sbox_ce0 <= ap_const_logic_0;
        else 
            sbox_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_648_p2 <= (y_21_fu_640_p3 xor e_fu_614_p2);
    tmp2_fu_694_p2 <= (y_23_fu_686_p3 xor e_fu_614_p2);
    tmp3_fu_740_p2 <= (y_25_fu_732_p3 xor e_fu_614_p2);
    tmp_101_fu_626_p3 <= x_assign_fu_602_p2(7 downto 7);
    tmp_103_fu_672_p3 <= x_assign_9_fu_660_p2(7 downto 7);
    tmp_105_fu_718_p3 <= x_assign_s_fu_706_p2(7 downto 7);
    tmp_107_fu_764_p3 <= x_assign_1_fu_752_p2(7 downto 7);
    tmp_176_i_fu_505_p2 <= (buf_r_q0 xor ctx_enckey_q0);
    tmp_178_i_fu_489_p2 <= std_logic_vector(unsigned(i_i_reg_312) + unsigned(ap_const_lv5_F));
    tmp_179_i_fu_495_p1 <= std_logic_vector(resize(unsigned(tmp_178_i_fu_489_p2),64));
    tmp_1_i10_i_fu_680_p2 <= (y_22_fu_666_p2 xor ap_const_lv8_1B);
    tmp_1_i14_i_fu_726_p2 <= (y_24_fu_712_p2 xor ap_const_lv8_1B);
    tmp_1_i18_i_fu_772_p2 <= (y_26_fu_758_p2 xor ap_const_lv8_1B);
    tmp_1_i_i_fu_634_p2 <= (y_fu_620_p2 xor ap_const_lv8_1B);
    tmp_34_i_fu_561_p2 <= (tmp_99_fu_557_p1 or ap_const_lv4_1);
    tmp_35_i_fu_567_p1 <= std_logic_vector(resize(unsigned(tmp_34_i_fu_561_p2),64));
    tmp_36_i_fu_582_p2 <= (tmp_99_reg_971 or ap_const_lv4_2);
    tmp_37_i_fu_587_p1 <= std_logic_vector(resize(unsigned(tmp_36_i_fu_582_p2),64));
    tmp_38_i_fu_592_p2 <= (tmp_99_reg_971 or ap_const_lv4_3);
    tmp_39_i_fu_597_p1 <= std_logic_vector(resize(unsigned(tmp_38_i_fu_592_p2),64));
    tmp_41_i_fu_608_p2 <= (buf_r_q1 xor x_assign_fu_602_p2);
    tmp_44_i_fu_654_p2 <= (tmp1_fu_648_p2 xor reg_392);
    tmp_48_i_fu_700_p2 <= (tmp2_fu_694_p2 xor reg_399);
    tmp_52_i_fu_746_p2 <= (tmp3_fu_740_p2 xor buf_r_q1);
    tmp_56_i_fu_786_p2 <= (y_27_fu_778_p3 xor tmp_41_i_fu_608_p2);
    tmp_5_i1_fu_819_p1 <= std_logic_vector(resize(unsigned(i_26_cast_fu_809_p1),64));
    tmp_5_i_fu_534_p1 <= std_logic_vector(resize(unsigned(i_27_cast_fu_524_p1),64));
    tmp_6_i1_fu_824_p1 <= std_logic_vector(resize(unsigned(buf_r_q1),64));
    tmp_6_i_fu_539_p1 <= std_logic_vector(resize(unsigned(buf_r_q0),64));
    tmp_98_fu_578_p1 <= i_reg_323(1 - 1 downto 0);
    tmp_99_fu_557_p1 <= i_i2_reg_346(4 - 1 downto 0);
    tmp_fu_544_p3 <= i_i2_reg_346(4 downto 4);
    tmp_i1_fu_552_p1 <= std_logic_vector(resize(unsigned(i_i2_reg_346),64));
    tmp_i5_fu_528_p2 <= "1" when (i_i4_reg_335 = ap_const_lv5_0) else "0";
    tmp_i8_fu_813_p2 <= "1" when (i_i1_reg_357 = ap_const_lv5_0) else "0";
    tmp_i_22_fu_483_p1 <= std_logic_vector(resize(unsigned(i_25_cast_fu_473_p1),64));
    tmp_i_fu_477_p2 <= "1" when (i_i_reg_312 = ap_const_lv5_0) else "0";
    x_assign_1_fu_752_p2 <= (buf_r_q0 xor reg_392);
    x_assign_9_fu_660_p2 <= (buf_r_q1 xor reg_399);
    x_assign_fu_602_p2 <= (reg_399 xor reg_392);
    x_assign_s_fu_706_p2 <= (buf_r_q0 xor buf_r_q1);
    y_21_fu_640_p3 <= 
        tmp_1_i_i_fu_634_p2 when (tmp_101_fu_626_p3(0) = '1') else 
        y_fu_620_p2;
    y_22_fu_666_p2 <= std_logic_vector(shift_left(unsigned(x_assign_9_fu_660_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    y_23_fu_686_p3 <= 
        tmp_1_i10_i_fu_680_p2 when (tmp_103_fu_672_p3(0) = '1') else 
        y_22_fu_666_p2;
    y_24_fu_712_p2 <= std_logic_vector(shift_left(unsigned(x_assign_s_fu_706_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    y_25_fu_732_p3 <= 
        tmp_1_i14_i_fu_726_p2 when (tmp_105_fu_718_p3(0) = '1') else 
        y_24_fu_712_p2;
    y_26_fu_758_p2 <= std_logic_vector(shift_left(unsigned(x_assign_1_fu_752_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    y_27_fu_778_p3 <= 
        tmp_1_i18_i_fu_772_p2 when (tmp_107_fu_764_p3(0) = '1') else 
        y_26_fu_758_p2;
    y_fu_620_p2 <= std_logic_vector(shift_left(unsigned(x_assign_fu_602_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
end behav;
