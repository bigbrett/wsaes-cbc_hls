// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes_expandDecKey_HH_
#define _aes_expandDecKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes_expandDecKey_bkb.h"

namespace ap_rtl {

struct aes_expandDecKey : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > rc_read;
    sc_out< sc_lv<5> > ctx_key_address0;
    sc_out< sc_logic > ctx_key_ce0;
    sc_out< sc_logic > ctx_key_we0;
    sc_out< sc_lv<8> > ctx_key_d0;
    sc_in< sc_lv<8> > ctx_key_q0;
    sc_out< sc_lv<5> > ctx_key_address1;
    sc_out< sc_logic > ctx_key_ce1;
    sc_out< sc_logic > ctx_key_we1;
    sc_out< sc_lv<8> > ctx_key_d1;
    sc_in< sc_lv<8> > ctx_key_q1;
    sc_out< sc_lv<8> > ap_return;


    // Module declarations
    aes_expandDecKey(sc_module_name name);
    SC_HAS_PROCESS(aes_expandDecKey);

    ~aes_expandDecKey();

    sc_trace_file* mVcdFile;

    aes_expandDecKey_bkb* sbox_U;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > grp_fu_336_p2;
    sc_signal< sc_lv<8> > reg_354;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > ap_CS_fsm_state14;
    sc_signal< sc_lv<1> > ap_CS_fsm_state17;
    sc_signal< sc_lv<8> > reg_360;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > reg_365;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > reg_370;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > ap_CS_fsm_state19;
    sc_signal< sc_lv<1> > ap_CS_fsm_state20;
    sc_signal< sc_lv<8> > reg_374;
    sc_signal< sc_lv<8> > grp_fu_342_p2;
    sc_signal< sc_lv<8> > reg_378;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > ap_CS_fsm_state22;
    sc_signal< sc_lv<8> > grp_fu_348_p2;
    sc_signal< sc_lv<8> > reg_383;
    sc_signal< sc_lv<1> > ap_CS_fsm_state21;
    sc_signal< sc_lv<5> > i_4_fu_394_p2;
    sc_signal< sc_lv<5> > i_4_reg_663;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_388_p2;
    sc_signal< sc_lv<5> > ctx_key_addr_1_reg_673;
    sc_signal< sc_lv<5> > ctx_key_addr_3_reg_684;
    sc_signal< sc_lv<5> > ctx_key_addr_5_reg_694;
    sc_signal< sc_lv<5> > ctx_key_addr_7_reg_705;
    sc_signal< sc_lv<5> > tmp_123_cast_fu_502_p1;
    sc_signal< sc_lv<5> > tmp_123_cast_reg_733;
    sc_signal< sc_lv<1> > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > tmp_88_fu_496_p2;
    sc_signal< sc_lv<5> > ctx_key_addr_9_reg_744;
    sc_signal< sc_lv<5> > ctx_key_addr_11_reg_755;
    sc_signal< sc_lv<5> > ctx_key_addr_13_reg_765;
    sc_signal< sc_lv<5> > ctx_key_addr_15_reg_776;
    sc_signal< sc_lv<4> > i_5_fu_586_p2;
    sc_signal< sc_lv<4> > i_5_reg_781;
    sc_signal< sc_lv<8> > rc_write_assign_fu_626_p2;
    sc_signal< sc_lv<8> > rc_write_assign_reg_796;
    sc_signal< sc_lv<8> > tmp_94_fu_638_p2;
    sc_signal< sc_lv<8> > tmp_94_reg_800;
    sc_signal< sc_lv<5> > i_reg_312;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > i_1_reg_324;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > ap_CS_fsm_state18;
    sc_signal< sc_lv<64> > tmp_63_fu_400_p1;
    sc_signal< sc_lv<64> > tmp_64_fu_405_p1;
    sc_signal< sc_lv<64> > tmp_67_fu_416_p1;
    sc_signal< sc_lv<64> > tmp_69_fu_427_p1;
    sc_signal< sc_lv<64> > tmp_72_fu_438_p1;
    sc_signal< sc_lv<64> > tmp_74_fu_449_p1;
    sc_signal< sc_lv<64> > tmp_77_fu_460_p1;
    sc_signal< sc_lv<64> > tmp_79_fu_471_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_476_p1;
    sc_signal< sc_lv<64> > tmp_82_fu_481_p1;
    sc_signal< sc_lv<64> > tmp_84_fu_486_p1;
    sc_signal< sc_lv<64> > tmp_86_fu_491_p1;
    sc_signal< sc_lv<64> > tmp_102_fu_512_p1;
    sc_signal< sc_lv<64> > tmp_103_fu_517_p1;
    sc_signal< sc_lv<64> > tmp_106_fu_527_p1;
    sc_signal< sc_lv<64> > tmp_108_fu_538_p1;
    sc_signal< sc_lv<64> > tmp_111_fu_548_p1;
    sc_signal< sc_lv<64> > tmp_113_fu_559_p1;
    sc_signal< sc_lv<64> > tmp_116_fu_570_p1;
    sc_signal< sc_lv<64> > tmp_118_fu_581_p1;
    sc_signal< sc_lv<64> > tmp_93_fu_592_p1;
    sc_signal< sc_lv<64> > tmp_95_fu_597_p1;
    sc_signal< sc_lv<64> > tmp_97_fu_644_p1;
    sc_signal< sc_lv<64> > tmp_99_fu_649_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state23;
    sc_signal< sc_lv<5> > tmp_66_fu_410_p2;
    sc_signal< sc_lv<5> > tmp_68_fu_421_p2;
    sc_signal< sc_lv<5> > tmp_71_fu_432_p2;
    sc_signal< sc_lv<5> > tmp_73_fu_443_p2;
    sc_signal< sc_lv<5> > tmp_76_fu_454_p2;
    sc_signal< sc_lv<5> > tmp_78_fu_465_p2;
    sc_signal< sc_lv<5> > tmp_101_fu_506_p2;
    sc_signal< sc_lv<5> > tmp_105_fu_522_p2;
    sc_signal< sc_lv<4> > tmp_107_fu_532_p2;
    sc_signal< sc_lv<5> > tmp_110_fu_543_p2;
    sc_signal< sc_lv<4> > tmp_112_fu_553_p2;
    sc_signal< sc_lv<4> > tmp_115_fu_564_p2;
    sc_signal< sc_lv<4> > tmp_117_fu_575_p2;
    sc_signal< sc_lv<7> > tmp_89_fu_602_p4;
    sc_signal< sc_lv<1> > tmp_91_fu_615_p1;
    sc_signal< sc_lv<8> > tmp_92_fu_618_p3;
    sc_signal< sc_lv<8> > tmp_90_fu_611_p1;
    sc_signal< sc_lv<8> > tmp1_fu_632_p2;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<8> ap_const_lv8_8D;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ctx_key_address0();
    void thread_ctx_key_address1();
    void thread_ctx_key_ce0();
    void thread_ctx_key_ce1();
    void thread_ctx_key_d0();
    void thread_ctx_key_d1();
    void thread_ctx_key_we0();
    void thread_ctx_key_we1();
    void thread_grp_fu_336_p2();
    void thread_grp_fu_342_p2();
    void thread_grp_fu_348_p2();
    void thread_i_4_fu_394_p2();
    void thread_i_5_fu_586_p2();
    void thread_rc_write_assign_fu_626_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_tmp1_fu_632_p2();
    void thread_tmp_101_fu_506_p2();
    void thread_tmp_102_fu_512_p1();
    void thread_tmp_103_fu_517_p1();
    void thread_tmp_105_fu_522_p2();
    void thread_tmp_106_fu_527_p1();
    void thread_tmp_107_fu_532_p2();
    void thread_tmp_108_fu_538_p1();
    void thread_tmp_110_fu_543_p2();
    void thread_tmp_111_fu_548_p1();
    void thread_tmp_112_fu_553_p2();
    void thread_tmp_113_fu_559_p1();
    void thread_tmp_115_fu_564_p2();
    void thread_tmp_116_fu_570_p1();
    void thread_tmp_117_fu_575_p2();
    void thread_tmp_118_fu_581_p1();
    void thread_tmp_123_cast_fu_502_p1();
    void thread_tmp_63_fu_400_p1();
    void thread_tmp_64_fu_405_p1();
    void thread_tmp_66_fu_410_p2();
    void thread_tmp_67_fu_416_p1();
    void thread_tmp_68_fu_421_p2();
    void thread_tmp_69_fu_427_p1();
    void thread_tmp_71_fu_432_p2();
    void thread_tmp_72_fu_438_p1();
    void thread_tmp_73_fu_443_p2();
    void thread_tmp_74_fu_449_p1();
    void thread_tmp_76_fu_454_p2();
    void thread_tmp_77_fu_460_p1();
    void thread_tmp_78_fu_465_p2();
    void thread_tmp_79_fu_471_p1();
    void thread_tmp_82_fu_481_p1();
    void thread_tmp_84_fu_486_p1();
    void thread_tmp_86_fu_491_p1();
    void thread_tmp_88_fu_496_p2();
    void thread_tmp_89_fu_602_p4();
    void thread_tmp_90_fu_611_p1();
    void thread_tmp_91_fu_615_p1();
    void thread_tmp_92_fu_618_p3();
    void thread_tmp_93_fu_592_p1();
    void thread_tmp_94_fu_638_p2();
    void thread_tmp_95_fu_597_p1();
    void thread_tmp_97_fu_644_p1();
    void thread_tmp_99_fu_649_p1();
    void thread_tmp_fu_388_p2();
    void thread_tmp_s_fu_476_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
