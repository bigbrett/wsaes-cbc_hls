// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "aescbc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic aescbc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic aescbc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<34> aescbc::ap_ST_fsm_state1 = "1";
const sc_lv<34> aescbc::ap_ST_fsm_state2 = "10";
const sc_lv<34> aescbc::ap_ST_fsm_state3 = "100";
const sc_lv<34> aescbc::ap_ST_fsm_state4 = "1000";
const sc_lv<34> aescbc::ap_ST_fsm_state5 = "10000";
const sc_lv<34> aescbc::ap_ST_fsm_state6 = "100000";
const sc_lv<34> aescbc::ap_ST_fsm_state7 = "1000000";
const sc_lv<34> aescbc::ap_ST_fsm_state8 = "10000000";
const sc_lv<34> aescbc::ap_ST_fsm_state9 = "100000000";
const sc_lv<34> aescbc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state12 = "100000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<34> aescbc::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<32> aescbc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> aescbc::ap_const_lv1_1 = "1";
const int aescbc::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> aescbc::ap_const_lv32_1 = "1";
const sc_lv<1> aescbc::ap_const_lv1_0 = "0";
const sc_lv<32> aescbc::ap_const_lv32_3 = "11";
const sc_lv<32> aescbc::ap_const_lv32_4 = "100";
const sc_lv<32> aescbc::ap_const_lv32_6 = "110";
const sc_lv<32> aescbc::ap_const_lv32_7 = "111";
const sc_lv<32> aescbc::ap_const_lv32_9 = "1001";
const sc_lv<32> aescbc::ap_const_lv32_C = "1100";
const sc_lv<32> aescbc::ap_const_lv32_E = "1110";
const sc_lv<32> aescbc::ap_const_lv32_10 = "10000";
const sc_lv<3> aescbc::ap_const_lv3_2 = "10";
const sc_lv<32> aescbc::ap_const_lv32_12 = "10010";
const sc_lv<32> aescbc::ap_const_lv32_14 = "10100";
const sc_lv<32> aescbc::ap_const_lv32_17 = "10111";
const sc_lv<32> aescbc::ap_const_lv32_19 = "11001";
const sc_lv<32> aescbc::ap_const_lv32_1B = "11011";
const sc_lv<32> aescbc::ap_const_lv32_1C = "11100";
const sc_lv<32> aescbc::ap_const_lv32_1E = "11110";
const sc_lv<32> aescbc::ap_const_lv32_20 = "100000";
const sc_lv<32> aescbc::ap_const_lv32_21 = "100001";
const sc_lv<32> aescbc::ap_const_lv32_2 = "10";
const sc_lv<6> aescbc::ap_const_lv6_0 = "000000";
const sc_lv<3> aescbc::ap_const_lv3_4 = "100";
const sc_lv<5> aescbc::ap_const_lv5_0 = "00000";
const sc_lv<32> aescbc::ap_const_lv32_5 = "101";
const sc_lv<3> aescbc::ap_const_lv3_3 = "11";
const sc_lv<32> aescbc::ap_const_lv32_8 = "1000";
const sc_lv<32> aescbc::ap_const_lv32_A = "1010";
const sc_lv<32> aescbc::ap_const_lv32_B = "1011";
const sc_lv<32> aescbc::ap_const_lv32_D = "1101";
const sc_lv<32> aescbc::ap_const_lv32_F = "1111";
const sc_lv<32> aescbc::ap_const_lv32_11 = "10001";
const sc_lv<32> aescbc::ap_const_lv32_13 = "10011";
const sc_lv<3> aescbc::ap_const_lv3_1 = "1";
const sc_lv<32> aescbc::ap_const_lv32_15 = "10101";
const sc_lv<32> aescbc::ap_const_lv32_16 = "10110";
const sc_lv<32> aescbc::ap_const_lv32_18 = "11000";
const sc_lv<32> aescbc::ap_const_lv32_1A = "11010";
const sc_lv<3> aescbc::ap_const_lv3_0 = "000";
const sc_lv<32> aescbc::ap_const_lv32_1D = "11101";
const sc_lv<32> aescbc::ap_const_lv32_1F = "11111";
const sc_lv<8> aescbc::ap_const_lv8_1 = "1";
const sc_lv<3> aescbc::ap_const_lv3_7 = "111";
const sc_lv<8> aescbc::ap_const_lv8_0 = "00000000";
const sc_lv<6> aescbc::ap_const_lv6_20 = "100000";
const sc_lv<6> aescbc::ap_const_lv6_1 = "1";
const sc_lv<5> aescbc::ap_const_lv5_10 = "10000";
const sc_lv<5> aescbc::ap_const_lv5_1 = "1";

aescbc::aescbc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    iv_U = new aescbc_iv("iv_U");
    iv_U->clk(ap_clk);
    iv_U->reset(ap_rst_n_inv);
    iv_U->address0(iv_address0);
    iv_U->ce0(iv_ce0);
    iv_U->we0(iv_we0);
    iv_U->d0(data_in_q0);
    iv_U->q0(iv_q0);
    xorv_U = new aescbc_iv("xorv_U");
    xorv_U->clk(ap_clk);
    xorv_U->reset(ap_rst_n_inv);
    xorv_U->address0(xorv_address0);
    xorv_U->ce0(xorv_ce0);
    xorv_U->we0(xorv_we0);
    xorv_U->d0(xorv_d0);
    xorv_U->q0(xorv_q0);
    key_U = new aescbc_key("key_U");
    key_U->clk(ap_clk);
    key_U->reset(ap_rst_n_inv);
    key_U->address0(key_address0);
    key_U->ce0(key_ce0);
    key_U->we0(key_we0);
    key_U->d0(data_in_q0);
    key_U->q0(key_q0);
    ctx_deckey_U = new aescbc_ctx_deckey("ctx_deckey_U");
    ctx_deckey_U->clk(ap_clk);
    ctx_deckey_U->reset(ap_rst_n_inv);
    ctx_deckey_U->address0(ctx_deckey_address0);
    ctx_deckey_U->ce0(ctx_deckey_ce0);
    ctx_deckey_U->we0(ctx_deckey_we0);
    ctx_deckey_U->d0(ctx_deckey_d0);
    ctx_deckey_U->q0(ctx_deckey_q0);
    ctx_deckey_U->address1(ctx_deckey_address1);
    ctx_deckey_U->ce1(ctx_deckey_ce1);
    ctx_deckey_U->we1(ctx_deckey_we1);
    ctx_deckey_U->d1(grp_aes_expandEncKey_fu_626_k_d1);
    ctx_deckey_U->q1(ctx_deckey_q1);
    ctx_enckey_U = new aescbc_ctx_enckey("ctx_enckey_U");
    ctx_enckey_U->clk(ap_clk);
    ctx_enckey_U->reset(ap_rst_n_inv);
    ctx_enckey_U->address0(ctx_enckey_address0);
    ctx_enckey_U->ce0(ctx_enckey_ce0);
    ctx_enckey_U->we0(ctx_enckey_we0);
    ctx_enckey_U->d0(key_q0);
    ctx_enckey_U->q0(ctx_enckey_q0);
    ctx_enckey_U->address1(grp_aes_encrypt_ecb_fu_602_ctx_enckey_address1);
    ctx_enckey_U->ce1(ctx_enckey_ce1);
    ctx_enckey_U->q1(ctx_enckey_q1);
    ctx_key_U = new aescbc_ctx_deckey("ctx_key_U");
    ctx_key_U->clk(ap_clk);
    ctx_key_U->reset(ap_rst_n_inv);
    ctx_key_U->address0(ctx_key_address0);
    ctx_key_U->ce0(ctx_key_ce0);
    ctx_key_U->we0(ctx_key_we0);
    ctx_key_U->d0(ctx_key_d0);
    ctx_key_U->q0(ctx_key_q0);
    ctx_key_U->address1(ctx_key_address1);
    ctx_key_U->ce1(ctx_key_ce1);
    ctx_key_U->we1(ctx_key_we1);
    ctx_key_U->d1(ctx_key_d1);
    ctx_key_U->q1(ctx_key_q1);
    lastbuf_U = new aescbc_iv("lastbuf_U");
    lastbuf_U->clk(ap_clk);
    lastbuf_U->reset(ap_rst_n_inv);
    lastbuf_U->address0(lastbuf_address0);
    lastbuf_U->ce0(lastbuf_ce0);
    lastbuf_U->we0(lastbuf_we0);
    lastbuf_U->d0(buf_q0);
    lastbuf_U->q0(lastbuf_q0);
    aescbc_AXILiteS_s_axi_U = new aescbc_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("aescbc_AXILiteS_s_axi_U");
    aescbc_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    aescbc_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    aescbc_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    aescbc_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    aescbc_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    aescbc_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    aescbc_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    aescbc_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    aescbc_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    aescbc_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    aescbc_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    aescbc_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    aescbc_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    aescbc_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    aescbc_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    aescbc_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    aescbc_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    aescbc_AXILiteS_s_axi_U->ACLK(ap_clk);
    aescbc_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    aescbc_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    aescbc_AXILiteS_s_axi_U->ap_start(ap_start);
    aescbc_AXILiteS_s_axi_U->interrupt(interrupt);
    aescbc_AXILiteS_s_axi_U->ap_ready(ap_ready);
    aescbc_AXILiteS_s_axi_U->ap_done(ap_done);
    aescbc_AXILiteS_s_axi_U->ap_idle(ap_idle);
    aescbc_AXILiteS_s_axi_U->mode(mode);
    aescbc_AXILiteS_s_axi_U->data_in_address0(data_in_address0);
    aescbc_AXILiteS_s_axi_U->data_in_ce0(data_in_ce0);
    aescbc_AXILiteS_s_axi_U->data_in_q0(data_in_q0);
    aescbc_AXILiteS_s_axi_U->data_out_address0(data_out_address0);
    aescbc_AXILiteS_s_axi_U->data_out_ce0(data_out_ce0);
    aescbc_AXILiteS_s_axi_U->data_out_we0(data_out_we0);
    aescbc_AXILiteS_s_axi_U->data_out_d0(data_out_d0);
    buf_U = new aescbc_buf("buf_U");
    buf_U->clk(ap_clk);
    buf_U->reset(ap_rst_n_inv);
    buf_U->address0(buf_address0);
    buf_U->ce0(buf_ce0);
    buf_U->we0(buf_we0);
    buf_U->d0(buf_d0);
    buf_U->q0(buf_q0);
    buf_U->address1(buf_address1);
    buf_U->ce1(buf_ce1);
    buf_U->we1(buf_we1);
    buf_U->d1(buf_d1);
    buf_U->q1(buf_q1);
    grp_aes_encrypt_ecb_fu_602 = new aes_encrypt_ecb("grp_aes_encrypt_ecb_fu_602");
    grp_aes_encrypt_ecb_fu_602->ap_clk(ap_clk);
    grp_aes_encrypt_ecb_fu_602->ap_rst(ap_rst_n_inv);
    grp_aes_encrypt_ecb_fu_602->ap_start(grp_aes_encrypt_ecb_fu_602_ap_start);
    grp_aes_encrypt_ecb_fu_602->ap_done(grp_aes_encrypt_ecb_fu_602_ap_done);
    grp_aes_encrypt_ecb_fu_602->ap_idle(grp_aes_encrypt_ecb_fu_602_ap_idle);
    grp_aes_encrypt_ecb_fu_602->ap_ready(grp_aes_encrypt_ecb_fu_602_ap_ready);
    grp_aes_encrypt_ecb_fu_602->buf_r_address0(grp_aes_encrypt_ecb_fu_602_buf_r_address0);
    grp_aes_encrypt_ecb_fu_602->buf_r_ce0(grp_aes_encrypt_ecb_fu_602_buf_r_ce0);
    grp_aes_encrypt_ecb_fu_602->buf_r_we0(grp_aes_encrypt_ecb_fu_602_buf_r_we0);
    grp_aes_encrypt_ecb_fu_602->buf_r_d0(grp_aes_encrypt_ecb_fu_602_buf_r_d0);
    grp_aes_encrypt_ecb_fu_602->buf_r_q0(buf_q0);
    grp_aes_encrypt_ecb_fu_602->buf_r_address1(grp_aes_encrypt_ecb_fu_602_buf_r_address1);
    grp_aes_encrypt_ecb_fu_602->buf_r_ce1(grp_aes_encrypt_ecb_fu_602_buf_r_ce1);
    grp_aes_encrypt_ecb_fu_602->buf_r_we1(grp_aes_encrypt_ecb_fu_602_buf_r_we1);
    grp_aes_encrypt_ecb_fu_602->buf_r_d1(grp_aes_encrypt_ecb_fu_602_buf_r_d1);
    grp_aes_encrypt_ecb_fu_602->buf_r_q1(buf_q1);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_address0(grp_aes_encrypt_ecb_fu_602_ctx_enckey_address0);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_ce0(grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce0);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_q0(ctx_enckey_q0);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_address1(grp_aes_encrypt_ecb_fu_602_ctx_enckey_address1);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_ce1(grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce1);
    grp_aes_encrypt_ecb_fu_602->ctx_enckey_q1(ctx_enckey_q1);
    grp_aes_encrypt_ecb_fu_602->ctx_key_address0(grp_aes_encrypt_ecb_fu_602_ctx_key_address0);
    grp_aes_encrypt_ecb_fu_602->ctx_key_ce0(grp_aes_encrypt_ecb_fu_602_ctx_key_ce0);
    grp_aes_encrypt_ecb_fu_602->ctx_key_we0(grp_aes_encrypt_ecb_fu_602_ctx_key_we0);
    grp_aes_encrypt_ecb_fu_602->ctx_key_d0(grp_aes_encrypt_ecb_fu_602_ctx_key_d0);
    grp_aes_encrypt_ecb_fu_602->ctx_key_q0(ctx_key_q0);
    grp_aes_encrypt_ecb_fu_602->ctx_key_address1(grp_aes_encrypt_ecb_fu_602_ctx_key_address1);
    grp_aes_encrypt_ecb_fu_602->ctx_key_ce1(grp_aes_encrypt_ecb_fu_602_ctx_key_ce1);
    grp_aes_encrypt_ecb_fu_602->ctx_key_we1(grp_aes_encrypt_ecb_fu_602_ctx_key_we1);
    grp_aes_encrypt_ecb_fu_602->ctx_key_d1(grp_aes_encrypt_ecb_fu_602_ctx_key_d1);
    grp_aes_encrypt_ecb_fu_602->ctx_key_q1(ctx_key_q1);
    grp_aes_decrypt_ecb_fu_613 = new aes_decrypt_ecb("grp_aes_decrypt_ecb_fu_613");
    grp_aes_decrypt_ecb_fu_613->ap_clk(ap_clk);
    grp_aes_decrypt_ecb_fu_613->ap_rst(ap_rst_n_inv);
    grp_aes_decrypt_ecb_fu_613->ap_start(grp_aes_decrypt_ecb_fu_613_ap_start);
    grp_aes_decrypt_ecb_fu_613->ap_done(grp_aes_decrypt_ecb_fu_613_ap_done);
    grp_aes_decrypt_ecb_fu_613->ap_idle(grp_aes_decrypt_ecb_fu_613_ap_idle);
    grp_aes_decrypt_ecb_fu_613->ap_ready(grp_aes_decrypt_ecb_fu_613_ap_ready);
    grp_aes_decrypt_ecb_fu_613->buf_r_address0(grp_aes_decrypt_ecb_fu_613_buf_r_address0);
    grp_aes_decrypt_ecb_fu_613->buf_r_ce0(grp_aes_decrypt_ecb_fu_613_buf_r_ce0);
    grp_aes_decrypt_ecb_fu_613->buf_r_we0(grp_aes_decrypt_ecb_fu_613_buf_r_we0);
    grp_aes_decrypt_ecb_fu_613->buf_r_d0(grp_aes_decrypt_ecb_fu_613_buf_r_d0);
    grp_aes_decrypt_ecb_fu_613->buf_r_q0(buf_q0);
    grp_aes_decrypt_ecb_fu_613->buf_r_address1(grp_aes_decrypt_ecb_fu_613_buf_r_address1);
    grp_aes_decrypt_ecb_fu_613->buf_r_ce1(grp_aes_decrypt_ecb_fu_613_buf_r_ce1);
    grp_aes_decrypt_ecb_fu_613->buf_r_we1(grp_aes_decrypt_ecb_fu_613_buf_r_we1);
    grp_aes_decrypt_ecb_fu_613->buf_r_d1(grp_aes_decrypt_ecb_fu_613_buf_r_d1);
    grp_aes_decrypt_ecb_fu_613->buf_r_q1(buf_q1);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_address0(grp_aes_decrypt_ecb_fu_613_ctx_deckey_address0);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_ce0(grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce0);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_q0(ctx_deckey_q0);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_address1(grp_aes_decrypt_ecb_fu_613_ctx_deckey_address1);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_ce1(grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce1);
    grp_aes_decrypt_ecb_fu_613->ctx_deckey_q1(ctx_deckey_q1);
    grp_aes_decrypt_ecb_fu_613->ctx_key_address0(grp_aes_decrypt_ecb_fu_613_ctx_key_address0);
    grp_aes_decrypt_ecb_fu_613->ctx_key_ce0(grp_aes_decrypt_ecb_fu_613_ctx_key_ce0);
    grp_aes_decrypt_ecb_fu_613->ctx_key_we0(grp_aes_decrypt_ecb_fu_613_ctx_key_we0);
    grp_aes_decrypt_ecb_fu_613->ctx_key_d0(grp_aes_decrypt_ecb_fu_613_ctx_key_d0);
    grp_aes_decrypt_ecb_fu_613->ctx_key_q0(ctx_key_q0);
    grp_aes_decrypt_ecb_fu_613->ctx_key_address1(grp_aes_decrypt_ecb_fu_613_ctx_key_address1);
    grp_aes_decrypt_ecb_fu_613->ctx_key_ce1(grp_aes_decrypt_ecb_fu_613_ctx_key_ce1);
    grp_aes_decrypt_ecb_fu_613->ctx_key_we1(grp_aes_decrypt_ecb_fu_613_ctx_key_we1);
    grp_aes_decrypt_ecb_fu_613->ctx_key_d1(grp_aes_decrypt_ecb_fu_613_ctx_key_d1);
    grp_aes_decrypt_ecb_fu_613->ctx_key_q1(ctx_key_q1);
    grp_aes_expandEncKey_fu_626 = new aes_expandEncKey("grp_aes_expandEncKey_fu_626");
    grp_aes_expandEncKey_fu_626->ap_clk(ap_clk);
    grp_aes_expandEncKey_fu_626->ap_rst(ap_rst_n_inv);
    grp_aes_expandEncKey_fu_626->ap_start(grp_aes_expandEncKey_fu_626_ap_start);
    grp_aes_expandEncKey_fu_626->ap_done(grp_aes_expandEncKey_fu_626_ap_done);
    grp_aes_expandEncKey_fu_626->ap_idle(grp_aes_expandEncKey_fu_626_ap_idle);
    grp_aes_expandEncKey_fu_626->ap_ready(grp_aes_expandEncKey_fu_626_ap_ready);
    grp_aes_expandEncKey_fu_626->k_address0(grp_aes_expandEncKey_fu_626_k_address0);
    grp_aes_expandEncKey_fu_626->k_ce0(grp_aes_expandEncKey_fu_626_k_ce0);
    grp_aes_expandEncKey_fu_626->k_we0(grp_aes_expandEncKey_fu_626_k_we0);
    grp_aes_expandEncKey_fu_626->k_d0(grp_aes_expandEncKey_fu_626_k_d0);
    grp_aes_expandEncKey_fu_626->k_q0(ctx_deckey_q0);
    grp_aes_expandEncKey_fu_626->k_address1(grp_aes_expandEncKey_fu_626_k_address1);
    grp_aes_expandEncKey_fu_626->k_ce1(grp_aes_expandEncKey_fu_626_k_ce1);
    grp_aes_expandEncKey_fu_626->k_we1(grp_aes_expandEncKey_fu_626_k_we1);
    grp_aes_expandEncKey_fu_626->k_d1(grp_aes_expandEncKey_fu_626_k_d1);
    grp_aes_expandEncKey_fu_626->k_q1(ctx_deckey_q1);
    grp_aes_expandEncKey_fu_626->rc_read(rcon_i_reg_579);
    grp_aes_expandEncKey_fu_626->ap_return(grp_aes_expandEncKey_fu_626_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( mode_read_reg_929 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_30_fu_780_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( mode_read_reg_929 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_30_fu_780_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_buf_address0);
    sensitive << ( tmp_1_reg_993 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_18_fu_740_p1 );
    sensitive << ( tmp_12_fu_728_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( buf_addr_5_reg_1029 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_31_fu_792_p1 );
    sensitive << ( tmp_s_reg_1083 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( buf_addr_2_reg_1101 );
    sensitive << ( tmp_11_fu_814_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_23_fu_844_p1 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_28_fu_861_p1 );
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_address0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_24_fu_757_p1 );
    sensitive << ( tmp_16_fu_826_p1 );

    SC_METHOD(thread_buf_address1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_address1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_address1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_buf_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_12_fu_728_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_11_fu_814_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_ce0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_buf_ce1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_ce1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_ce1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_buf_d0);
    sensitive << ( data_in_q0 );
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_d0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_d0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( grp_fu_636_p2 );

    SC_METHOD(thread_buf_d1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_d1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_d1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_buf_we0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_we0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_we0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_buf_we1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_buf_r_we1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_buf_r_we1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_deckey_address0);
    sensitive << ( tmp_i_9_reg_1181 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_deckey_address0 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_deckey_address1);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_deckey_address1 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_address1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ctx_deckey_ce0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce0 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_deckey_ce1);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce1 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_ce1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ctx_deckey_d0);
    sensitive << ( key_q0 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_d0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_deckey_we0);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_we0 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_deckey_we1);
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( grp_aes_expandEncKey_fu_626_k_we1 );

    SC_METHOD(thread_ctx_enckey_address0);
    sensitive << ( tmp_i_9_reg_1181 );
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_enckey_address0 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_enckey_ce0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce0 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_enckey_ce1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce1 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_enckey_we0);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_ctx_key_address0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_address0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_address1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_address1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_address1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_ce0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_ce0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_ce1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_ce1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_ce1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_d0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_d0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_d0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_d1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_d1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_d1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_we0);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_we0 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_we0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ctx_key_we1);
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ctx_key_we1 );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ctx_key_we1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_data_in_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_9_fu_655_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_2_fu_689_p1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_1_fu_723_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_s_fu_809_p1 );

    SC_METHOD(thread_data_in_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_data_out_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_31_reg_1065 );
    sensitive << ( tmp_28_reg_1137 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_20_fu_672_p1 );
    sensitive << ( tmp_19_fu_706_p1 );
    sensitive << ( tmp_8_fu_878_p1 );

    SC_METHOD(thread_data_out_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_data_out_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( buf_q0 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_data_out_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( tmp_14_fu_660_p2 );
    sensitive << ( tmp_13_fu_694_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_3_fu_866_p2 );

    SC_METHOD(thread_grp_aes_decrypt_ecb_fu_613_ap_start);
    sensitive << ( ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start );

    SC_METHOD(thread_grp_aes_encrypt_ecb_fu_602_ap_start);
    sensitive << ( ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start );

    SC_METHOD(thread_grp_aes_expandEncKey_fu_626_ap_start);
    sensitive << ( ap_reg_grp_aes_expandEncKey_fu_626_ap_start );

    SC_METHOD(thread_grp_fu_636_p2);
    sensitive << ( xorv_q0 );
    sensitive << ( buf_q0 );

    SC_METHOD(thread_i_13_fu_872_p2);
    sensitive << ( i_reg_546 );

    SC_METHOD(thread_i_15_fu_803_p2);
    sensitive << ( i_2_reg_502 );

    SC_METHOD(thread_i_16_fu_717_p2);
    sensitive << ( i_6_reg_447 );

    SC_METHOD(thread_i_17_fu_683_p2);
    sensitive << ( i_s_reg_425 );

    SC_METHOD(thread_i_18_fu_649_p2);
    sensitive << ( i_11_reg_403 );

    SC_METHOD(thread_i_19_fu_889_p2);
    sensitive << ( i_1_reg_557 );

    SC_METHOD(thread_i_20_fu_820_p2);
    sensitive << ( i_3_reg_513 );

    SC_METHOD(thread_i_21_fu_734_p2);
    sensitive << ( i_7_reg_458 );

    SC_METHOD(thread_i_22_fu_700_p2);
    sensitive << ( i_12_reg_436 );

    SC_METHOD(thread_i_23_fu_666_p2);
    sensitive << ( i_14_reg_414 );

    SC_METHOD(thread_i_24_fu_838_p2);
    sensitive << ( i_4_reg_524 );

    SC_METHOD(thread_i_25_fu_751_p2);
    sensitive << ( i_8_reg_469 );

    SC_METHOD(thread_i_26_fu_855_p2);
    sensitive << ( i_5_reg_535 );

    SC_METHOD(thread_i_27_fu_769_p2);
    sensitive << ( i_9_reg_480 );

    SC_METHOD(thread_i_28_fu_786_p2);
    sensitive << ( i_10_reg_491 );

    SC_METHOD(thread_i_29_fu_906_p2);
    sensitive << ( i_i_reg_568 );

    SC_METHOD(thread_iv_address0);
    sensitive << ( tmp_2_reg_967 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_15_fu_895_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_iv_ce0);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_iv_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_key_address0);
    sensitive << ( tmp_9_reg_941 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( tmp_i_9_fu_912_p1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_key_we0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_lastbuf_address0);
    sensitive << ( tmp_18_reg_1011 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_29_fu_775_p1 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_lastbuf_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_lastbuf_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_mode_read_read_fu_118_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mode );

    SC_METHOD(thread_phitmp_i_fu_923_p2);
    sensitive << ( i_30_reg_591 );

    SC_METHOD(thread_tmp_10_fu_883_p2);
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( i_1_reg_557 );

    SC_METHOD(thread_tmp_11_fu_814_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i_3_reg_513 );

    SC_METHOD(thread_tmp_12_fu_728_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_7_reg_458 );

    SC_METHOD(thread_tmp_13_fu_694_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_12_reg_436 );

    SC_METHOD(thread_tmp_14_fu_660_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_14_reg_414 );

    SC_METHOD(thread_tmp_15_fu_895_p1);
    sensitive << ( i_1_reg_557 );

    SC_METHOD(thread_tmp_16_fu_826_p1);
    sensitive << ( i_3_reg_513 );

    SC_METHOD(thread_tmp_18_fu_740_p1);
    sensitive << ( i_7_reg_458 );

    SC_METHOD(thread_tmp_19_fu_706_p1);
    sensitive << ( i_12_reg_436 );

    SC_METHOD(thread_tmp_1_fu_723_p1);
    sensitive << ( i_6_reg_447 );

    SC_METHOD(thread_tmp_20_fu_672_p1);
    sensitive << ( i_14_reg_414 );

    SC_METHOD(thread_tmp_21_fu_832_p2);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( i_4_reg_524 );

    SC_METHOD(thread_tmp_22_fu_745_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_8_reg_469 );

    SC_METHOD(thread_tmp_23_fu_844_p1);
    sensitive << ( i_4_reg_524 );

    SC_METHOD(thread_tmp_24_fu_757_p1);
    sensitive << ( i_8_reg_469 );

    SC_METHOD(thread_tmp_26_fu_849_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( i_5_reg_535 );

    SC_METHOD(thread_tmp_27_fu_763_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( i_9_reg_480 );

    SC_METHOD(thread_tmp_28_fu_861_p1);
    sensitive << ( i_5_reg_535 );

    SC_METHOD(thread_tmp_29_fu_775_p1);
    sensitive << ( i_9_reg_480 );

    SC_METHOD(thread_tmp_2_fu_689_p1);
    sensitive << ( i_s_reg_425 );

    SC_METHOD(thread_tmp_30_fu_780_p2);
    sensitive << ( mode_read_reg_929 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i_10_reg_491 );

    SC_METHOD(thread_tmp_31_fu_792_p1);
    sensitive << ( i_10_reg_491 );

    SC_METHOD(thread_tmp_3_fu_866_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_reg_546 );

    SC_METHOD(thread_tmp_4_fu_797_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i_2_reg_502 );

    SC_METHOD(thread_tmp_5_fu_711_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_6_reg_447 );

    SC_METHOD(thread_tmp_6_fu_677_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_s_reg_425 );

    SC_METHOD(thread_tmp_7_fu_643_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_11_reg_403 );

    SC_METHOD(thread_tmp_8_fu_878_p1);
    sensitive << ( i_reg_546 );

    SC_METHOD(thread_tmp_90_i_fu_917_p2);
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( i_30_reg_591 );

    SC_METHOD(thread_tmp_9_fu_655_p1);
    sensitive << ( i_11_reg_403 );

    SC_METHOD(thread_tmp_i_9_fu_912_p1);
    sensitive << ( i_i_reg_568 );

    SC_METHOD(thread_tmp_i_fu_900_p2);
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( i_i_reg_568 );

    SC_METHOD(thread_tmp_s_fu_809_p1);
    sensitive << ( i_2_reg_502 );

    SC_METHOD(thread_xorv_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_29_reg_1047 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_23_reg_1119 );
    sensitive << ( tmp_15_reg_1163 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( tmp_24_fu_757_p1 );
    sensitive << ( tmp_16_fu_826_p1 );

    SC_METHOD(thread_xorv_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_xorv_d0);
    sensitive << ( iv_q0 );
    sensitive << ( lastbuf_q0 );
    sensitive << ( buf_q0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_xorv_we0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( mode_read_read_fu_118_p2 );
    sensitive << ( mode_read_reg_929 );
    sensitive << ( tmp_7_fu_643_p2 );
    sensitive << ( tmp_6_fu_677_p2 );
    sensitive << ( tmp_5_fu_711_p2 );
    sensitive << ( tmp_12_fu_728_p2 );
    sensitive << ( tmp_22_fu_745_p2 );
    sensitive << ( tmp_27_fu_763_p2 );
    sensitive << ( tmp_30_fu_780_p2 );
    sensitive << ( tmp_4_fu_797_p2 );
    sensitive << ( tmp_11_fu_814_p2 );
    sensitive << ( tmp_21_fu_832_p2 );
    sensitive << ( tmp_26_fu_849_p2 );
    sensitive << ( tmp_10_fu_883_p2 );
    sensitive << ( tmp_i_fu_900_p2 );
    sensitive << ( tmp_90_i_fu_917_p2 );
    sensitive << ( grp_aes_expandEncKey_fu_626_ap_done );
    sensitive << ( grp_aes_encrypt_ecb_fu_602_ap_done );
    sensitive << ( grp_aes_decrypt_ecb_fu_613_ap_done );
    sensitive << ( tmp_14_fu_660_p2 );
    sensitive << ( tmp_13_fu_694_p2 );
    sensitive << ( tmp_3_fu_866_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000001";
    ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start = SC_LOGIC_0;
    ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start = SC_LOGIC_0;
    ap_reg_grp_aes_expandEncKey_fu_626_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "aescbc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, mode, "mode");
    sc_trace(mVcdFile, data_in_address0, "data_in_address0");
    sc_trace(mVcdFile, data_in_ce0, "data_in_ce0");
    sc_trace(mVcdFile, data_in_q0, "data_in_q0");
    sc_trace(mVcdFile, data_out_address0, "data_out_address0");
    sc_trace(mVcdFile, data_out_ce0, "data_out_ce0");
    sc_trace(mVcdFile, data_out_we0, "data_out_we0");
    sc_trace(mVcdFile, data_out_d0, "data_out_d0");
    sc_trace(mVcdFile, iv_address0, "iv_address0");
    sc_trace(mVcdFile, iv_ce0, "iv_ce0");
    sc_trace(mVcdFile, iv_we0, "iv_we0");
    sc_trace(mVcdFile, iv_q0, "iv_q0");
    sc_trace(mVcdFile, xorv_address0, "xorv_address0");
    sc_trace(mVcdFile, xorv_ce0, "xorv_ce0");
    sc_trace(mVcdFile, xorv_we0, "xorv_we0");
    sc_trace(mVcdFile, xorv_d0, "xorv_d0");
    sc_trace(mVcdFile, xorv_q0, "xorv_q0");
    sc_trace(mVcdFile, key_address0, "key_address0");
    sc_trace(mVcdFile, key_ce0, "key_ce0");
    sc_trace(mVcdFile, key_we0, "key_we0");
    sc_trace(mVcdFile, key_q0, "key_q0");
    sc_trace(mVcdFile, ctx_deckey_address0, "ctx_deckey_address0");
    sc_trace(mVcdFile, ctx_deckey_ce0, "ctx_deckey_ce0");
    sc_trace(mVcdFile, ctx_deckey_we0, "ctx_deckey_we0");
    sc_trace(mVcdFile, ctx_deckey_d0, "ctx_deckey_d0");
    sc_trace(mVcdFile, ctx_deckey_q0, "ctx_deckey_q0");
    sc_trace(mVcdFile, ctx_deckey_address1, "ctx_deckey_address1");
    sc_trace(mVcdFile, ctx_deckey_ce1, "ctx_deckey_ce1");
    sc_trace(mVcdFile, ctx_deckey_we1, "ctx_deckey_we1");
    sc_trace(mVcdFile, ctx_deckey_q1, "ctx_deckey_q1");
    sc_trace(mVcdFile, ctx_enckey_address0, "ctx_enckey_address0");
    sc_trace(mVcdFile, ctx_enckey_ce0, "ctx_enckey_ce0");
    sc_trace(mVcdFile, ctx_enckey_we0, "ctx_enckey_we0");
    sc_trace(mVcdFile, ctx_enckey_q0, "ctx_enckey_q0");
    sc_trace(mVcdFile, ctx_enckey_ce1, "ctx_enckey_ce1");
    sc_trace(mVcdFile, ctx_enckey_q1, "ctx_enckey_q1");
    sc_trace(mVcdFile, ctx_key_address0, "ctx_key_address0");
    sc_trace(mVcdFile, ctx_key_ce0, "ctx_key_ce0");
    sc_trace(mVcdFile, ctx_key_we0, "ctx_key_we0");
    sc_trace(mVcdFile, ctx_key_d0, "ctx_key_d0");
    sc_trace(mVcdFile, ctx_key_q0, "ctx_key_q0");
    sc_trace(mVcdFile, ctx_key_address1, "ctx_key_address1");
    sc_trace(mVcdFile, ctx_key_ce1, "ctx_key_ce1");
    sc_trace(mVcdFile, ctx_key_we1, "ctx_key_we1");
    sc_trace(mVcdFile, ctx_key_d1, "ctx_key_d1");
    sc_trace(mVcdFile, ctx_key_q1, "ctx_key_q1");
    sc_trace(mVcdFile, lastbuf_address0, "lastbuf_address0");
    sc_trace(mVcdFile, lastbuf_ce0, "lastbuf_ce0");
    sc_trace(mVcdFile, lastbuf_we0, "lastbuf_we0");
    sc_trace(mVcdFile, lastbuf_q0, "lastbuf_q0");
    sc_trace(mVcdFile, mode_read_read_fu_118_p2, "mode_read_read_fu_118_p2");
    sc_trace(mVcdFile, mode_read_reg_929, "mode_read_reg_929");
    sc_trace(mVcdFile, i_18_fu_649_p2, "i_18_fu_649_p2");
    sc_trace(mVcdFile, i_18_reg_936, "i_18_reg_936");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_9_fu_655_p1, "tmp_9_fu_655_p1");
    sc_trace(mVcdFile, tmp_9_reg_941, "tmp_9_reg_941");
    sc_trace(mVcdFile, tmp_7_fu_643_p2, "tmp_7_fu_643_p2");
    sc_trace(mVcdFile, i_23_fu_666_p2, "i_23_fu_666_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_17_fu_683_p2, "i_17_fu_683_p2");
    sc_trace(mVcdFile, i_17_reg_962, "i_17_reg_962");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_2_fu_689_p1, "tmp_2_fu_689_p1");
    sc_trace(mVcdFile, tmp_2_reg_967, "tmp_2_reg_967");
    sc_trace(mVcdFile, tmp_6_fu_677_p2, "tmp_6_fu_677_p2");
    sc_trace(mVcdFile, i_22_fu_700_p2, "i_22_fu_700_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_16_fu_717_p2, "i_16_fu_717_p2");
    sc_trace(mVcdFile, i_16_reg_988, "i_16_reg_988");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_1_fu_723_p1, "tmp_1_fu_723_p1");
    sc_trace(mVcdFile, tmp_1_reg_993, "tmp_1_reg_993");
    sc_trace(mVcdFile, tmp_5_fu_711_p2, "tmp_5_fu_711_p2");
    sc_trace(mVcdFile, i_21_fu_734_p2, "i_21_fu_734_p2");
    sc_trace(mVcdFile, i_21_reg_1006, "i_21_reg_1006");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_18_fu_740_p1, "tmp_18_fu_740_p1");
    sc_trace(mVcdFile, tmp_18_reg_1011, "tmp_18_reg_1011");
    sc_trace(mVcdFile, tmp_12_fu_728_p2, "tmp_12_fu_728_p2");
    sc_trace(mVcdFile, i_25_fu_751_p2, "i_25_fu_751_p2");
    sc_trace(mVcdFile, i_25_reg_1024, "i_25_reg_1024");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, buf_addr_5_reg_1029, "buf_addr_5_reg_1029");
    sc_trace(mVcdFile, tmp_22_fu_745_p2, "tmp_22_fu_745_p2");
    sc_trace(mVcdFile, i_27_fu_769_p2, "i_27_fu_769_p2");
    sc_trace(mVcdFile, i_27_reg_1042, "i_27_reg_1042");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_29_fu_775_p1, "tmp_29_fu_775_p1");
    sc_trace(mVcdFile, tmp_29_reg_1047, "tmp_29_reg_1047");
    sc_trace(mVcdFile, tmp_27_fu_763_p2, "tmp_27_fu_763_p2");
    sc_trace(mVcdFile, i_28_fu_786_p2, "i_28_fu_786_p2");
    sc_trace(mVcdFile, i_28_reg_1060, "i_28_reg_1060");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_31_fu_792_p1, "tmp_31_fu_792_p1");
    sc_trace(mVcdFile, tmp_31_reg_1065, "tmp_31_reg_1065");
    sc_trace(mVcdFile, tmp_30_fu_780_p2, "tmp_30_fu_780_p2");
    sc_trace(mVcdFile, i_15_fu_803_p2, "i_15_fu_803_p2");
    sc_trace(mVcdFile, i_15_reg_1078, "i_15_reg_1078");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_s_fu_809_p1, "tmp_s_fu_809_p1");
    sc_trace(mVcdFile, tmp_s_reg_1083, "tmp_s_reg_1083");
    sc_trace(mVcdFile, tmp_4_fu_797_p2, "tmp_4_fu_797_p2");
    sc_trace(mVcdFile, i_20_fu_820_p2, "i_20_fu_820_p2");
    sc_trace(mVcdFile, i_20_reg_1096, "i_20_reg_1096");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, buf_addr_2_reg_1101, "buf_addr_2_reg_1101");
    sc_trace(mVcdFile, tmp_11_fu_814_p2, "tmp_11_fu_814_p2");
    sc_trace(mVcdFile, i_24_fu_838_p2, "i_24_fu_838_p2");
    sc_trace(mVcdFile, i_24_reg_1114, "i_24_reg_1114");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, tmp_23_fu_844_p1, "tmp_23_fu_844_p1");
    sc_trace(mVcdFile, tmp_23_reg_1119, "tmp_23_reg_1119");
    sc_trace(mVcdFile, tmp_21_fu_832_p2, "tmp_21_fu_832_p2");
    sc_trace(mVcdFile, i_26_fu_855_p2, "i_26_fu_855_p2");
    sc_trace(mVcdFile, i_26_reg_1132, "i_26_reg_1132");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_28_fu_861_p1, "tmp_28_fu_861_p1");
    sc_trace(mVcdFile, tmp_28_reg_1137, "tmp_28_reg_1137");
    sc_trace(mVcdFile, tmp_26_fu_849_p2, "tmp_26_fu_849_p2");
    sc_trace(mVcdFile, i_13_fu_872_p2, "i_13_fu_872_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, i_19_fu_889_p2, "i_19_fu_889_p2");
    sc_trace(mVcdFile, i_19_reg_1158, "i_19_reg_1158");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, tmp_15_fu_895_p1, "tmp_15_fu_895_p1");
    sc_trace(mVcdFile, tmp_15_reg_1163, "tmp_15_reg_1163");
    sc_trace(mVcdFile, tmp_10_fu_883_p2, "tmp_10_fu_883_p2");
    sc_trace(mVcdFile, i_29_fu_906_p2, "i_29_fu_906_p2");
    sc_trace(mVcdFile, i_29_reg_1176, "i_29_reg_1176");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, tmp_i_9_fu_912_p1, "tmp_i_9_fu_912_p1");
    sc_trace(mVcdFile, tmp_i_9_reg_1181, "tmp_i_9_reg_1181");
    sc_trace(mVcdFile, tmp_i_fu_900_p2, "tmp_i_fu_900_p2");
    sc_trace(mVcdFile, phitmp_i_fu_923_p2, "phitmp_i_fu_923_p2");
    sc_trace(mVcdFile, phitmp_i_reg_1195, "phitmp_i_reg_1195");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, tmp_90_i_fu_917_p2, "tmp_90_i_fu_917_p2");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_ap_return, "grp_aes_expandEncKey_fu_626_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_ap_done, "grp_aes_expandEncKey_fu_626_ap_done");
    sc_trace(mVcdFile, buf_address0, "buf_address0");
    sc_trace(mVcdFile, buf_ce0, "buf_ce0");
    sc_trace(mVcdFile, buf_we0, "buf_we0");
    sc_trace(mVcdFile, buf_d0, "buf_d0");
    sc_trace(mVcdFile, buf_q0, "buf_q0");
    sc_trace(mVcdFile, buf_address1, "buf_address1");
    sc_trace(mVcdFile, buf_ce1, "buf_ce1");
    sc_trace(mVcdFile, buf_we1, "buf_we1");
    sc_trace(mVcdFile, buf_d1, "buf_d1");
    sc_trace(mVcdFile, buf_q1, "buf_q1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ap_start, "grp_aes_encrypt_ecb_fu_602_ap_start");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ap_done, "grp_aes_encrypt_ecb_fu_602_ap_done");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ap_idle, "grp_aes_encrypt_ecb_fu_602_ap_idle");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ap_ready, "grp_aes_encrypt_ecb_fu_602_ap_ready");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_address0, "grp_aes_encrypt_ecb_fu_602_buf_r_address0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_ce0, "grp_aes_encrypt_ecb_fu_602_buf_r_ce0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_we0, "grp_aes_encrypt_ecb_fu_602_buf_r_we0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_d0, "grp_aes_encrypt_ecb_fu_602_buf_r_d0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_address1, "grp_aes_encrypt_ecb_fu_602_buf_r_address1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_ce1, "grp_aes_encrypt_ecb_fu_602_buf_r_ce1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_we1, "grp_aes_encrypt_ecb_fu_602_buf_r_we1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_buf_r_d1, "grp_aes_encrypt_ecb_fu_602_buf_r_d1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_enckey_address0, "grp_aes_encrypt_ecb_fu_602_ctx_enckey_address0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce0, "grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_enckey_address1, "grp_aes_encrypt_ecb_fu_602_ctx_enckey_address1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce1, "grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_address0, "grp_aes_encrypt_ecb_fu_602_ctx_key_address0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_ce0, "grp_aes_encrypt_ecb_fu_602_ctx_key_ce0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_we0, "grp_aes_encrypt_ecb_fu_602_ctx_key_we0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_d0, "grp_aes_encrypt_ecb_fu_602_ctx_key_d0");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_address1, "grp_aes_encrypt_ecb_fu_602_ctx_key_address1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_ce1, "grp_aes_encrypt_ecb_fu_602_ctx_key_ce1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_we1, "grp_aes_encrypt_ecb_fu_602_ctx_key_we1");
    sc_trace(mVcdFile, grp_aes_encrypt_ecb_fu_602_ctx_key_d1, "grp_aes_encrypt_ecb_fu_602_ctx_key_d1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ap_start, "grp_aes_decrypt_ecb_fu_613_ap_start");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ap_done, "grp_aes_decrypt_ecb_fu_613_ap_done");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ap_idle, "grp_aes_decrypt_ecb_fu_613_ap_idle");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ap_ready, "grp_aes_decrypt_ecb_fu_613_ap_ready");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_address0, "grp_aes_decrypt_ecb_fu_613_buf_r_address0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_ce0, "grp_aes_decrypt_ecb_fu_613_buf_r_ce0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_we0, "grp_aes_decrypt_ecb_fu_613_buf_r_we0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_d0, "grp_aes_decrypt_ecb_fu_613_buf_r_d0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_address1, "grp_aes_decrypt_ecb_fu_613_buf_r_address1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_ce1, "grp_aes_decrypt_ecb_fu_613_buf_r_ce1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_we1, "grp_aes_decrypt_ecb_fu_613_buf_r_we1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_buf_r_d1, "grp_aes_decrypt_ecb_fu_613_buf_r_d1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_deckey_address0, "grp_aes_decrypt_ecb_fu_613_ctx_deckey_address0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce0, "grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_deckey_address1, "grp_aes_decrypt_ecb_fu_613_ctx_deckey_address1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce1, "grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_address0, "grp_aes_decrypt_ecb_fu_613_ctx_key_address0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_ce0, "grp_aes_decrypt_ecb_fu_613_ctx_key_ce0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_we0, "grp_aes_decrypt_ecb_fu_613_ctx_key_we0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_d0, "grp_aes_decrypt_ecb_fu_613_ctx_key_d0");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_address1, "grp_aes_decrypt_ecb_fu_613_ctx_key_address1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_ce1, "grp_aes_decrypt_ecb_fu_613_ctx_key_ce1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_we1, "grp_aes_decrypt_ecb_fu_613_ctx_key_we1");
    sc_trace(mVcdFile, grp_aes_decrypt_ecb_fu_613_ctx_key_d1, "grp_aes_decrypt_ecb_fu_613_ctx_key_d1");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_ap_start, "grp_aes_expandEncKey_fu_626_ap_start");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_ap_idle, "grp_aes_expandEncKey_fu_626_ap_idle");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_ap_ready, "grp_aes_expandEncKey_fu_626_ap_ready");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_address0, "grp_aes_expandEncKey_fu_626_k_address0");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_ce0, "grp_aes_expandEncKey_fu_626_k_ce0");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_we0, "grp_aes_expandEncKey_fu_626_k_we0");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_d0, "grp_aes_expandEncKey_fu_626_k_d0");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_address1, "grp_aes_expandEncKey_fu_626_k_address1");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_ce1, "grp_aes_expandEncKey_fu_626_k_ce1");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_we1, "grp_aes_expandEncKey_fu_626_k_we1");
    sc_trace(mVcdFile, grp_aes_expandEncKey_fu_626_k_d1, "grp_aes_expandEncKey_fu_626_k_d1");
    sc_trace(mVcdFile, i_11_reg_403, "i_11_reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_14_reg_414, "i_14_reg_414");
    sc_trace(mVcdFile, tmp_14_fu_660_p2, "tmp_14_fu_660_p2");
    sc_trace(mVcdFile, i_s_reg_425, "i_s_reg_425");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_12_reg_436, "i_12_reg_436");
    sc_trace(mVcdFile, tmp_13_fu_694_p2, "tmp_13_fu_694_p2");
    sc_trace(mVcdFile, i_6_reg_447, "i_6_reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_7_reg_458, "i_7_reg_458");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_8_reg_469, "i_8_reg_469");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, i_9_reg_480, "i_9_reg_480");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, i_10_reg_491, "i_10_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_2_reg_502, "i_2_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, i_3_reg_513, "i_3_reg_513");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, i_4_reg_524, "i_4_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, i_5_reg_535, "i_5_reg_535");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_reg_546, "i_reg_546");
    sc_trace(mVcdFile, tmp_3_fu_866_p2, "tmp_3_fu_866_p2");
    sc_trace(mVcdFile, i_1_reg_557, "i_1_reg_557");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, i_i_reg_568, "i_i_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, rcon_i_reg_579, "rcon_i_reg_579");
    sc_trace(mVcdFile, i_30_reg_591, "i_30_reg_591");
    sc_trace(mVcdFile, ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start, "ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start, "ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_aes_expandEncKey_fu_626_ap_start, "ap_reg_grp_aes_expandEncKey_fu_626_ap_start");
    sc_trace(mVcdFile, tmp_20_fu_672_p1, "tmp_20_fu_672_p1");
    sc_trace(mVcdFile, tmp_19_fu_706_p1, "tmp_19_fu_706_p1");
    sc_trace(mVcdFile, tmp_24_fu_757_p1, "tmp_24_fu_757_p1");
    sc_trace(mVcdFile, tmp_16_fu_826_p1, "tmp_16_fu_826_p1");
    sc_trace(mVcdFile, tmp_8_fu_878_p1, "tmp_8_fu_878_p1");
    sc_trace(mVcdFile, grp_fu_636_p2, "grp_fu_636_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("aescbc.hdltvin.dat");
    mHdltvoutHandle.open("aescbc.hdltvout.dat");
}

aescbc::~aescbc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete iv_U;
    delete xorv_U;
    delete key_U;
    delete ctx_deckey_U;
    delete ctx_enckey_U;
    delete ctx_key_U;
    delete lastbuf_U;
    delete aescbc_AXILiteS_s_axi_U;
    delete buf_U;
    delete grp_aes_encrypt_ecb_fu_602;
    delete grp_aes_decrypt_ecb_fu_613;
    delete grp_aes_expandEncKey_fu_626;
}

void aescbc::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void aescbc::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_728_p2.read()))) {
            ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_decrypt_ecb_fu_613_ap_ready.read())) {
            ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_814_p2.read()))) {
            ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_encrypt_ecb_fu_602_ap_ready.read())) {
            ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_aes_expandEncKey_fu_626_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state33.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_90_i_fu_917_p2.read()))) {
            ap_reg_grp_aes_expandEncKey_fu_626_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_aes_expandEncKey_fu_626_ap_ready.read())) {
            ap_reg_grp_aes_expandEncKey_fu_626_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_27_fu_763_p2.read()))) {
        i_10_reg_491 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        i_10_reg_491 = i_28_reg_1060.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_4))) {
        i_11_reg_403 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        i_11_reg_403 = i_18_reg_936.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_677_p2.read()))) {
        i_12_reg_436 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_694_p2.read()))) {
        i_12_reg_436 = i_22_fu_700_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_7_fu_643_p2.read(), ap_const_lv1_0))) {
        i_14_reg_414 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_660_p2.read()))) {
        i_14_reg_414 = i_23_fu_666_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_866_p2.read()))) {
        i_1_reg_557 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read()))) {
        i_1_reg_557 = i_19_reg_1158.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_1))) {
        i_2_reg_502 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        i_2_reg_502 = i_15_reg_1078.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_900_p2.read()))) {
        i_30_reg_591 = ap_const_lv3_7;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_expandEncKey_fu_626_ap_done.read()))) {
        i_30_reg_591 = phitmp_i_reg_1195.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_797_p2.read()))) {
        i_3_reg_513 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        i_3_reg_513 = i_20_reg_1096.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        i_4_reg_524 = i_24_reg_1114.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_encrypt_ecb_fu_602_ap_done.read()))) {
        i_4_reg_524 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_832_p2.read()))) {
        i_5_reg_535 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read()))) {
        i_5_reg_535 = i_26_reg_1132.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_2))) {
        i_6_reg_447 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        i_6_reg_447 = i_16_reg_988.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_711_p2.read()))) {
        i_7_reg_458 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        i_7_reg_458 = i_21_reg_1006.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        i_8_reg_469 = i_25_reg_1024.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_decrypt_ecb_fu_613_ap_done.read()))) {
        i_8_reg_469 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_fu_745_p2.read()))) {
        i_9_reg_480 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        i_9_reg_480 = i_27_reg_1042.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_883_p2.read()))) {
        i_i_reg_568 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        i_i_reg_568 = i_29_reg_1176.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_0))) {
        i_reg_546 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_866_p2.read()))) {
        i_reg_546 = i_13_fu_872_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_3))) {
        i_s_reg_425 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        i_s_reg_425 = i_17_reg_962.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_900_p2.read()))) {
        rcon_i_reg_579 = ap_const_lv8_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_expandEncKey_fu_626_ap_done.read()))) {
        rcon_i_reg_579 = grp_aes_expandEncKey_fu_626_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_814_p2.read()))) {
        buf_addr_2_reg_1101 =  (sc_lv<4>) (tmp_16_fu_826_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_fu_745_p2.read()))) {
        buf_addr_5_reg_1029 =  (sc_lv<4>) (tmp_24_fu_757_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        i_15_reg_1078 = i_15_fu_803_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        i_16_reg_988 = i_16_fu_717_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        i_17_reg_962 = i_17_fu_683_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_18_reg_936 = i_18_fu_649_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        i_19_reg_1158 = i_19_fu_889_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        i_20_reg_1096 = i_20_fu_820_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        i_21_reg_1006 = i_21_fu_734_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        i_24_reg_1114 = i_24_fu_838_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        i_25_reg_1024 = i_25_fu_751_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        i_26_reg_1132 = i_26_fu_855_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        i_27_reg_1042 = i_27_fu_769_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_2))) {
        i_28_reg_1060 = i_28_fu_786_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()))) {
        i_29_reg_1176 = i_29_fu_906_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        mode_read_reg_929 = mode.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_90_i_fu_917_p2.read()))) {
        phitmp_i_reg_1195 = phitmp_i_fu_923_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_883_p2.read()))) {
        tmp_15_reg_1163 = tmp_15_fu_895_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_728_p2.read()))) {
        tmp_18_reg_1011 = tmp_18_fu_740_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_711_p2.read()))) {
        tmp_1_reg_993 = tmp_1_fu_723_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_832_p2.read()))) {
        tmp_23_reg_1119 = tmp_23_fu_844_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_fu_849_p2.read()))) {
        tmp_28_reg_1137 = tmp_28_fu_861_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_27_fu_763_p2.read()))) {
        tmp_29_reg_1047 = tmp_29_fu_775_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_677_p2.read()))) {
        tmp_2_reg_967 = tmp_2_fu_689_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_2) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_780_p2.read()))) {
        tmp_31_reg_1065 = tmp_31_fu_792_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_7_fu_643_p2.read(), ap_const_lv1_0))) {
        tmp_9_reg_941 = tmp_9_fu_655_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_900_p2.read()))) {
        tmp_i_9_reg_1181 = tmp_i_9_fu_912_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_797_p2.read()))) {
        tmp_s_reg_1083 = tmp_s_fu_809_p1.read();
    }
}

void aescbc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void aescbc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void aescbc::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void aescbc::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void aescbc::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void aescbc::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void aescbc::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void aescbc::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void aescbc::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void aescbc::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void aescbc::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void aescbc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void aescbc::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void aescbc::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void aescbc::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read().range(21, 21);
}

void aescbc::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read().range(22, 22);
}

void aescbc::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void aescbc::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void aescbc::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read().range(25, 25);
}

void aescbc::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read().range(26, 26);
}

void aescbc::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void aescbc::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read().range(28, 28);
}

void aescbc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void aescbc::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read().range(29, 29);
}

void aescbc::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read().range(30, 30);
}

void aescbc::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read().range(31, 31);
}

void aescbc::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read().range(32, 32);
}

void aescbc::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read().range(33, 33);
}

void aescbc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void aescbc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void aescbc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void aescbc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void aescbc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void aescbc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void aescbc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
         (esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_0) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_1) || 
          !esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_2) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_3) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_4) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_780_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void aescbc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void aescbc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
         (esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_0) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_1) || 
          !esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_2) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_3) || 
          esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_4) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_780_p2.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void aescbc::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void aescbc::thread_buf_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_28_fu_861_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_23_fu_844_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read()))) {
        buf_address0 = buf_addr_2_reg_1101.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_814_p2.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_16_fu_826_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_s_reg_1083.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_31_fu_792_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        buf_address0 = buf_addr_5_reg_1029.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_24_fu_757_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_728_p2.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_18_fu_740_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        buf_address0 =  (sc_lv<4>) (tmp_1_reg_993.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_address0 = grp_aes_decrypt_ecb_fu_613_buf_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_address0 = grp_aes_encrypt_ecb_fu_602_buf_r_address0.read();
    } else {
        buf_address0 = "XXXX";
    }
}

void aescbc::thread_buf_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_address1 = grp_aes_decrypt_ecb_fu_613_buf_r_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_address1 = grp_aes_encrypt_ecb_fu_602_buf_r_address1.read();
    } else {
        buf_address1 = "XXXX";
    }
}

void aescbc::thread_buf_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_728_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_814_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())))) {
        buf_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_ce0 = grp_aes_decrypt_ecb_fu_613_buf_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_ce0 = grp_aes_encrypt_ecb_fu_602_buf_r_ce0.read();
    } else {
        buf_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_ce1 = grp_aes_decrypt_ecb_fu_613_buf_r_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_ce1 = grp_aes_encrypt_ecb_fu_602_buf_r_ce1.read();
    } else {
        buf_ce1 = ap_const_logic_0;
    }
}

void aescbc::thread_buf_d0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())))) {
        buf_d0 = grp_fu_636_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())))) {
        buf_d0 = data_in_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_d0 = grp_aes_decrypt_ecb_fu_613_buf_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_d0 = grp_aes_encrypt_ecb_fu_602_buf_r_d0.read();
    } else {
        buf_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_buf_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_d1 = grp_aes_decrypt_ecb_fu_613_buf_r_d1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_d1 = grp_aes_encrypt_ecb_fu_602_buf_r_d1.read();
    } else {
        buf_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_buf_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state22.read())))) {
        buf_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_we0 = grp_aes_decrypt_ecb_fu_613_buf_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_we0 = grp_aes_encrypt_ecb_fu_602_buf_r_we0.read();
    } else {
        buf_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        buf_we1 = grp_aes_decrypt_ecb_fu_613_buf_r_we1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        buf_we1 = grp_aes_encrypt_ecb_fu_602_buf_r_we1.read();
    } else {
        buf_we1 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_deckey_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        ctx_deckey_address0 =  (sc_lv<5>) (tmp_i_9_reg_1181.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_address0 = grp_aes_expandEncKey_fu_626_k_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_deckey_address0 = grp_aes_decrypt_ecb_fu_613_ctx_deckey_address0.read();
    } else {
        ctx_deckey_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_ctx_deckey_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_address1 = grp_aes_expandEncKey_fu_626_k_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_deckey_address1 = grp_aes_decrypt_ecb_fu_613_ctx_deckey_address1.read();
    } else {
        ctx_deckey_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_ctx_deckey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        ctx_deckey_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_ce0 = grp_aes_expandEncKey_fu_626_k_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_deckey_ce0 = grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce0.read();
    } else {
        ctx_deckey_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_deckey_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_ce1 = grp_aes_expandEncKey_fu_626_k_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_deckey_ce1 = grp_aes_decrypt_ecb_fu_613_ctx_deckey_ce1.read();
    } else {
        ctx_deckey_ce1 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_deckey_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        ctx_deckey_d0 = key_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_d0 = grp_aes_expandEncKey_fu_626_k_d0.read();
    } else {
        ctx_deckey_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_ctx_deckey_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read())))) {
        ctx_deckey_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_we0 = grp_aes_expandEncKey_fu_626_k_we0.read();
    } else {
        ctx_deckey_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_deckey_we1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state34.read()))) {
        ctx_deckey_we1 = grp_aes_expandEncKey_fu_626_k_we1.read();
    } else {
        ctx_deckey_we1 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_enckey_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        ctx_enckey_address0 =  (sc_lv<5>) (tmp_i_9_reg_1181.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_enckey_address0 = grp_aes_encrypt_ecb_fu_602_ctx_enckey_address0.read();
    } else {
        ctx_enckey_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_ctx_enckey_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read()))) {
        ctx_enckey_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_enckey_ce0 = grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce0.read();
    } else {
        ctx_enckey_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_enckey_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_enckey_ce1 = grp_aes_encrypt_ecb_fu_602_ctx_enckey_ce1.read();
    } else {
        ctx_enckey_ce1 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_enckey_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state32.read())))) {
        ctx_enckey_we0 = ap_const_logic_1;
    } else {
        ctx_enckey_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_key_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_address0 = grp_aes_decrypt_ecb_fu_613_ctx_key_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_address0 = grp_aes_encrypt_ecb_fu_602_ctx_key_address0.read();
    } else {
        ctx_key_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_ctx_key_address1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_address1 = grp_aes_decrypt_ecb_fu_613_ctx_key_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_address1 = grp_aes_encrypt_ecb_fu_602_ctx_key_address1.read();
    } else {
        ctx_key_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_ctx_key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_ce0 = grp_aes_decrypt_ecb_fu_613_ctx_key_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_ce0 = grp_aes_encrypt_ecb_fu_602_ctx_key_ce0.read();
    } else {
        ctx_key_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_key_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_ce1 = grp_aes_decrypt_ecb_fu_613_ctx_key_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_ce1 = grp_aes_encrypt_ecb_fu_602_ctx_key_ce1.read();
    } else {
        ctx_key_ce1 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_key_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_d0 = grp_aes_decrypt_ecb_fu_613_ctx_key_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_d0 = grp_aes_encrypt_ecb_fu_602_ctx_key_d0.read();
    } else {
        ctx_key_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_ctx_key_d1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_d1 = grp_aes_decrypt_ecb_fu_613_ctx_key_d1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_d1 = grp_aes_encrypt_ecb_fu_602_ctx_key_d1.read();
    } else {
        ctx_key_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_ctx_key_we0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_we0 = grp_aes_decrypt_ecb_fu_613_ctx_key_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_we0 = grp_aes_encrypt_ecb_fu_602_ctx_key_we0.read();
    } else {
        ctx_key_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_ctx_key_we1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        ctx_key_we1 = grp_aes_decrypt_ecb_fu_613_ctx_key_we1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        ctx_key_we1 = grp_aes_encrypt_ecb_fu_602_ctx_key_we1.read();
    } else {
        ctx_key_we1 = ap_const_logic_0;
    }
}

void aescbc::thread_data_in_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        data_in_address0 =  (sc_lv<5>) (tmp_s_fu_809_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        data_in_address0 =  (sc_lv<5>) (tmp_1_fu_723_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        data_in_address0 =  (sc_lv<5>) (tmp_2_fu_689_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        data_in_address0 =  (sc_lv<5>) (tmp_9_fu_655_p1.read());
    } else {
        data_in_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_data_in_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read())))) {
        data_in_ce0 = ap_const_logic_1;
    } else {
        data_in_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_data_out_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        data_out_address0 =  (sc_lv<4>) (tmp_8_fu_878_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read()))) {
        data_out_address0 =  (sc_lv<4>) (tmp_28_reg_1137.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        data_out_address0 =  (sc_lv<4>) (tmp_31_reg_1065.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        data_out_address0 =  (sc_lv<4>) (tmp_19_fu_706_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        data_out_address0 =  (sc_lv<4>) (tmp_20_fu_672_p1.read());
    } else {
        data_out_address0 = "XXXX";
    }
}

void aescbc::thread_data_out_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())))) {
        data_out_ce0 = ap_const_logic_1;
    } else {
        data_out_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_data_out_d0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())))) {
        data_out_d0 = buf_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read())))) {
        data_out_d0 = ap_const_lv8_0;
    } else {
        data_out_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_data_out_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_660_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_694_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_866_p2.read())))) {
        data_out_we0 = ap_const_logic_1;
    } else {
        data_out_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_grp_aes_decrypt_ecb_fu_613_ap_start() {
    grp_aes_decrypt_ecb_fu_613_ap_start = ap_reg_grp_aes_decrypt_ecb_fu_613_ap_start.read();
}

void aescbc::thread_grp_aes_encrypt_ecb_fu_602_ap_start() {
    grp_aes_encrypt_ecb_fu_602_ap_start = ap_reg_grp_aes_encrypt_ecb_fu_602_ap_start.read();
}

void aescbc::thread_grp_aes_expandEncKey_fu_626_ap_start() {
    grp_aes_expandEncKey_fu_626_ap_start = ap_reg_grp_aes_expandEncKey_fu_626_ap_start.read();
}

void aescbc::thread_grp_fu_636_p2() {
    grp_fu_636_p2 = (xorv_q0.read() ^ buf_q0.read());
}

void aescbc::thread_i_13_fu_872_p2() {
    i_13_fu_872_p2 = (!i_reg_546.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_546.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_15_fu_803_p2() {
    i_15_fu_803_p2 = (!i_2_reg_502.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_2_reg_502.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_16_fu_717_p2() {
    i_16_fu_717_p2 = (!i_6_reg_447.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_6_reg_447.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_17_fu_683_p2() {
    i_17_fu_683_p2 = (!i_s_reg_425.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_s_reg_425.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_18_fu_649_p2() {
    i_18_fu_649_p2 = (!i_11_reg_403.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_11_reg_403.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void aescbc::thread_i_19_fu_889_p2() {
    i_19_fu_889_p2 = (!i_1_reg_557.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_557.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_20_fu_820_p2() {
    i_20_fu_820_p2 = (!i_3_reg_513.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_3_reg_513.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_21_fu_734_p2() {
    i_21_fu_734_p2 = (!i_7_reg_458.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_7_reg_458.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_22_fu_700_p2() {
    i_22_fu_700_p2 = (!i_12_reg_436.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_12_reg_436.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_23_fu_666_p2() {
    i_23_fu_666_p2 = (!i_14_reg_414.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_14_reg_414.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_24_fu_838_p2() {
    i_24_fu_838_p2 = (!i_4_reg_524.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_4_reg_524.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_25_fu_751_p2() {
    i_25_fu_751_p2 = (!i_8_reg_469.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_8_reg_469.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_26_fu_855_p2() {
    i_26_fu_855_p2 = (!i_5_reg_535.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_5_reg_535.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_27_fu_769_p2() {
    i_27_fu_769_p2 = (!i_9_reg_480.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_9_reg_480.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_28_fu_786_p2() {
    i_28_fu_786_p2 = (!i_10_reg_491.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_10_reg_491.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void aescbc::thread_i_29_fu_906_p2() {
    i_29_fu_906_p2 = (!i_i_reg_568.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i_reg_568.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void aescbc::thread_iv_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        iv_address0 =  (sc_lv<4>) (tmp_15_fu_895_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        iv_address0 =  (sc_lv<4>) (tmp_2_reg_967.read());
    } else {
        iv_address0 = "XXXX";
    }
}

void aescbc::thread_iv_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())))) {
        iv_ce0 = ap_const_logic_1;
    } else {
        iv_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_iv_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())))) {
        iv_we0 = ap_const_logic_1;
    } else {
        iv_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_key_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()))) {
        key_address0 =  (sc_lv<5>) (tmp_i_9_fu_912_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        key_address0 =  (sc_lv<5>) (tmp_9_reg_941.read());
    } else {
        key_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void aescbc::thread_key_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())))) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_key_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())))) {
        key_we0 = ap_const_logic_1;
    } else {
        key_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_lastbuf_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        lastbuf_address0 =  (sc_lv<4>) (tmp_29_fu_775_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        lastbuf_address0 =  (sc_lv<4>) (tmp_18_reg_1011.read());
    } else {
        lastbuf_address0 = "XXXX";
    }
}

void aescbc::thread_lastbuf_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())))) {
        lastbuf_ce0 = ap_const_logic_1;
    } else {
        lastbuf_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_lastbuf_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())))) {
        lastbuf_we0 = ap_const_logic_1;
    } else {
        lastbuf_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_mode_read_read_fu_118_p2() {
    mode_read_read_fu_118_p2 = mode.read();
}

void aescbc::thread_phitmp_i_fu_923_p2() {
    phitmp_i_fu_923_p2 = (!i_30_reg_591.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(i_30_reg_591.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void aescbc::thread_tmp_10_fu_883_p2() {
    tmp_10_fu_883_p2 = (!i_1_reg_557.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_557.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_11_fu_814_p2() {
    tmp_11_fu_814_p2 = (!i_3_reg_513.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_513.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_12_fu_728_p2() {
    tmp_12_fu_728_p2 = (!i_7_reg_458.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_7_reg_458.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_13_fu_694_p2() {
    tmp_13_fu_694_p2 = (!i_12_reg_436.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_12_reg_436.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_14_fu_660_p2() {
    tmp_14_fu_660_p2 = (!i_14_reg_414.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_14_reg_414.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_15_fu_895_p1() {
    tmp_15_fu_895_p1 = esl_zext<64,5>(i_1_reg_557.read());
}

void aescbc::thread_tmp_16_fu_826_p1() {
    tmp_16_fu_826_p1 = esl_zext<64,5>(i_3_reg_513.read());
}

void aescbc::thread_tmp_18_fu_740_p1() {
    tmp_18_fu_740_p1 = esl_zext<64,5>(i_7_reg_458.read());
}

void aescbc::thread_tmp_19_fu_706_p1() {
    tmp_19_fu_706_p1 = esl_zext<64,5>(i_12_reg_436.read());
}

void aescbc::thread_tmp_1_fu_723_p1() {
    tmp_1_fu_723_p1 = esl_zext<64,5>(i_6_reg_447.read());
}

void aescbc::thread_tmp_20_fu_672_p1() {
    tmp_20_fu_672_p1 = esl_zext<64,5>(i_14_reg_414.read());
}

void aescbc::thread_tmp_21_fu_832_p2() {
    tmp_21_fu_832_p2 = (!i_4_reg_524.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_4_reg_524.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_22_fu_745_p2() {
    tmp_22_fu_745_p2 = (!i_8_reg_469.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_8_reg_469.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_23_fu_844_p1() {
    tmp_23_fu_844_p1 = esl_zext<64,5>(i_4_reg_524.read());
}

void aescbc::thread_tmp_24_fu_757_p1() {
    tmp_24_fu_757_p1 = esl_zext<64,5>(i_8_reg_469.read());
}

void aescbc::thread_tmp_26_fu_849_p2() {
    tmp_26_fu_849_p2 = (!i_5_reg_535.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_5_reg_535.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_27_fu_763_p2() {
    tmp_27_fu_763_p2 = (!i_9_reg_480.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_9_reg_480.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_28_fu_861_p1() {
    tmp_28_fu_861_p1 = esl_zext<64,5>(i_5_reg_535.read());
}

void aescbc::thread_tmp_29_fu_775_p1() {
    tmp_29_fu_775_p1 = esl_zext<64,5>(i_9_reg_480.read());
}

void aescbc::thread_tmp_2_fu_689_p1() {
    tmp_2_fu_689_p1 = esl_zext<64,5>(i_s_reg_425.read());
}

void aescbc::thread_tmp_30_fu_780_p2() {
    tmp_30_fu_780_p2 = (!i_10_reg_491.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_10_reg_491.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_31_fu_792_p1() {
    tmp_31_fu_792_p1 = esl_zext<64,5>(i_10_reg_491.read());
}

void aescbc::thread_tmp_3_fu_866_p2() {
    tmp_3_fu_866_p2 = (!i_reg_546.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_546.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_4_fu_797_p2() {
    tmp_4_fu_797_p2 = (!i_2_reg_502.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_502.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_5_fu_711_p2() {
    tmp_5_fu_711_p2 = (!i_6_reg_447.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_6_reg_447.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_6_fu_677_p2() {
    tmp_6_fu_677_p2 = (!i_s_reg_425.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_s_reg_425.read() == ap_const_lv5_10);
}

void aescbc::thread_tmp_7_fu_643_p2() {
    tmp_7_fu_643_p2 = (!i_11_reg_403.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_11_reg_403.read() == ap_const_lv6_20);
}

void aescbc::thread_tmp_8_fu_878_p1() {
    tmp_8_fu_878_p1 = esl_zext<64,5>(i_reg_546.read());
}

void aescbc::thread_tmp_90_i_fu_917_p2() {
    tmp_90_i_fu_917_p2 = (!i_30_reg_591.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(i_30_reg_591.read() == ap_const_lv3_0);
}

void aescbc::thread_tmp_9_fu_655_p1() {
    tmp_9_fu_655_p1 = esl_zext<64,6>(i_11_reg_403.read());
}

void aescbc::thread_tmp_i_9_fu_912_p1() {
    tmp_i_9_fu_912_p1 = esl_zext<64,6>(i_i_reg_568.read());
}

void aescbc::thread_tmp_i_fu_900_p2() {
    tmp_i_fu_900_p2 = (!i_i_reg_568.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_568.read() == ap_const_lv6_20);
}

void aescbc::thread_tmp_s_fu_809_p1() {
    tmp_s_fu_809_p1 = esl_zext<64,5>(i_2_reg_502.read());
}

void aescbc::thread_xorv_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read()))) {
        xorv_address0 =  (sc_lv<4>) (tmp_15_reg_1163.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        xorv_address0 =  (sc_lv<4>) (tmp_23_reg_1119.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        xorv_address0 =  (sc_lv<4>) (tmp_16_fu_826_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        xorv_address0 =  (sc_lv<4>) (tmp_29_reg_1047.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        xorv_address0 =  (sc_lv<4>) (tmp_24_fu_757_p1.read());
    } else {
        xorv_address0 = "XXXX";
    }
}

void aescbc::thread_xorv_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())))) {
        xorv_ce0 = ap_const_logic_1;
    } else {
        xorv_ce0 = ap_const_logic_0;
    }
}

void aescbc::thread_xorv_d0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read()))) {
        xorv_d0 = iv_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        xorv_d0 = buf_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        xorv_d0 = lastbuf_q0.read();
    } else {
        xorv_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void aescbc::thread_xorv_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())))) {
        xorv_we0 = ap_const_logic_1;
    } else {
        xorv_we0 = ap_const_logic_0;
    }
}

void aescbc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_0))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_2))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_3))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_4))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_0) && !esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_1) && !esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_2) && !esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_3) && !esl_seteq<1,3,3>(mode_read_read_fu_118_p2.read(), ap_const_lv3_4))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(tmp_7_fu_643_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_660_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_677_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_13_fu_694_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_5_fu_711_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_12_fu_728_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_decrypt_ecb_fu_613_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_22_fu_745_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 16384 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_27_fu_763_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 65536 : 
            if ((esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_0) || esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_1) || !esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_2) || esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_3) || esl_seteq<1,3,3>(mode_read_reg_929.read(), ap_const_lv3_4) || !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_780_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 262144 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_797_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 1048576 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_11_fu_814_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 4194304 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_encrypt_ecb_fu_602_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_state23;
            }
            break;
        case 8388608 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_832_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 33554432 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_26_fu_849_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 134217728 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_866_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_10_fu_883_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 1073741824 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_900_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 4294967296 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_90_i_fu_917_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 8589934592 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_aes_expandEncKey_fu_626_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<34>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void aescbc::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

