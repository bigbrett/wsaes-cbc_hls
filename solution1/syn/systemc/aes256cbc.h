// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _aes256cbc_HH_
#define _aes256cbc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "aes256_encrypt_ecb.h"
#include "aes256_decrypt_ecb.h"
#include "aes_expandEncKey.h"
#include "aes256cbc_iv.h"
#include "aes256cbc_key.h"
#include "aes256cbc_ctx_decfYi.h"
#include "aes256cbc_ctx_encg8j.h"
#include "aes256cbc_buf.h"
#include "aes256cbc_AXILiteS_s_axi.h"
#include "aes256cbc_p0_s_axi.h"
#include "aes256cbc_memptr_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_MEMPTR_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_MEMPTR_ID_WIDTH = 1,
         unsigned int C_M_AXI_MEMPTR_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMPTR_DATA_WIDTH = 32,
         unsigned int C_M_AXI_MEMPTR_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMPTR_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMPTR_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_MEMPTR_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 4,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_S_AXI_P0_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_P0_DATA_WIDTH = 32>
struct aes256cbc : public sc_module {
    // Port declarations 82
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_memptr_AWVALID;
    sc_in< sc_logic > m_axi_memptr_AWREADY;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ADDR_WIDTH> > m_axi_memptr_AWADDR;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ID_WIDTH> > m_axi_memptr_AWID;
    sc_out< sc_lv<8> > m_axi_memptr_AWLEN;
    sc_out< sc_lv<3> > m_axi_memptr_AWSIZE;
    sc_out< sc_lv<2> > m_axi_memptr_AWBURST;
    sc_out< sc_lv<2> > m_axi_memptr_AWLOCK;
    sc_out< sc_lv<4> > m_axi_memptr_AWCACHE;
    sc_out< sc_lv<3> > m_axi_memptr_AWPROT;
    sc_out< sc_lv<4> > m_axi_memptr_AWQOS;
    sc_out< sc_lv<4> > m_axi_memptr_AWREGION;
    sc_out< sc_uint<C_M_AXI_MEMPTR_AWUSER_WIDTH> > m_axi_memptr_AWUSER;
    sc_out< sc_logic > m_axi_memptr_WVALID;
    sc_in< sc_logic > m_axi_memptr_WREADY;
    sc_out< sc_uint<C_M_AXI_MEMPTR_DATA_WIDTH> > m_axi_memptr_WDATA;
    sc_out< sc_uint<C_M_AXI_MEMPTR_DATA_WIDTH/8> > m_axi_memptr_WSTRB;
    sc_out< sc_logic > m_axi_memptr_WLAST;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ID_WIDTH> > m_axi_memptr_WID;
    sc_out< sc_uint<C_M_AXI_MEMPTR_WUSER_WIDTH> > m_axi_memptr_WUSER;
    sc_out< sc_logic > m_axi_memptr_ARVALID;
    sc_in< sc_logic > m_axi_memptr_ARREADY;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ADDR_WIDTH> > m_axi_memptr_ARADDR;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ID_WIDTH> > m_axi_memptr_ARID;
    sc_out< sc_lv<8> > m_axi_memptr_ARLEN;
    sc_out< sc_lv<3> > m_axi_memptr_ARSIZE;
    sc_out< sc_lv<2> > m_axi_memptr_ARBURST;
    sc_out< sc_lv<2> > m_axi_memptr_ARLOCK;
    sc_out< sc_lv<4> > m_axi_memptr_ARCACHE;
    sc_out< sc_lv<3> > m_axi_memptr_ARPROT;
    sc_out< sc_lv<4> > m_axi_memptr_ARQOS;
    sc_out< sc_lv<4> > m_axi_memptr_ARREGION;
    sc_out< sc_uint<C_M_AXI_MEMPTR_ARUSER_WIDTH> > m_axi_memptr_ARUSER;
    sc_in< sc_logic > m_axi_memptr_RVALID;
    sc_out< sc_logic > m_axi_memptr_RREADY;
    sc_in< sc_uint<C_M_AXI_MEMPTR_DATA_WIDTH> > m_axi_memptr_RDATA;
    sc_in< sc_logic > m_axi_memptr_RLAST;
    sc_in< sc_uint<C_M_AXI_MEMPTR_ID_WIDTH> > m_axi_memptr_RID;
    sc_in< sc_uint<C_M_AXI_MEMPTR_RUSER_WIDTH> > m_axi_memptr_RUSER;
    sc_in< sc_lv<2> > m_axi_memptr_RRESP;
    sc_in< sc_logic > m_axi_memptr_BVALID;
    sc_out< sc_logic > m_axi_memptr_BREADY;
    sc_in< sc_lv<2> > m_axi_memptr_BRESP;
    sc_in< sc_uint<C_M_AXI_MEMPTR_ID_WIDTH> > m_axi_memptr_BID;
    sc_in< sc_uint<C_M_AXI_MEMPTR_BUSER_WIDTH> > m_axi_memptr_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_in< sc_logic > s_axi_p0_AWVALID;
    sc_out< sc_logic > s_axi_p0_AWREADY;
    sc_in< sc_uint<C_S_AXI_P0_ADDR_WIDTH> > s_axi_p0_AWADDR;
    sc_in< sc_logic > s_axi_p0_WVALID;
    sc_out< sc_logic > s_axi_p0_WREADY;
    sc_in< sc_uint<C_S_AXI_P0_DATA_WIDTH> > s_axi_p0_WDATA;
    sc_in< sc_uint<C_S_AXI_P0_DATA_WIDTH/8> > s_axi_p0_WSTRB;
    sc_in< sc_logic > s_axi_p0_ARVALID;
    sc_out< sc_logic > s_axi_p0_ARREADY;
    sc_in< sc_uint<C_S_AXI_P0_ADDR_WIDTH> > s_axi_p0_ARADDR;
    sc_out< sc_logic > s_axi_p0_RVALID;
    sc_in< sc_logic > s_axi_p0_RREADY;
    sc_out< sc_uint<C_S_AXI_P0_DATA_WIDTH> > s_axi_p0_RDATA;
    sc_out< sc_lv<2> > s_axi_p0_RRESP;
    sc_out< sc_logic > s_axi_p0_BVALID;
    sc_in< sc_logic > s_axi_p0_BREADY;
    sc_out< sc_lv<2> > s_axi_p0_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<1> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const5;
    sc_signal< sc_lv<3> > ap_var_for_const2;
    sc_signal< sc_lv<2> > ap_var_for_const3;
    sc_signal< sc_lv<4> > ap_var_for_const4;


    // Module declarations
    aes256cbc(sc_module_name name);
    SC_HAS_PROCESS(aes256cbc);

    ~aes256cbc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    aes256cbc_iv* iv_U;
    aes256cbc_iv* xorv_U;
    aes256cbc_key* key_U;
    aes256cbc_ctx_decfYi* ctx_deckey_U;
    aes256cbc_ctx_encg8j* ctx_enckey_U;
    aes256cbc_ctx_decfYi* ctx_key_U;
    aes256cbc_iv* lastbuf_U;
    aes256cbc_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* aes256cbc_AXILiteS_s_axi_U;
    aes256cbc_p0_s_axi<C_S_AXI_P0_ADDR_WIDTH,C_S_AXI_P0_DATA_WIDTH>* aes256cbc_p0_s_axi_U;
    aes256cbc_memptr_m_axi<8,32,5,16,16,16,16,C_M_AXI_MEMPTR_ID_WIDTH,C_M_AXI_MEMPTR_ADDR_WIDTH,C_M_AXI_MEMPTR_DATA_WIDTH,C_M_AXI_MEMPTR_AWUSER_WIDTH,C_M_AXI_MEMPTR_ARUSER_WIDTH,C_M_AXI_MEMPTR_WUSER_WIDTH,C_M_AXI_MEMPTR_RUSER_WIDTH,C_M_AXI_MEMPTR_BUSER_WIDTH,C_M_AXI_MEMPTR_TARGET_ADDR,C_M_AXI_MEMPTR_USER_VALUE,C_M_AXI_MEMPTR_PROT_VALUE,C_M_AXI_MEMPTR_CACHE_VALUE>* aes256cbc_memptr_m_axi_U;
    aes256cbc_buf* buf_U;
    aes256_encrypt_ecb* grp_aes256_encrypt_ecb_fu_544;
    aes256_decrypt_ecb* grp_aes256_decrypt_ecb_fu_555;
    aes_expandEncKey* grp_aes_expandEncKey_fu_568;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<46> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<3> > mode;
    sc_signal< sc_lv<32> > inbuf_addr;
    sc_signal< sc_lv<32> > outbuf_addr;
    sc_signal< sc_lv<4> > iv_address0;
    sc_signal< sc_logic > iv_ce0;
    sc_signal< sc_logic > iv_we0;
    sc_signal< sc_lv<8> > iv_q0;
    sc_signal< sc_lv<4> > xorv_address0;
    sc_signal< sc_logic > xorv_ce0;
    sc_signal< sc_logic > xorv_we0;
    sc_signal< sc_lv<8> > xorv_d0;
    sc_signal< sc_lv<8> > xorv_q0;
    sc_signal< sc_lv<5> > key_address0;
    sc_signal< sc_logic > key_ce0;
    sc_signal< sc_logic > key_we0;
    sc_signal< sc_lv<8> > key_q0;
    sc_signal< sc_lv<5> > ctx_deckey_address0;
    sc_signal< sc_logic > ctx_deckey_ce0;
    sc_signal< sc_logic > ctx_deckey_we0;
    sc_signal< sc_lv<8> > ctx_deckey_d0;
    sc_signal< sc_lv<8> > ctx_deckey_q0;
    sc_signal< sc_lv<5> > ctx_deckey_address1;
    sc_signal< sc_logic > ctx_deckey_ce1;
    sc_signal< sc_logic > ctx_deckey_we1;
    sc_signal< sc_lv<8> > ctx_deckey_q1;
    sc_signal< sc_lv<5> > ctx_enckey_address0;
    sc_signal< sc_logic > ctx_enckey_ce0;
    sc_signal< sc_logic > ctx_enckey_we0;
    sc_signal< sc_lv<8> > ctx_enckey_q0;
    sc_signal< sc_logic > ctx_enckey_ce1;
    sc_signal< sc_lv<8> > ctx_enckey_q1;
    sc_signal< sc_lv<5> > ctx_key_address0;
    sc_signal< sc_logic > ctx_key_ce0;
    sc_signal< sc_logic > ctx_key_we0;
    sc_signal< sc_lv<8> > ctx_key_d0;
    sc_signal< sc_lv<8> > ctx_key_q0;
    sc_signal< sc_lv<5> > ctx_key_address1;
    sc_signal< sc_logic > ctx_key_ce1;
    sc_signal< sc_logic > ctx_key_we1;
    sc_signal< sc_lv<8> > ctx_key_d1;
    sc_signal< sc_lv<8> > ctx_key_q1;
    sc_signal< sc_lv<4> > lastbuf_address0;
    sc_signal< sc_logic > lastbuf_ce0;
    sc_signal< sc_logic > lastbuf_we0;
    sc_signal< sc_lv<8> > lastbuf_q0;
    sc_signal< sc_logic > memptr_blk_n_AR;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<3> > mode_read_reg_906;
    sc_signal< sc_logic > memptr_blk_n_R;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp4_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter1;
    sc_signal< sc_lv<1> > exitcond_reg_1035;
    sc_signal< sc_logic > memptr_blk_n_AW;
    sc_signal< sc_lv<1> > ap_CS_fsm_state43;
    sc_signal< sc_lv<1> > tmp_135_fu_802_p2;
    sc_signal< sc_logic > memptr_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter2;
    sc_signal< sc_lv<1> > exitcond9_reg_1086;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp5_iter1_exitcond9_reg_1086;
    sc_signal< sc_logic > memptr_blk_n_B;
    sc_signal< sc_lv<1> > ap_CS_fsm_state52;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<1> > exitcond1_reg_952;
    sc_signal< sc_lv<1> > ap_CS_fsm_state26;
    sc_signal< sc_lv<1> > tmp_141_fu_723_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter2;
    sc_signal< sc_lv<1> > exitcond4_reg_1021;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp3_iter1_exitcond4_reg_1021;
    sc_signal< sc_lv<1> > ap_CS_fsm_state35;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > exitcond2_reg_943;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > exitcond3_reg_934;
    sc_signal< sc_logic > memptr_AWVALID;
    sc_signal< sc_logic > memptr_AWREADY;
    sc_signal< sc_lv<32> > memptr_AWADDR;
    sc_signal< sc_logic > memptr_WVALID;
    sc_signal< sc_logic > memptr_WREADY;
    sc_signal< sc_logic > memptr_ARVALID;
    sc_signal< sc_logic > memptr_ARREADY;
    sc_signal< sc_lv<32> > memptr_ARADDR;
    sc_signal< sc_lv<32> > memptr_ARLEN;
    sc_signal< sc_logic > memptr_RVALID;
    sc_signal< sc_logic > memptr_RREADY;
    sc_signal< sc_lv<8> > memptr_RDATA;
    sc_signal< sc_logic > memptr_RLAST;
    sc_signal< sc_lv<1> > memptr_RID;
    sc_signal< sc_lv<1> > memptr_RUSER;
    sc_signal< sc_lv<2> > memptr_RRESP;
    sc_signal< sc_logic > memptr_BVALID;
    sc_signal< sc_logic > memptr_BREADY;
    sc_signal< sc_lv<2> > memptr_BRESP;
    sc_signal< sc_lv<1> > memptr_BID;
    sc_signal< sc_lv<1> > memptr_BUSER;
    sc_signal< sc_lv<6> > indvar3_reg_374;
    sc_signal< sc_lv<6> > ap_pipeline_reg_pp0_iter1_indvar3_reg_374;
    sc_signal< sc_lv<5> > indvar2_reg_386;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp1_iter1_indvar2_reg_386;
    sc_signal< sc_lv<5> > indvar1_reg_398;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp2_iter1_indvar1_reg_398;
    sc_signal< sc_lv<5> > indvar4_reg_443;
    sc_signal< sc_lv<5> > indvar_reg_454;
    sc_signal< sc_lv<5> > ap_pipeline_reg_pp4_iter1_indvar_reg_454;
    sc_signal< sc_lv<5> > indvar7_reg_488;
    sc_signal< sc_lv<8> > reg_585;
    sc_signal< sc_lv<8> > buf_q0;
    sc_signal< sc_lv<8> > reg_592;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp3_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_logic > ap_sig_ioackin_memptr_WREADY;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp5_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter1;
    sc_signal< sc_lv<32> > outbuf_addr_read_reg_892;
    sc_signal< sc_lv<32> > inbuf_addr_read_reg_898;
    sc_signal< sc_lv<3> > mode_read_read_fu_156_p2;
    sc_signal< sc_logic > ap_sig_ioackin_memptr_ARREADY;
    sc_signal< sc_lv<1> > exitcond3_fu_637_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond3_reg_934;
    sc_signal< sc_lv<6> > indvar_next3_fu_643_p2;
    sc_signal< sc_lv<6> > indvar_next3_reg_938;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond2_fu_654_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter1_exitcond2_reg_943;
    sc_signal< sc_lv<5> > indvar_next2_fu_660_p2;
    sc_signal< sc_lv<5> > indvar_next2_reg_947;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > exitcond1_fu_671_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp2_iter1_exitcond1_reg_952;
    sc_signal< sc_lv<5> > indvar_next1_fu_677_p2;
    sc_signal< sc_lv<5> > indvar_next1_reg_956;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<5> > i_9_fu_694_p2;
    sc_signal< sc_lv<5> > i_9_reg_964;
    sc_signal< sc_lv<1> > ap_CS_fsm_state21;
    sc_signal< sc_lv<64> > tmp_134_fu_700_p1;
    sc_signal< sc_lv<64> > tmp_134_reg_969;
    sc_signal< sc_lv<1> > tmp_131_fu_688_p2;
    sc_signal< sc_lv<5> > i_11_fu_711_p2;
    sc_signal< sc_lv<5> > i_11_reg_982;
    sc_signal< sc_lv<1> > ap_CS_fsm_state24;
    sc_signal< sc_lv<4> > buf_addr_8_reg_987;
    sc_signal< sc_lv<1> > tmp_136_fu_705_p2;
    sc_signal< sc_logic > ap_sig_ioackin_memptr_AWREADY;
    sc_signal< sc_lv<5> > i_13_fu_729_p2;
    sc_signal< sc_lv<5> > i_13_reg_1001;
    sc_signal< sc_lv<64> > tmp_144_fu_735_p1;
    sc_signal< sc_lv<64> > tmp_144_reg_1006;
    sc_signal< sc_lv<1> > exitcond4_fu_750_p2;
    sc_signal< sc_lv<5> > indvar_next4_fu_756_p2;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<1> > exitcond_fu_767_p2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp4_iter1_exitcond_reg_1035;
    sc_signal< sc_lv<5> > indvar_next_fu_773_p2;
    sc_signal< sc_lv<5> > indvar_next_reg_1039;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter0;
    sc_signal< sc_lv<5> > i_8_fu_790_p2;
    sc_signal< sc_lv<5> > i_8_reg_1047;
    sc_signal< sc_lv<1> > ap_CS_fsm_state40;
    sc_signal< sc_lv<4> > buf_addr_5_reg_1052;
    sc_signal< sc_lv<1> > tmp_130_fu_784_p2;
    sc_signal< sc_lv<5> > i_12_fu_808_p2;
    sc_signal< sc_lv<5> > i_12_reg_1066;
    sc_signal< sc_lv<64> > tmp_138_fu_814_p1;
    sc_signal< sc_lv<64> > tmp_138_reg_1071;
    sc_signal< sc_lv<1> > exitcond9_fu_829_p2;
    sc_signal< sc_lv<5> > indvar_next8_fu_835_p2;
    sc_signal< sc_logic > ap_enable_reg_pp5_iter0;
    sc_signal< sc_lv<5> > i_6_fu_852_p2;
    sc_signal< sc_lv<5> > i_6_reg_1103;
    sc_signal< sc_lv<1> > ap_CS_fsm_state53;
    sc_signal< sc_lv<64> > tmp_125_fu_858_p1;
    sc_signal< sc_lv<64> > tmp_125_reg_1108;
    sc_signal< sc_lv<1> > tmp_124_fu_846_p2;
    sc_signal< sc_lv<6> > i_7_fu_869_p2;
    sc_signal< sc_lv<6> > i_7_reg_1121;
    sc_signal< sc_lv<1> > ap_CS_fsm_state55;
    sc_signal< sc_lv<64> > tmp_i_8_fu_875_p1;
    sc_signal< sc_lv<64> > tmp_i_8_reg_1126;
    sc_signal< sc_lv<1> > tmp_i_fu_863_p2;
    sc_signal< sc_lv<3> > phitmp_i_fu_886_p2;
    sc_signal< sc_lv<3> > phitmp_i_reg_1140;
    sc_signal< sc_lv<1> > ap_CS_fsm_state57;
    sc_signal< sc_lv<1> > tmp_212_i_fu_880_p2;
    sc_signal< sc_lv<8> > grp_aes_expandEncKey_fu_568_ap_return;
    sc_signal< sc_lv<1> > ap_CS_fsm_state58;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_ap_done;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter2;
    sc_signal< sc_lv<4> > buf_address0;
    sc_signal< sc_logic > buf_ce0;
    sc_signal< sc_logic > buf_we0;
    sc_signal< sc_lv<8> > buf_d0;
    sc_signal< sc_lv<4> > buf_address1;
    sc_signal< sc_logic > buf_ce1;
    sc_signal< sc_logic > buf_we1;
    sc_signal< sc_lv<8> > buf_d1;
    sc_signal< sc_lv<8> > buf_q1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ap_start;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ap_done;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ap_idle;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ap_ready;
    sc_signal< sc_lv<4> > grp_aes256_encrypt_ecb_fu_544_buf_r_address0;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_buf_r_ce0;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_buf_r_we0;
    sc_signal< sc_lv<8> > grp_aes256_encrypt_ecb_fu_544_buf_r_d0;
    sc_signal< sc_lv<4> > grp_aes256_encrypt_ecb_fu_544_buf_r_address1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_buf_r_ce1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_buf_r_we1;
    sc_signal< sc_lv<8> > grp_aes256_encrypt_ecb_fu_544_buf_r_d1;
    sc_signal< sc_lv<5> > grp_aes256_encrypt_ecb_fu_544_ctx_enckey_address0;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_enckey_ce0;
    sc_signal< sc_lv<5> > grp_aes256_encrypt_ecb_fu_544_ctx_enckey_address1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_enckey_ce1;
    sc_signal< sc_lv<5> > grp_aes256_encrypt_ecb_fu_544_ctx_key_address0;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_key_ce0;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_key_we0;
    sc_signal< sc_lv<8> > grp_aes256_encrypt_ecb_fu_544_ctx_key_d0;
    sc_signal< sc_lv<5> > grp_aes256_encrypt_ecb_fu_544_ctx_key_address1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_key_ce1;
    sc_signal< sc_logic > grp_aes256_encrypt_ecb_fu_544_ctx_key_we1;
    sc_signal< sc_lv<8> > grp_aes256_encrypt_ecb_fu_544_ctx_key_d1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ap_start;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ap_done;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ap_idle;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ap_ready;
    sc_signal< sc_lv<4> > grp_aes256_decrypt_ecb_fu_555_buf_r_address0;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_buf_r_ce0;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_buf_r_we0;
    sc_signal< sc_lv<8> > grp_aes256_decrypt_ecb_fu_555_buf_r_d0;
    sc_signal< sc_lv<4> > grp_aes256_decrypt_ecb_fu_555_buf_r_address1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_buf_r_ce1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_buf_r_we1;
    sc_signal< sc_lv<8> > grp_aes256_decrypt_ecb_fu_555_buf_r_d1;
    sc_signal< sc_lv<5> > grp_aes256_decrypt_ecb_fu_555_ctx_deckey_address0;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_deckey_ce0;
    sc_signal< sc_lv<5> > grp_aes256_decrypt_ecb_fu_555_ctx_deckey_address1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_deckey_ce1;
    sc_signal< sc_lv<5> > grp_aes256_decrypt_ecb_fu_555_ctx_key_address0;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_key_ce0;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_key_we0;
    sc_signal< sc_lv<8> > grp_aes256_decrypt_ecb_fu_555_ctx_key_d0;
    sc_signal< sc_lv<5> > grp_aes256_decrypt_ecb_fu_555_ctx_key_address1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_key_ce1;
    sc_signal< sc_logic > grp_aes256_decrypt_ecb_fu_555_ctx_key_we1;
    sc_signal< sc_lv<8> > grp_aes256_decrypt_ecb_fu_555_ctx_key_d1;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_ap_start;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_ap_idle;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_ap_ready;
    sc_signal< sc_lv<5> > grp_aes_expandEncKey_fu_568_k_address0;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_k_ce0;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_k_we0;
    sc_signal< sc_lv<8> > grp_aes_expandEncKey_fu_568_k_d0;
    sc_signal< sc_lv<5> > grp_aes_expandEncKey_fu_568_k_address1;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_k_ce1;
    sc_signal< sc_logic > grp_aes_expandEncKey_fu_568_k_we1;
    sc_signal< sc_lv<8> > grp_aes_expandEncKey_fu_568_k_d1;
    sc_signal< sc_lv<6> > indvar3_phi_fu_378_p4;
    sc_signal< sc_lv<5> > indvar2_phi_fu_390_p4;
    sc_signal< sc_lv<5> > indvar1_phi_fu_402_p4;
    sc_signal< sc_lv<5> > i_3_reg_410;
    sc_signal< sc_lv<1> > ap_CS_fsm_state22;
    sc_signal< sc_lv<1> > ap_CS_fsm_state20;
    sc_signal< sc_lv<5> > i_4_reg_421;
    sc_signal< sc_lv<1> > ap_CS_fsm_state23;
    sc_signal< sc_lv<1> > ap_CS_fsm_state25;
    sc_signal< sc_lv<5> > i_5_reg_432;
    sc_signal< sc_lv<1> > ap_CS_fsm_state27;
    sc_signal< sc_lv<5> > indvar_phi_fu_458_p4;
    sc_signal< sc_lv<5> > i_1_reg_466;
    sc_signal< sc_lv<1> > ap_CS_fsm_state41;
    sc_signal< sc_lv<1> > ap_CS_fsm_state39;
    sc_signal< sc_lv<5> > i_2_reg_477;
    sc_signal< sc_lv<1> > ap_CS_fsm_state42;
    sc_signal< sc_lv<1> > ap_CS_fsm_state44;
    sc_signal< sc_lv<5> > i_reg_499;
    sc_signal< sc_lv<1> > ap_CS_fsm_state54;
    sc_signal< sc_lv<6> > i_i_reg_510;
    sc_signal< sc_lv<1> > ap_CS_fsm_state56;
    sc_signal< sc_lv<8> > rcon_i_reg_521;
    sc_signal< sc_lv<3> > i_10_reg_533;
    sc_signal< sc_logic > ap_reg_grp_aes256_encrypt_ecb_fu_544_ap_start;
    sc_signal< sc_logic > ap_reg_grp_aes256_decrypt_ecb_fu_555_ap_start;
    sc_signal< sc_logic > ap_reg_grp_aes_expandEncKey_fu_568_ap_start;
    sc_signal< sc_lv<64> > tmp_129_fu_649_p1;
    sc_signal< sc_lv<64> > tmp_128_fu_666_p1;
    sc_signal< sc_lv<64> > tmp_127_fu_683_p1;
    sc_signal< sc_lv<64> > tmp_139_fu_717_p1;
    sc_signal< sc_lv<64> > tmp_145_fu_762_p1;
    sc_signal< sc_lv<64> > tmp_126_fu_779_p1;
    sc_signal< sc_lv<64> > tmp_132_fu_796_p1;
    sc_signal< sc_lv<64> > tmp_142_fu_841_p1;
    sc_signal< sc_lv<64> > tmp_123_fu_597_p1;
    sc_signal< sc_lv<64> > tmp_122_fu_607_p1;
    sc_signal< sc_lv<64> > tmp_121_fu_617_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_627_p1;
    sc_signal< sc_lv<64> > tmp_143_fu_740_p1;
    sc_signal< sc_lv<64> > tmp_137_fu_819_p1;
    sc_signal< sc_logic > ap_reg_ioackin_memptr_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_memptr_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_memptr_WREADY;
    sc_signal< sc_lv<8> > grp_fu_578_p2;
    sc_signal< sc_lv<46> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<46> ap_ST_fsm_state1;
    static const sc_lv<46> ap_ST_fsm_state2;
    static const sc_lv<46> ap_ST_fsm_state3;
    static const sc_lv<46> ap_ST_fsm_state4;
    static const sc_lv<46> ap_ST_fsm_state5;
    static const sc_lv<46> ap_ST_fsm_state6;
    static const sc_lv<46> ap_ST_fsm_state7;
    static const sc_lv<46> ap_ST_fsm_state8;
    static const sc_lv<46> ap_ST_fsm_pp0_stage0;
    static const sc_lv<46> ap_ST_fsm_state12;
    static const sc_lv<46> ap_ST_fsm_pp1_stage0;
    static const sc_lv<46> ap_ST_fsm_state16;
    static const sc_lv<46> ap_ST_fsm_pp2_stage0;
    static const sc_lv<46> ap_ST_fsm_state20;
    static const sc_lv<46> ap_ST_fsm_state21;
    static const sc_lv<46> ap_ST_fsm_state22;
    static const sc_lv<46> ap_ST_fsm_state23;
    static const sc_lv<46> ap_ST_fsm_state24;
    static const sc_lv<46> ap_ST_fsm_state25;
    static const sc_lv<46> ap_ST_fsm_state26;
    static const sc_lv<46> ap_ST_fsm_state27;
    static const sc_lv<46> ap_ST_fsm_pp3_stage0;
    static const sc_lv<46> ap_ST_fsm_state31;
    static const sc_lv<46> ap_ST_fsm_state32;
    static const sc_lv<46> ap_ST_fsm_state33;
    static const sc_lv<46> ap_ST_fsm_state34;
    static const sc_lv<46> ap_ST_fsm_state35;
    static const sc_lv<46> ap_ST_fsm_pp4_stage0;
    static const sc_lv<46> ap_ST_fsm_state39;
    static const sc_lv<46> ap_ST_fsm_state40;
    static const sc_lv<46> ap_ST_fsm_state41;
    static const sc_lv<46> ap_ST_fsm_state42;
    static const sc_lv<46> ap_ST_fsm_state43;
    static const sc_lv<46> ap_ST_fsm_state44;
    static const sc_lv<46> ap_ST_fsm_pp5_stage0;
    static const sc_lv<46> ap_ST_fsm_state48;
    static const sc_lv<46> ap_ST_fsm_state49;
    static const sc_lv<46> ap_ST_fsm_state50;
    static const sc_lv<46> ap_ST_fsm_state51;
    static const sc_lv<46> ap_ST_fsm_state52;
    static const sc_lv<46> ap_ST_fsm_state53;
    static const sc_lv<46> ap_ST_fsm_state54;
    static const sc_lv<46> ap_ST_fsm_state55;
    static const sc_lv<46> ap_ST_fsm_state56;
    static const sc_lv<46> ap_ST_fsm_state57;
    static const sc_lv<46> ap_ST_fsm_state58;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_MEMPTR_TARGET_ADDR;
    static const int C_M_AXI_MEMPTR_USER_VALUE;
    static const int C_M_AXI_MEMPTR_PROT_VALUE;
    static const int C_M_AXI_MEMPTR_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp4_stage0();
    void thread_ap_CS_fsm_pp5_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state52();
    void thread_ap_CS_fsm_state53();
    void thread_ap_CS_fsm_state54();
    void thread_ap_CS_fsm_state55();
    void thread_ap_CS_fsm_state56();
    void thread_ap_CS_fsm_state57();
    void thread_ap_CS_fsm_state58();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_memptr_ARREADY();
    void thread_ap_sig_ioackin_memptr_AWREADY();
    void thread_ap_sig_ioackin_memptr_WREADY();
    void thread_buf_address0();
    void thread_buf_address1();
    void thread_buf_ce0();
    void thread_buf_ce1();
    void thread_buf_d0();
    void thread_buf_d1();
    void thread_buf_we0();
    void thread_buf_we1();
    void thread_ctx_deckey_address0();
    void thread_ctx_deckey_address1();
    void thread_ctx_deckey_ce0();
    void thread_ctx_deckey_ce1();
    void thread_ctx_deckey_d0();
    void thread_ctx_deckey_we0();
    void thread_ctx_deckey_we1();
    void thread_ctx_enckey_address0();
    void thread_ctx_enckey_ce0();
    void thread_ctx_enckey_ce1();
    void thread_ctx_enckey_we0();
    void thread_ctx_key_address0();
    void thread_ctx_key_address1();
    void thread_ctx_key_ce0();
    void thread_ctx_key_ce1();
    void thread_ctx_key_d0();
    void thread_ctx_key_d1();
    void thread_ctx_key_we0();
    void thread_ctx_key_we1();
    void thread_exitcond1_fu_671_p2();
    void thread_exitcond2_fu_654_p2();
    void thread_exitcond3_fu_637_p2();
    void thread_exitcond4_fu_750_p2();
    void thread_exitcond9_fu_829_p2();
    void thread_exitcond_fu_767_p2();
    void thread_grp_aes256_decrypt_ecb_fu_555_ap_start();
    void thread_grp_aes256_encrypt_ecb_fu_544_ap_start();
    void thread_grp_aes_expandEncKey_fu_568_ap_start();
    void thread_grp_fu_578_p2();
    void thread_i_11_fu_711_p2();
    void thread_i_12_fu_808_p2();
    void thread_i_13_fu_729_p2();
    void thread_i_6_fu_852_p2();
    void thread_i_7_fu_869_p2();
    void thread_i_8_fu_790_p2();
    void thread_i_9_fu_694_p2();
    void thread_indvar1_phi_fu_402_p4();
    void thread_indvar2_phi_fu_390_p4();
    void thread_indvar3_phi_fu_378_p4();
    void thread_indvar_next1_fu_677_p2();
    void thread_indvar_next2_fu_660_p2();
    void thread_indvar_next3_fu_643_p2();
    void thread_indvar_next4_fu_756_p2();
    void thread_indvar_next8_fu_835_p2();
    void thread_indvar_next_fu_773_p2();
    void thread_indvar_phi_fu_458_p4();
    void thread_iv_address0();
    void thread_iv_ce0();
    void thread_iv_we0();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_key_we0();
    void thread_lastbuf_address0();
    void thread_lastbuf_ce0();
    void thread_lastbuf_we0();
    void thread_memptr_ARADDR();
    void thread_memptr_ARLEN();
    void thread_memptr_ARVALID();
    void thread_memptr_AWADDR();
    void thread_memptr_AWVALID();
    void thread_memptr_BREADY();
    void thread_memptr_RREADY();
    void thread_memptr_WVALID();
    void thread_memptr_blk_n_AR();
    void thread_memptr_blk_n_AW();
    void thread_memptr_blk_n_B();
    void thread_memptr_blk_n_R();
    void thread_memptr_blk_n_W();
    void thread_mode_read_read_fu_156_p2();
    void thread_phitmp_i_fu_886_p2();
    void thread_tmp_121_fu_617_p1();
    void thread_tmp_122_fu_607_p1();
    void thread_tmp_123_fu_597_p1();
    void thread_tmp_124_fu_846_p2();
    void thread_tmp_125_fu_858_p1();
    void thread_tmp_126_fu_779_p1();
    void thread_tmp_127_fu_683_p1();
    void thread_tmp_128_fu_666_p1();
    void thread_tmp_129_fu_649_p1();
    void thread_tmp_130_fu_784_p2();
    void thread_tmp_131_fu_688_p2();
    void thread_tmp_132_fu_796_p1();
    void thread_tmp_134_fu_700_p1();
    void thread_tmp_135_fu_802_p2();
    void thread_tmp_136_fu_705_p2();
    void thread_tmp_137_fu_819_p1();
    void thread_tmp_138_fu_814_p1();
    void thread_tmp_139_fu_717_p1();
    void thread_tmp_141_fu_723_p2();
    void thread_tmp_142_fu_841_p1();
    void thread_tmp_143_fu_740_p1();
    void thread_tmp_144_fu_735_p1();
    void thread_tmp_145_fu_762_p1();
    void thread_tmp_212_i_fu_880_p2();
    void thread_tmp_i_8_fu_875_p1();
    void thread_tmp_i_fu_863_p2();
    void thread_tmp_s_fu_627_p1();
    void thread_xorv_address0();
    void thread_xorv_ce0();
    void thread_xorv_d0();
    void thread_xorv_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
